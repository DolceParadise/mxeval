{"task_id": "MBJP/1", "language": "java", "completion": "        int n_row = cost.size();\n        int n_col = cost.get(0).size();\n        if (n_row <= 0 || n_col <= 0) return 0;\n\n        // Initialize DP matrix\n        int[][] dp = new int[n_row + 1][n_col + 1];\n\n        // Initialize first row and col with 0\n        for (int i = 0; i < n_row; i++) {\n            dp[i][0] = 0;\n        }\n        for (int j = 0; j < n_col; j++) {\n            dp[0][j] = 0;\n        }\n\n        // DP for each column\n        for (int j = 1; j < n_col + 1; j++) {\n            for (int i = 1; i < n_row + 1; i++) {\n                int current_row = cost.get(i \n}"}