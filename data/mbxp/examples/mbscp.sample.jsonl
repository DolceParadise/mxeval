{"task_id": "MBSCP/1", "language": "scala", "completion": "        val nCols = cost.length\n        val nRows = cost.length\n        val dp = new Array[Int](nCols)\n        dp = Array(nRows)\n        for (i in 0 until nCols) {\n            val row = cost[i]\n            val dp[i] = new Array[Int](nCols)\n            for (j in 0 until nCols) {\n                val col = cost[j]\n                val minCost = min(row(i), col(j))\n                dp[i][j] = minCost\n            }\n        }\n\n        val dp0 = dp.map(i => i(0))\n        val dp1 = dp.map(i => i(1))\n        val dp2 = dp.map(i => i(2))\n\n        val dp3 = Array(nCols).map(i => Array(nCols).fill(Integer.MAX_VALUE))\n\n        val dp3Row0 = dp3.map(i => i(0))\n        val dp"}