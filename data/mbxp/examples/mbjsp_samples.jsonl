{"task_id":"MBJSP\/1","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/2","completion":"  return testTup1.filter((elem) => testTup2.includes(elem));\n}","language":"javascript"}
{"task_id":"MBJSP\/3","completion":"  for(var i = 2; i < n; i++) {\n    if(n % i === 0) {\n      return true;\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/4","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/5","completion":"  \/\/ init dp array with all zeroes\n  let dp = Array(n + 1).fill(0);\n  \/\/ loop through the array (1 = 2 dominoes), fill up dp array\n  for (let i = 2; i <= n; i++) {\n    \/\/ if the index is 1 then the two values are equal, then set the value to 1\n    if (i % 2 === 0) dp[i] = 1;\n    \/\/ if the index is odd then we can only fill it with dominoes on the even index\n    else dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  return dp[n];\n}","language":"javascript"}
{"task_id":"MBJSP\/6","completion":"  return a ^ b;\n}","language":"javascript"}
{"task_id":"MBJSP\/7","completion":"  return text.match(\/\\w{4,}\/g) || [];\n}","language":"javascript"}
{"task_id":"MBJSP\/8","completion":"  return nums.map(x => x * x);\n}","language":"javascript"}
{"task_id":"MBJSP\/9","completion":"  let arr = str.split('');\n  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    let item = arr[i];\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[j] === item) {\n        result++;\n        arr.splice(j, 1);\n        arr.splice(i, 1);\n      }\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/10","completion":"    var newList = [];\n    var small = list1.sort(function (a, b) {\n        return a - b;\n    });\n    for (var i = 0; i < n; i++) {\n        newList.push(small[i]);\n    }\n    return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/11","completion":"  const index = s.lastIndexOf(ch)\n  return index === -1 ? s : s.slice(0, index) + s.slice(index + 1)\n}","language":"javascript"}
{"task_id":"MBJSP\/12","completion":"  return m.map(\n    (arr) => arr.sort((a, b) => a - b).reduce((acc, val) => acc + val, 0)\n  );\n}","language":"javascript"}
{"task_id":"MBJSP\/13","completion":"    let wordsMap = new Map();\n    let countMap = new Map();\n    words.forEach(function (word) {\n        if (wordsMap.has(word)) {\n            let currentCount = wordsMap.get(word);\n            wordsMap.set(word, currentCount + 1);\n        }\n        else {\n            wordsMap.set(word, 1);\n        }\n    });\n    for (let [word, count] of wordsMap) {\n        if (countMap.has(count)) {\n            let currentWordArray = countMap.get(count);\n            currentWordArray.push(word);\n            countMap.set(count, currentWordArray);\n        }\n        else {\n            countMap.set(count, [word]);\n        }\n    }\n    let maxCount = 0;\n    let maxWordArray = [];\n    for (let [count, wordArray] of countMap) {\n        if (count > maxCount) ","language":"javascript"}
{"task_id":"MBJSP\/14","completion":"    const volume = l * b * h;\n    return volume;\n}","language":"javascript"}
{"task_id":"MBJSP\/15","completion":"  return text.split(\/(?=[a-z])\/)\n}","language":"javascript"}
{"task_id":"MBJSP\/16","completion":"  \/\/ Write your solution here\n}","language":"javascript"}
{"task_id":"MBJSP\/17","completion":"\treturn a * 4;\n}","language":"javascript"}
{"task_id":"MBJSP\/18","completion":"  return string.replace(new RegExp(secondString, \"gi\"), \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/19","completion":"  return new Set(arraynums).size !== arraynums.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/20","completion":"  return (x % 7 === 0) || (x % 11 === 0) ? true : false\n}","language":"javascript"}
{"task_id":"MBJSP\/21","completion":"  const arr = []\n  const isMulitple = (num) => num % m === 0\n  const isMultipleOf = (num, i) => num % i === 0\n  for(let i = 1; i <= 100; i++) {\n    if(isMulitple(i) && isMultipleOf(i, n)) {\n      arr.push(i)\n    }\n  }\n  return arr\n}","language":"javascript"}
{"task_id":"MBJSP\/22","completion":"  if (!nums || !nums.length) {\n    return -1;\n  }\n  let hashTable = {};\n\n  for (let i = 0; i < nums.length; i++) {\n    hashTable[nums[i]] = 1;\n  }\n\n  for (let i = 0; i < nums.length; i++) {\n    if (hashTable[nums[i]] === 1) {\n      return nums[i];\n    }\n  }\n\n  return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/23","completion":"    if (list1.length < 2) {\n        return 0;\n    }\n    var maxSum = 0;\n    for (var i = 0; i < list1.length; i++) {\n        for (var j = 0; j < list1[i].length; j++) {\n            maxSum = list1[i][j] > list1[i][j + 1] ? list1[i][j] + list1[i][j + 1] : list1[i][j + 1] + list1[i][j];\n        }\n    }\n    return maxSum;\n}","language":"javascript"}
{"task_id":"MBJSP\/24","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/25","completion":"  let product = 1;\n\n  for (let i = 0; i < arr.length; i++) {\n    product *= (arr[i] === n ? 1 : arr[i]);\n  }\n\n  return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/26","completion":"  var testArr = [];\n  for (var i = 0; i < testList.length; i++) {\n    testArr = testList[i];\n  }\n  for (var j = 0; j < testArr.length; j++) {\n    if (testArr.length != k) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/27","completion":"  const result = [];\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].length) {\n      result.push(list[i].replace(\/[0-9]\/g, ''));\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/28","completion":"  if (k < 0 || k > n || n === k) {\n    return 0;\n  }\n  if (k === 0 || k === n - 1) {\n    return 1;\n  }\n\n  return binomialCoeff(n - 1, k - 1) + binomialCoeff(n - 1, k);\n}","language":"javascript"}
{"task_id":"MBJSP\/29","completion":"    let map = {};\n    for (let i = 0; i < arrSize; i++) {\n        if (!map.hasOwnProperty(arr[i])) {\n            map[arr[i]] = 0;\n        }\n        map[arr[i]] += 1;\n    }\n    let keys = Object.keys(map);\n    for (let j = 0; j < keys.length; j++) {\n        if (map[keys[j]] % 2 === 1) {\n            return Number(keys[j]);\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/30","completion":"  let counter = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j < s.length; j++) {\n      if (s[i] === s[j]) {\n        counter++;\n      }\n    }\n  }\n  return counter;\n}","language":"javascript"}
{"task_id":"MBJSP\/31","completion":"  const res = [];\n  nums.forEach(arr => {\n    let max = 0;\n    let maxInd = 0;\n    for (let i = 0; i < arr.length; i++) {\n      if (max < arr[i]) {\n        max = arr[i];\n        maxInd = i;\n      }\n    }\n    if (res[maxInd] === undefined) {\n      res.push(max);\n    } else {\n      res[maxInd]++;\n    }\n  });\n  const topK = res.sort((a, b) => b - a).slice(0, k);\n  return topK.map(item => item + 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/32","completion":"  if (n === 1) {\n    return 1;\n  }\n\n  for (let i = 2; i <= Math.sqrt(n); i += 1) {\n    if (n % i === 0) {\n      return maxPrimeFactors(n \/ i);\n    }\n  }\n\n  return n;\n}","language":"javascript"}
{"task_id":"MBJSP\/33","completion":"    let arr = [],\n        x = n;\n\n    while (x > 0) {\n        if (x % 2 === 1) {\n            arr.push(1);\n        } else {\n            arr.push(0);\n        }\n        x = Math.floor(x \/ 2);\n    }\n\n    return arr.reverse().join('');\n}","language":"javascript"}
{"task_id":"MBJSP\/34","completion":"  let i = 0;\n  while (ar[i] <= n) {\n    i++;\n  }\n  return n - ar[i - 1] + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/35","completion":"  \/\/ Your code here.\n}","language":"javascript"}
{"task_id":"MBJSP\/36","completion":"  let count = 0;\n  let result = 0;\n  let base = 10;\n  let start = (p \/ q) * (p \/ q);\n  if (n < 0) {\n    n = -n;\n  }\n  while (result < n) {\n    count = count + 1;\n    result = (p * base + q) \/ count;\n  }\n  return Math.floor(result \/ (n + 1));\n}","language":"javascript"}
{"task_id":"MBJSP\/37","completion":"  var array = [],\n      element;\n  for(var i = 0, len = mixedList.length; i < len; i++) {\n    element = mixedList[i];\n    if(typeof(element) === \"string\") {\n      array.push(parseInt(element, 10));\n    } else {\n      array.push(element);\n    }\n  }\n\n  return array.sort();\n}","language":"javascript"}
{"task_id":"MBJSP\/38","completion":"  var even = 0;\n  var odd = 0;\n  for (var i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 === 0) {\n      even += list1[i];\n    } else {\n      odd += list1[i];\n    }\n  }\n  return even \/ odd;\n}","language":"javascript"}
{"task_id":"MBJSP\/39","completion":"  let result = [];\n\n  for (let i = 0; i < s.length; i++) {\n    if (i === s.length - 1) {\n      result.push(s[i]);\n      break;\n    } else {\n      if (s[i] === s[i + 1]) {\n        result.push(s[i]);\n      } else {\n        result.push(s[i], s[i + 1]);\n      }\n    }\n  }\n  return result.join('');\n}","language":"javascript"}
{"task_id":"MBJSP\/40","completion":"  const obj = {};\n  for (const i of nums) {\n    for (const j of i) {\n      obj[j] = (obj[j] || 0) + 1;\n    }\n  }\n  return obj;\n}","language":"javascript"}
{"task_id":"MBJSP\/41","completion":"  return nums.filter(x => x % 2 == 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/42","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/43","completion":"  const pattern = \/\\b[a-z](_[a-z]*)\/g;\n  const result = text.match(pattern);\n\n  if (result) {\n    return `Found a match! ${result}`;\n  }\n\n  return \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/44","completion":"  if (text[0] === 'p' || text[0] === 'P') {\n    return 'Found a match!';\n  }\n  return 'Not matched!';\n}","language":"javascript"}
{"task_id":"MBJSP\/45","completion":"  return l.reduce((a, b) => {\n    if (a === 0) return b\n    return b === 0 ? a : getGcd(b, a % b)\n  }, 0)\n}","language":"javascript"}
{"task_id":"MBJSP\/46","completion":"    \/\/var x = data.map(function(y) {return y;});\n    var x = [];\n    for(var i = 0; i < data.length; i++) {\n        if(x.indexOf(data[i]) == -1) {\n            x.push(data[i]);\n        }\n    }\n    if(x.length == 1) {\n        return true;\n    }\n    return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/47","completion":"    let factorialOfA = 1\n    let factorialOfB = 1\n    let lastDigitOfB = 0\n    let lastDigitOfA = 0\n    for (let i = 1; i <= a; i++) {\n        factorialOfA *= i\n    }\n    for (let j = 1; j <= b; j++) {\n        factorialOfB *= j\n    }\n    lastDigitOfB = Math.floor(factorialOfB \/ factorialOfA)\n    lastDigitOfA = Math.floor(factorialOfA \/ factorialOfB)\n    return `${lastDigitOfB}`\n}","language":"javascript"}
{"task_id":"MBJSP\/48","completion":"  \/\/ TODO: Write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/49","completion":"  \/\/ Code here\n}","language":"javascript"}
{"task_id":"MBJSP\/50","completion":"  let min = Math.min(...inputList.map(list => list.length))\n  return inputList.find(list => list.length === min)\n}","language":"javascript"}
{"task_id":"MBJSP\/51","completion":"    return x == y && y == z;\n}","language":"javascript"}
{"task_id":"MBJSP\/52","completion":"  return (b * h) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/53","completion":"    return str.substr(0,1) === str.substr(str.length-1,1) ? \"Equal\" : \"Not Equal\";\n}","language":"javascript"}
{"task_id":"MBJSP\/54","completion":"    let min = myList[0];\n    let max = myList[0];\n\n    for (let i = 1; i < myList.length; i++) {\n        if (myList[i] > max) {\n            max = myList[i];\n        } else if (myList[i] < min) {\n            min = myList[i];\n        }\n    }\n\n    const bucket = new Array(max - min + 1);\n    for (let i = 0; i < myList.length; i++) {\n        let index = myList[i] - min;\n        if (bucket[index] === undefined) {\n            bucket[index] = 1;\n        } else {\n            bucket[index] += 1;\n        }\n    }\n    for (let i = 1; i < bucket.length; i++) {\n        if (bucket[i] === undefined) {\n","language":"javascript"}
{"task_id":"MBJSP\/55","completion":"    return a * Math.pow(r, n - 1) \/ (r - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/56","completion":"  const reverse = n.toString().split(\"\").reverse().join(\"\");\n  if (n < parseInt(reverse, 10)) {\n    return true;\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/57","completion":"  var max = 0;\n  for (let i = 0; i < n; i++) {\n    let sum = 0;\n    for (let j = i; j < n + i; j++) {\n      sum += arr[j];\n    }\n    if (sum > max) {\n      max = sum;\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/58","completion":"    return ((x > 0) ^ (y > 0));\n}","language":"javascript"}
{"task_id":"MBJSP\/59","completion":"    return ((n * 8) + 1) * ((n * 8) + 1) === (n * 8) * n;\n}","language":"javascript"}
{"task_id":"MBJSP\/60","completion":"  let maxLen = 1\n  for (let i = 0; i < arr.length - 1; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + n === arr[j]) {\n        maxLen = Math.max(maxLen, j - i)\n      }\n    }\n  }\n  return maxLen\n}","language":"javascript"}
{"task_id":"MBJSP\/61","completion":"    const numSub = Math.floor(s.length \/ n);\n    let sum = 0;\n    let count = 0;\n    for (let i = 0; i < numSub; i++) {\n        for (let j = i * n; j < (i + 1) * n; j++) {\n            sum = 0;\n            for (let k = j; k < j + n; k++) {\n                sum += s[k];\n            }\n            if (sum === n) {\n                count++;\n            }\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/62","completion":"  if (xs.length === 1) {\n    return xs[0]\n  }\n  const [head, ...tail] = xs;\n  return head < smallestNum(tail) ? head : smallestNum(tail);\n}","language":"javascript"}
{"task_id":"MBJSP\/63","completion":"  let maxDiff = -Infinity;\n  testList.forEach(([a, b]) => {\n    if (a < b) maxDiff = Math.max(maxDiff, b - a);\n  });\n  return maxDiff;\n}","language":"javascript"}
{"task_id":"MBJSP\/64","completion":"    let n = subjectmarks.length;\n    let marks = [];\n    for (let i = 0; i < n; i++) {\n        let mark = subjectmarks[i][1];\n        marks[mark - 1] = marks[mark - 1] || [];\n        marks[mark - 1].push(subjectmarks[i][0]);\n    }\n    let result = [];\n    for (let i = 0; i < marks.length; i++) {\n        result.push(marks[i].sort());\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/65","completion":"    if (!Array.isArray(dataList)) {\n        return dataList;\n    }\n    const listSum = dataList.reduce((acc, val) => {\n        return acc + recursiveListSum(val);\n    }, 0);\n    return listSum;\n}","language":"javascript"}
{"task_id":"MBJSP\/66","completion":"  return list.filter(function(x) {\n    return x > 0\n  }).length\n}","language":"javascript"}
{"task_id":"MBJSP\/67","completion":"    if (n < 1) return 0;\n    let bellNumbers = [1, 1];\n    for (let i = 2; i <= n; i++) {\n        let total = 0;\n        for (let j = 0; j < i; j++) {\n            total += bellNumbers[j] * bellNumbers[i - j - 1];\n        }\n        bellNumbers.push(total);\n    }\n    return bellNumbers[bellNumbers.length - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/68","completion":"  let i = 0;\n  while (i < a.length) {\n    if (a[i - 1] > a[i]) {\n      return false;\n    }\n    if (a[i - 1] < a[i]) {\n      return true;\n    }\n    i++;\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/69","completion":"  var sLen = s.length;\n  var lLen = l.length;\n  if (sLen > lLen) return false;\n  for (var i = 0; i < lLen; i++) {\n    if (l[i] === s[0]) {\n      var j = 1;\n      for (; j < sLen; j++) {\n        if (l[i + j] !== s[j]) {\n          break;\n        }\n      }\n      if (j === sLen) {\n        return true;\n      }\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/70","completion":"  if (input.length !== k) {\n    return \"All tuples have same length\";\n  } else if (input.length === k) {\n    return \"All tuples do not have same length\";\n  } else {\n    return \"All tuples have same length\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/71","completion":"  let gap = nums.length - 1;\n  while (gap >= 0) {\n    for (let i = 0; i < gap; i++) {\n      if (nums[i] > nums[i + 1]) {\n        let temp = nums[i];\n        nums[i] = nums[i + 1];\n        nums[i + 1] = temp;\n      }\n    }\n    gap--;\n  }\n  return nums;\n}","language":"javascript"}
{"task_id":"MBJSP\/72","completion":"    const sq = Math.sqrt(n);\n    return Math.pow(sq, 2) === n;\n}","language":"javascript"}
{"task_id":"MBJSP\/73","completion":"    let regex = \/[a-zA-Z]+|[\\*\\!\\?\\#\\(\\)\\{\\}:;\\\"\\'\\-\\+\\|\\.\\\\\\<\\>]\/gm;\n    let splittedText = text.split(regex);\n    return splittedText;\n}","language":"javascript"}
{"task_id":"MBJSP\/74","completion":"  const patternDict = {};\n\n  for (let pattern of patterns) {\n    if (patternDict[pattern] !== undefined) {\n      return false;\n    }\n    patternDict[pattern] = true;\n  }\n\n  for (let color of colors) {\n    if (patternDict[color]) {\n      return false;\n    }\n    patternDict[color] = true;\n  }\n\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/75","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/76","completion":"    let sum = 0;\n    for(let i=0; i < m; i++){\n        for(let j=0; j< n; j++){\n            if(i === 0 || j === 0 || i === m-1 || j === n-1){\n                sum += m * n;\n            } else {\n                sum += (i - 1) * (j - 1);\n            }\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/77","completion":"  var total = 0;\n  var n = (n + '').split('');\n  for (var i = 0; i < n.length; i++) {\n    var temp = parseInt(n[i]);\n    if (i % 2 !== 0) {\n      total += temp;\n    } else {\n      total -= temp;\n    }\n  }\n  return total === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/78","completion":"  return n.toString(2).split('0').filter(n => n.length % 2 === 1).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/79","completion":"  return s.length % 2 === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/80","completion":"  var a = 0.5;\n  var x = 1;\n  var y = 1;\n  var z = 1;\n  var sum = 0;\n\n  for (var i = 0; i < n; i++) {\n    var xx = x * x;\n    var yy = y * y;\n    var zz = z * z;\n    var aa = a * a;\n\n    x = (4 * x) + (yy + zz);\n    y = (4 * y) + (4 * xx) - (aa + zz);\n    z = (4 * z) - (4 * xx) + (4 * yy);\n    a = (4 * a) - (4 * xx) - (4 * yy) + (4 * zz);\n\n    sum += x;\n  }\n\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/81","completion":"  var tuple1 = testTup1;\n  var tuple2 = testTup2;\n\n  var tuples = [];\n\n  for (var i = 0; i < tuple1.length; i++) {\n    var innerTuple = [];\n    innerTuple.push(tuple1[i]);\n    innerTuple.push(tuple2[i]);\n    tuples.push(innerTuple);\n  }\n\n  return tuples;\n}","language":"javascript"}
{"task_id":"MBJSP\/82","completion":"  return Math.pow(r, 3) \/ (3 * Math.PI)\n}","language":"javascript"}
{"task_id":"MBJSP\/83","completion":"    var i,\n        ch = '';\n    for (i = 0; i < strr.length; i += 1) {\n        ch += strr[i];\n    }\n    return ch;\n}","language":"javascript"}
{"task_id":"MBJSP\/84","completion":"    let count = 1;\n    let counter = 1;\n    let next = 1;\n    let result = 1;\n\n    while (count < n) {\n        result = next;\n        next = counter + count;\n        counter = result;\n        count++;\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/85","completion":"  return 4 * (Math.PI * r * r);\n}","language":"javascript"}
{"task_id":"MBJSP\/86","completion":"  return 6 * Math.pow(3, n - 1) - 6 * n - 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/87","completion":"  const result = {};\n\n  for (let key in dict1) {\n    result[key] = dict1[key];\n  }\n  for (let key in dict2) {\n    result[key] = dict2[key];\n  }\n  for (let key in dict3) {\n    result[key] = dict3[key];\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/88","completion":"  \/\/ Your code goes here!\n}","language":"javascript"}
{"task_id":"MBJSP\/89","completion":"    var number = parseInt(n, 10);\n    if (number <= 0) {\n        return undefined;\n    }\n    var result = Math.abs(number - 1) + 1;\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/90","completion":"    var max_len = 0;\n    var max_word = '';\n    for(var i = 0; i < list1.length; i++) {\n        var word = list1[i];\n        if(word.length > max_len) {\n            max_len = word.length;\n            max_word = word;\n        }\n    }\n    console.log(max_len, max_word);\n}","language":"javascript"}
{"task_id":"MBJSP\/91","completion":"  for (let i = 0; i < str1.length; i++) {\n    for (let j = i; j < str1.length; j++) {\n      if (subStr === str1.slice(i, j + 1)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/92","completion":"    if (n.length <= 1) {\n        return false\n    } else {\n        let first = n[0];\n        let last = n[n.length - 1];\n        let middle = (parseInt(first) + parseInt(last)) \/ 2\n        return isUndulating(n.substring(1, n.length - 1)) || n === middle ? true : false\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/93","completion":"  return (b === 0) ? 1 : a * power(a, b - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/94","completion":"    let min = testList[0][1];\n    for (let i = 1; i < testList.length; i++) {\n        if (testList[i][1] < min) {\n            min = testList[i][1];\n        }\n    }\n    return testList[testList.findIndex(element => element[1] === min)][0];\n}","language":"javascript"}
{"task_id":"MBJSP\/95","completion":"    if (!Array.isArray(lst) || lst.length === 0) {\n        return 0;\n    }\n    let count = 1;\n    let min = lst[0].length;\n    let tempLst = lst.slice(1);\n    while (tempLst.length > 0) {\n        const tempLen = tempLst[0].length;\n        if (tempLen > min) {\n            break;\n        }\n        count++;\n        min = tempLen;\n        tempLst = tempLst.slice(1);\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/96","completion":"  let count = 0;\n  for (let i = 1; i <= Math.sqrt(n); i++) {\n    if (n % i === 0) {\n      if (i === Math.sqrt(n)) {\n        count++;\n      } else if (i * i === n) {\n        count++;\n      } else {\n        count += 2;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/97","completion":"  const set = new Set();\n  const count = {};\n  for (let i = 0; i < list1.length; i += 1) {\n    const list = list1[i];\n    for (let j = 0; j < list.length; j += 1) {\n      const number = list[j];\n      if (!set.has(number)) {\n        set.add(number);\n      }\n    }\n  }\n  set.forEach(number => count[number] = 1 + (count[number] || 0));\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/98","completion":"  let result = 0;\n  for (let i = 0; i < numbers.length; i++) {\n    result *= numbers[i];\n  }\n  return result \/ numbers.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/99","completion":"  let binary = '';\n  while (n > 0) {\n    const remainder = n % 2;\n    binary = remainder + binary;\n    n = Math.floor(n \/ 2);\n  }\n  return binary;\n}","language":"javascript"}
{"task_id":"MBJSP\/100","completion":"  if (typeof num !== 'number') return false;\n  let base = (Math.pow(10, (Math.log10(num) \/ 2)) | 0) + 1;\n  let pal = 0;\n  for (let i = base; i > 0; i--) {\n    pal = pal * 10 + i % 10;\n    pal = pal > num ? pal % (pal \/ 10) : pal;\n    if (pal > num) break;\n    if (pal === num) return pal;\n  }\n  return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/101","completion":"  const sortedArr = arr.sort();\n  const idx = sortedArr.length - n;\n  return arr[idx];\n}","language":"javascript"}
{"task_id":"MBJSP\/102","completion":"  const upperChars = word.match(\/([A-Z])\/g);\n  return word.replace(\n    \/([A-Z])\/,\n    (char, index) =>\n      `${upperChars[index - 1].toLowerCase()}${char.toLowerCase()}`\n  );\n}","language":"javascript"}
{"task_id":"MBJSP\/103","completion":"    \/\/ TODO: Your code goes here\n    return 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/104","completion":"  return inputList.map((list) => list.sort());\n}","language":"javascript"}
{"task_id":"MBJSP\/105","completion":"    if (lst.length === 0) return 0;\n    let count = 0;\n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] === true) count++;\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/106","completion":"    if (testTup.length === 0) {\n        return testList;\n    } else if (testList.length === 0) {\n        return testTup;\n    } else {\n        let result = [];\n        for (let i = 0; i < testTup.length; i++) {\n            result.push(testTup[i] + testList[i]);\n        }\n        return result;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/107","completion":"    let count = 0;\n    for (let i = l; i <= r; i++) {\n        if (i.toString(16).length === 1) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/108","completion":"  let arr = [];\n\n  arr = arr.concat(num1, num2, num3);\n  const newArr = [...arr].sort((a, b) => a - b);\n  return newArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/109","completion":"    let cnt = 0;\n    let i = 0;\n    let j = 0;\n    while (i < s.length) {\n        if (s[i] === s[j]) {\n            i++;\n            j++;\n        } else {\n            cnt++;\n            j++;\n        }\n    }\n    return cnt;\n}","language":"javascript"}
{"task_id":"MBJSP\/110","completion":"  let res = [];\n  for (let i = strtVal; i <= stopVal; i++) {\n    if (!testList.some((list) => list[0] === i)) {\n      res.push([i, i]);\n    }\n  }\n  return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/111","completion":"    var newList = [];\n    for(var i = 0; i < nestedlist.length; i++){\n      newList.push(commonElementInNestedlist(nestedlist[i]));\n    }\n    return [...new Set(newList)];\n}","language":"javascript"}
{"task_id":"MBJSP\/112","completion":"    return diameter * 2 + height * 2\n}","language":"javascript"}
{"task_id":"MBJSP\/113","completion":"    if (isNaN(parseInt(text))) return false;\n    else return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/114","completion":"  \/\/ write your code here\n  let freq = {};\n  let result = [];\n  let first = testList[0];\n  for (let i = 0; i < first.length; i++) {\n    if (freq[first[i]]) freq[first[i]]++;\n    else freq[first[i]] = 1;\n  }\n  for (let i = 0; i < testList.length; i++) {\n    let current = testList[i];\n    let freqs = [];\n    for (let j = 0; j < current.length; j++) {\n      freqs.push(freq[current[j]]);\n    }\n    let tuple = [...current, ...freqs];\n    result.push(tuple);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/115","completion":"  return !list1.some(val => {\n    if (val instanceof Set) {\n      return val.size > 0\n    } else if (typeof val === 'object') {\n      return Object.keys(val).length > 0\n    }\n    return true\n  })\n}","language":"javascript"}
{"task_id":"MBJSP\/116","completion":"  const { length } = nums;\n  let result = 0;\n  let sign = 1;\n  for (let i = length - 1; i >= 0; i -= 1) {\n    result += nums[i] * sign;\n    sign *= 10;\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/117","completion":"  let result = [];\n  for (let item of testList) {\n    for (let number of item) {\n      result.push((parseFloat(number)));\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/118","completion":"  let result = [];\n  let index = 0;\n  let isEnd = false;\n  let stringArr = string.split(\"\");\n  while (!isEnd && index < stringArr.length) {\n    if (stringArr[index] === \"(\") {\n      index++;\n      let count = 0;\n      while (\n        count < 2 &&\n        index < stringArr.length &&\n        stringArr[index] != \")\"\n      ) {\n        count++;\n        index++;\n      }\n      if (index >= stringArr.length) {\n        isEnd = true;\n        result.pop();\n      } else if (count >= 2) {\n        result.push(stringArr[index - 2]);\n      } else {\n        result.push(stringArr[index]);\n      }\n    } else {\n      result.push(stringArr[index]);\n    }\n    index++;\n  }\n  return result;","language":"javascript"}
{"task_id":"MBJSP\/119","completion":"  let start = 0;\n  let end = arr.length - 1;\n  let index = -1;\n\n  while (start <= end) {\n    const mid = Math.floor((start + end) \/ 2);\n    if (n === arr[mid]) {\n      index = mid;\n      end = mid - 1;\n    } else if (n < arr[mid]) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n  return index;\n}","language":"javascript"}
{"task_id":"MBJSP\/120","completion":"    let maxProduct = list1[0][0];\n    for (let i = 0; i < list1.length; i++) {\n        let currentProduct = maxProduct;\n        for (let j = 0; j < list1[i].length; j++) {\n            let currentProductTemp = currentProduct * list1[i][j];\n            if (currentProductTemp > maxProduct) {\n                currentProduct = currentProductTemp;\n            } else if (currentProductTemp === maxProduct) {\n                currentProduct = Math.max(currentProduct, list1[i][j]);\n            }\n        }\n        maxProduct = Math.max(maxProduct, currentProduct);\n    }\n    return maxProduct;\n}","language":"javascript"}
{"task_id":"MBJSP\/121","completion":"  \/\/ first check for the count\n  if (count === 0) {\n    return false;\n  }\n\n  \/\/ we'll check the sum of the first element\n  if (a[count] === sum) {\n    return true;\n  }\n\n  \/\/ we check the rest of the array to see if we need to look\n  \/\/ for a triplet\n  for (let i = count + 1; i < n; i++) {\n    if (a[i] + a[count] === sum) {\n      return true;\n    }\n  }\n\n  \/\/ if the last check failed, we can return false\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/122","completion":"  let num = 1;\n  let counter = 0;\n\n  while (true) {\n    let sum = num + counter;\n    if (sum > n) {\n      counter++;\n    } else if (sum < n) {\n      counter--;\n    } else {\n      break;\n    }\n\n    num++;\n  }\n\n  return num;\n}","language":"javascript"}
{"task_id":"MBJSP\/123","completion":"  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let num = i;\n    let sumOfDivisors = 0;\n    while (num !== 0) {\n      let rem = num % 10;\n      sumOfDivisors += rem;\n      num = parseInt(num \/ 10, 10);\n    }\n    if (i !== sumOfDivisors) {\n      continue;\n    }\n    num = i;\n    sumOfDivisors = 0;\n    while (num !== 0) {\n      let rem = num % 10;\n      sumOfDivisors += rem;\n      num = parseInt(num \/ 10, 10);\n    }\n    if (i === sumOfDivisors) {\n      sum += i;\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/125","completion":"    let count0 = 0\n    let count1 = 0\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '0') {\n            count0++\n        } else if (string[i] === '1') {\n            count1++\n        }\n    }\n    let maxLen = Math.max(count0, count1)\n    let maxDiff = Math.abs(count0 - count1)\n    let left = 0\n    let right = string.length - 1\n    while (left < right) {\n        let mid = Math.floor((left + right) \/ 2)\n        if (string[mid] === '0') {\n            maxDiff = Math.max(maxDiff, Math.abs(count0 - mid))\n            count0 = Math.max(count0, mid)\n            left = mid + 1\n        } else if (","language":"javascript"}
{"task_id":"MBJSP\/126","completion":"    if (b > a) {\n        [a, b] = [b, a];\n    }\n    const divisors = [];\n    for (let i = a; i <= b; i++) {\n        const rest = b % i;\n        if (rest === 0) {\n            divisors.push(i);\n        }\n    }\n    return divisors.reduce((acc, el) => acc + el, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/127","completion":"  return x * y;\n}","language":"javascript"}
{"task_id":"MBJSP\/128","completion":"  const words = str.split(\" \");\n  const result = [];\n\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].length > n) {\n      result.push(words[i]);\n    }\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/129","completion":"  var matrix = myMatrix[0].map(function(x, i) {\n    return myMatrix.map(function(x) {\n      return x[i];\n    });\n  });\n\n  return (\n    checkMagicSquare(matrix) &&\n    checkMagicSquare(transpose(matrix)) &&\n    checkMagicSquare(invert(matrix)) &&\n    checkMagicSquare(add(matrix))\n  );\n}","language":"javascript"}
{"task_id":"MBJSP\/130","completion":"  const freqCounter = {};\n  let maxOccurrence = 0;\n  let maxNum = 0;\n\n  for (let num of nums) {\n    freqCounter[num] = (freqCounter[num] || 0) + 1;\n    if (freqCounter[num] > maxOccurrence) {\n      maxOccurrence = freqCounter[num];\n      maxNum = num;\n    }\n  }\n\n  return [maxNum, maxOccurrence];\n}","language":"javascript"}
{"task_id":"MBJSP\/131","completion":"    \/\/ Declare variable for string\n    \/\/ split string to array\n    \/\/ iterate over array\n    \/\/ if char is vowel\n    \/\/ swap char\n    \/\/ join array\n    \/\/ return joined string\n    let str2 = '';\n    let arr = str1.split('');\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 'a' || arr[i] === 'A' || arr[i] === 'e' || arr[i] === 'E' || arr[i] === 'i' || arr[i] === 'I' || arr[i] === 'o' || arr[i] === 'O' || arr[i] === 'u' || arr[i] === 'U') {\n            [arr[i], arr[arr.length - 1 - i]] = [arr[arr.length - 1 - i],","language":"javascript"}
{"task_id":"MBJSP\/132","completion":"  var s = \"\";\n  for (let i = 0; i < tup1.length; i++) {\n    if (i === 0) {\n      s += tup1[i];\n    } else {\n      s += i % 2 === 0 ? tup1[i].toLowerCase() : tup1[i].toUpperCase();\n    }\n  }\n  return s;\n}","language":"javascript"}
{"task_id":"MBJSP\/133","completion":"\treturn nums.filter(num => num < 0).reduce((sum, num) => sum + num, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/134","completion":"  let result = \"EVEN\";\n  for (let i = 0; i < p; i++) {\n    const element = arr[arr.length - 1];\n    arr.pop();\n    if (element % 2 == 0) {\n      result = \"EVEN\";\n    } else {\n      result = \"ODD\";\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/135","completion":"    let hexagonalNum = Math.pow(n, 2) - n\n    return hexagonalNum\n}","language":"javascript"}
{"task_id":"MBJSP\/136","completion":"  let tax = units * 0.18;\n  let total = units + tax;\n  return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/137","completion":"  let count = 0;\n\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === 0) {\n      count++;\n    }\n  }\n\n  return count \/ nums.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/138","completion":"    if (n === 0) {\n        return false;\n    }\n    if (n === 1) {\n        return true;\n    }\n\n    let number = Math.floor(Math.log2(n));\n    let num2 = 2 ** number;\n    let remainder = n % num2;\n    let result = isSumOfPowersOfTwo(Math.floor(n \/ num2));\n    return result || isSumOfPowersOfTwo(Math.floor(remainder \/ num2));\n}","language":"javascript"}
{"task_id":"MBJSP\/139","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/140","completion":"  var count = {};\n\n  for (var i = 0; i < testList.length; i++) {\n    var single = testList[i];\n    for (var j = 0; j < single.length; j++) {\n      if (!count[single[j]]) count[single[j]] = 0;\n      count[single[j]]++;\n    }\n  }\n\n  var result = [];\n\n  for (var key in count) {\n    if (count[key] === 1) result.push(parseInt(key));\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/141","completion":"  let curr = '';\n  let next = '';\n  let idx = 0;\n\n  for (let i = nums.length; i >= 1; i--) {\n    curr = nums[i - 1];\n    next = nums[i];\n\n    if (curr > next) {\n      [nums[i - 1], nums[i]] = [nums[i], nums[i - 1]];\n      idx = i;\n    }\n  }\n\n  return nums;\n}","language":"javascript"}
{"task_id":"MBJSP\/142","completion":"  let counts = 0\n  let index1 = 0\n  let index2 = 0\n  let index3 = 0\n  while (index1 < list1.length && index2 < list2.length && index3 < list3.length) {\n    if (list1[index1] === list2[index2] && list1[index1] === list3[index3]) {\n      counts += 1\n      index1 += 1\n      index2 += 1\n      index3 += 1\n    } else if (list2[index2] < list3[index3]) {\n      index2 += 1\n    } else {\n      index3 += 1\n    }\n  }\n  return counts\n}","language":"javascript"}
{"task_id":"MBJSP\/143","completion":"    var count = 0;\n    for (var i = 0; i < input.length; i++) {\n        if (input[i].length % 2 == 0) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/144","completion":"    const len = arr.length;\n    if (len < 2) return 0;\n    let start = 0,\n        end = 1,\n        diffSum = 0;\n    for (let i = 0; i < len; i++) {\n        for (let j = i + 1; j < len; j++) {\n            diffSum += Math.abs(arr[i] - arr[j]);\n            if (diffSum === n) return [arr[start], arr[end]];\n        }\n        if (diffSum > n) {\n            end += 1;\n            diffSum = 0;\n        } else {\n            start += 1;\n        }\n    }\n    return 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/145","completion":"    let first = Math.abs(arr[0] - n);\n    let second = Math.abs(arr[1] - n);\n    let maxDiff = Math.abs(arr[0] - arr[1]);\n\n    for (let i = 2; i < arr.length; i++) {\n        let currentDiff = Math.abs(arr[i] - n);\n\n        if (currentDiff > maxDiff) {\n            maxDiff = currentDiff;\n        }\n\n        if (arr[i] < n) {\n            first = Math.abs(arr[i] - n);\n        } else if (arr[i] > n) {\n            second = Math.abs(arr[i] - n);\n        }\n    }\n\n    console.log(first);\n    console.log(second);\n}","language":"javascript"}
{"task_id":"MBJSP\/146","completion":"  let sum = 0;\n  for (let i = 0; i < str1.length; i++) {\n    sum += str1.charCodeAt(i);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/147","completion":"    \/\/ Write your solution here\n    \/\/return tri[0][0]\n}","language":"javascript"}
{"task_id":"MBJSP\/148","completion":"    let firstPart = n % 10, secondPart = Math.floor(n \/ 10);\n    return firstPart + secondPart;\n}","language":"javascript"}
{"task_id":"MBJSP\/149","completion":"  let start = 0;\n  let maxLen = 0;\n  const memo = {};\n  const dp = [];\n  for (let i = 0; i < n; i++) {\n    dp[i] = 1;\n    for (let j = 0; j < i; j++) {\n      if (arr[i] - arr[j] === 1) {\n        dp[i] = Math.max(dp[i], dp[j] + 1);\n      }\n    }\n  }\n  for (let i = 0; i < n; i++) {\n    memo[i] = dp[i];\n    if (dp[i] > maxLen) {\n      maxLen = dp[i];\n      start = i;\n    }\n  }\n  if (maxLen === n) return 0;\n  return dp[start];\n}","language":"javascript"}
{"task_id":"MBJSP\/150","completion":"    return (a <= b && b <= c) || (a >= b && b >= c);\n}","language":"javascript"}
{"task_id":"MBJSP\/151","completion":"  \/\/ let isCoPrime = 0;\n  \/\/ let max = Math.max(x, y);\n  \/\/ let min = Math.min(x, y);\n  \/\/ for (let i = 1; i <= max; i++) {\n  \/\/   if (x % i === 0 && y % i === 0) {\n  \/\/     isCoPrime = 1;\n  \/\/   }\n  \/\/ }\n  \/\/ if (isCoPrime === 1) {\n  \/\/   return 'true';\n  \/\/ } else {\n  \/\/   return 'false';\n  \/\/ }\n  \/\/ return false;\n  if (x === 1 || y === 1) {\n    return true;\n  } else {\n    for (let i = 2; i <= Math.sqrt(x); i++) {\n      if (x % i === 0 && y %","language":"javascript"}
{"task_id":"MBJSP\/152","completion":"  if (x.length < 2) {\n    return x;\n  }\n\n  const middleIndex = Math.floor(x.length \/ 2);\n  const left = x.slice(0, middleIndex);\n  const right = x.slice(middleIndex);\n\n  return merge(mergeSort(left), mergeSort(right));\n}","language":"javascript"}
{"task_id":"MBJSP\/153","completion":"  let x = (c * (b ** 2) - (4 * a * c)) \/ (2 * a);\n  let y = (a * (b ** 2) - (4 * b * c)) \/ (2 * b);\n  return [x, y];\n}","language":"javascript"}
{"task_id":"MBJSP\/154","completion":"    \/\/ const res = [];\n    \/\/ nums.forEach((value, index) => {\n    \/\/     value.forEach((ele, index) => {\n    \/\/         if (index === n) {\n    \/\/             res.push(ele);\n    \/\/         }\n    \/\/     });\n    \/\/ });\n    \/\/ return res;\n\n    return nums.flat().filter((ele, index) => index === n);\n}","language":"javascript"}
{"task_id":"MBJSP\/155","completion":"    return n ^ (n & (n - 1));\n}","language":"javascript"}
{"task_id":"MBJSP\/156","completion":"  const tupleInt = tupleStr.map(([str, ...rest]) => {\n    const num = Number(str);\n    return [num, ...rest];\n  });\n  return tupleInt;\n}","language":"javascript"}
{"task_id":"MBJSP\/157","completion":"  let count = 0;\n  let countArray = [];\n\n  const recurse = (list2) => {\n    if (count === 0) {\n      return countArray.push([count, list2]);\n    }\n    countArray.push([count, countArray[count - 1][1]]);\n    return countArray.push([count + 1, list2]);\n  };\n\n  for (let i = 0; i < list1.length; i++) {\n    recurse(list1[i]);\n    count++;\n  }\n\n  return countArray;\n}","language":"javascript"}
{"task_id":"MBJSP\/158","completion":"  var count = 0;\n\n  for (var i = 0; i < arr.length - k + 1; i++) {\n    var sum = 0;\n\n    for (var j = i; j < i + k; j++) {\n      sum += arr[j];\n    }\n\n    if (sum === n) {\n      count++;\n    }\n  }\n\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/159","completion":"  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  let season;\n  months.forEach(m => {\n    if (m.toLowerCase() === month.toLowerCase()) season = 'winter';\n  });\n  if (days < 21) season = 'summer';\n  if (days < 26) season = 'autumn';\n  if (days < 31) season = 'winter';\n  if (days < 39) season = 'spring';\n  if (days < 45) season = 'summer';\n  if (days < 51) season = 'autumn';\n  if (days < 57) season = 'winter';\n  if (days < 61) season = 'spring';\n  if (days < 68) season = ","language":"javascript"}
{"task_id":"MBJSP\/160","completion":"  let x = 0;\n  let y = 0;\n\n  const getSign = (num) => {\n    if (num > 0) return \"+\";\n    if (num < 0) return \"-\";\n    return \"0\";\n  };\n\n  while (x * x + y * y !== n) {\n    x = (a * x + b * y) % n;\n    y = (a * y + b * x) % n;\n  }\n\n  return `${getSign(x)}${x}, ${getSign(y)}${y}`;\n}","language":"javascript"}
{"task_id":"MBJSP\/161","completion":"    let arr1 = [...list1]\n    let arr2 = [...list2]\n\n    \/\/ Remove from arr1 those elements present in arr2\n    for (let i = 0; i < arr1.length; i++) {\n        let index = arr2.indexOf(arr1[i])\n        arr1.splice(i, 1)\n        if (index > -1) arr2.splice(index, 1)\n    }\n\n    return arr1\n}","language":"javascript"}
{"task_id":"MBJSP\/162","completion":"  \/\/ your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/163","completion":"    var a = (Math.pow(s, 2)) * Math.sin(Math.PI * s \/ l) \/ (4 * Math.tan(Math.PI \/ 4));\n    return Math.abs(a);\n}","language":"javascript"}
{"task_id":"MBJSP\/164","completion":"  var sum = 0;\n\n  for (var i = 1; i <= num1; i++) {\n    if (num1 % i === 0 && num2 % i === 0) {\n      sum += i;\n    }\n  }\n\n  if (num1 === sum && num2 === sum) {\n    return true;\n  } else {\n    return false;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/165","completion":"  const string = str1.toLowerCase();\n  const count = {};\n  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n    if (count[char]) {\n      count[char] += 1;\n    } else {\n      count[char] = 1;\n    }\n  }\n  return Object.values(count).reduce((acc, val) => acc + val, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/166","completion":"    let xor = 0;\n    a.forEach(element => {\n        xor ^= element;\n    });\n    return xor === n ? a.length : 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/167","completion":"  let power = Math.ceil(Math.log2(n))\n  let result = 2 ** power\n  return result > n ? result : 1\n}","language":"javascript"}
{"task_id":"MBJSP\/168","completion":"    let count = 0;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] === x) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/169","completion":"  if (n === 1) {\n    return 1;\n  }\n\n  return getPell(n - 1) * (3 * n - 1) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/170","completion":"    var sum = 0;\n    for (var i = m; i <= n; i++) {\n        sum += list1[i];\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/171","completion":"  if (a % 2 === 0) {\n    return (6 * a * a) \/ 2;\n  } else {\n    return (6 * a * a) \/ 2;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/172","completion":"  const str = \"std\";\n\n  \/\/ Solution 1\n  \/\/ let stdCount = 0;\n\n  \/\/ for (let i = 0; i < s.length; i++) {\n  \/\/   if (str === s.charAt(i)) {\n  \/\/     stdCount++;\n  \/\/   }\n  \/\/ }\n\n  \/\/ return stdCount;\n\n  \/\/ Solution 2\n  \/\/ let stdCount = 0;\n  \/\/ let stdIndex = -1;\n\n  \/\/ for (let i = 0; i < s.length; i++) {\n  \/\/   if (str === s.charAt(i)) {\n  \/\/     stdCount++;\n  \/\/     stdIndex = i;\n  \/\/   }\n  \/\/ }\n\n  \/\/ return stdIndex === -1 ? 0 : stdCount;\n\n  \/\/ Solution 3\n  let stdCount = 0;\n  let stdIndex = -","language":"javascript"}
{"task_id":"MBJSP\/173","completion":"    let result = '';\n    for (let i = 0; i < text.length; i++) {\n        if (isAlphaNumeric(text[i])) {\n            result += text[i];\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/174","completion":"  const obj = {};\n  for (let i = 0; i < l.length; i++) {\n    const key = l[i][0];\n    if (!obj[key]) {\n      obj[key] = [];\n    }\n    obj[key].push(l[i][1]);\n  }\n  return obj;\n}","language":"javascript"}
{"task_id":"MBJSP\/175","completion":"  \/\/ TODO: Your code here\n  return true\n}","language":"javascript"}
{"task_id":"MBJSP\/176","completion":"    let p = a + b + c;\n    return p;\n}","language":"javascript"}
{"task_id":"MBJSP\/177","completion":"  let result = [];\n\n  for (let i = l; i <= r; i++) {\n    for (let j = l; j <= r; j++) {\n      if (i * j >= l && i * j <= r) {\n        result.push(i * j);\n      }\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/178","completion":"    const matchedString = patterns.map(pattern => {\n        let patternRegex = new RegExp(pattern, \"g\");\n        return text.match(patternRegex) ? \"Matched!\" : \"Not Matched!\"\n    });\n\n    return matchedString.toString().replace(\/,\/g, \" \");\n}","language":"javascript"}
{"task_id":"MBJSP\/179","completion":"  return x === 0 || x === 1 || x === 2 || x === 3 || x === 4 || x === 5 || x === 6 || x === 7 || x === 8 || x === 9 || x === 10 || x === 11 || x === 12 || x === 13;\n}","language":"javascript"}
{"task_id":"MBJSP\/180","completion":"  let result = 0;\n\n  const lat1 = parseFloat(slat);\n  const lat2 = parseFloat(elat);\n  const lon1 = parseFloat(slon);\n  const lon2 = parseFloat(elon);\n\n  const R = 6371e3; \/\/ metres\n  const \u03c61 = lat1 * Math.PI \/ 180; \/\/ \u03c6, \u03bb in radians\n  const \u03c62 = lat2 * Math.PI \/ 180;\n  const \u0394\u03c6 = (lat2 - lat1) * Math.PI \/ 180;\n  const \u0394\u03bb = (lon2 - lon1) * Math.PI \/ 180;\n\n  const a = Math.sin(\u0394\u03c6 \/ 2) * Math.sin(\u0394\u03c6 \/ 2) +\n    Math.cos(\u03c61) * Math.cos(\u03c62) *\n    Math.sin(\u0394\u03bb \/ 2) * Math.sin(\u0394\u03bb \/ 2);","language":"javascript"}
{"task_id":"MBJSP\/181","completion":"  if (n === 0) {\n    return '';\n  }\n  if (arr.length === 1) {\n    return arr[0];\n  }\n  const strArr = arr.reduce((accum, cur, idx, arr) => {\n    return accum.concat(cur.split(''));\n  }, []);\n  let prefix = '';\n  for (let i = 0; i < strArr[n - 1].length; i++) {\n    const currentChar = strArr[n - 1][i];\n    const prevChar = strArr[n - 2][i];\n    if (currentChar === prevChar) {\n      prefix += currentChar;\n    } else {\n      break;\n    }\n  }\n  return prefix;\n}","language":"javascript"}
{"task_id":"MBJSP\/182","completion":"  \/\/ Solution code here...\n}","language":"javascript"}
{"task_id":"MBJSP\/183","completion":"  \/\/ write your code in JavaScript (Node.js 8.9.4)\n}","language":"javascript"}
{"task_id":"MBJSP\/184","completion":"  let greaterThan = false;\n  let i = 0;\n  while (i < list.length && !greaterThan) {\n    if (list[i] > num) {\n      greaterThan = true;\n    }\n    i += 1;\n  }\n  return greaterThan;\n}","language":"javascript"}
{"task_id":"MBJSP\/185","completion":"  let focus = [0, 0];\n  let d = b ** 2 - 4 * a * c;\n  if (d < 0) return focus;\n  if (d === 0) {\n    focus[0] = (-b + Math.sqrt(d)) \/ (2 * a);\n    focus[1] = focus[0];\n  } else {\n    focus[0] = (-b + Math.sqrt(d)) \/ (2 * a);\n    focus[1] = (-b - Math.sqrt(d)) \/ (2 * a);\n  }\n  return focus;\n}","language":"javascript"}
{"task_id":"MBJSP\/186","completion":"  var textLen = text.length,\n      index = 0,\n      patternLen = patterns.length;\n\n  while (index < textLen) {\n    for (var patternIndex = 0; patternIndex < patternLen; patternIndex++) {\n      var pattern = patterns[patternIndex];\n\n      if (text.indexOf(pattern) === index) {\n        return \"Matched!\";\n      }\n    }\n\n    index = index + 1;\n  }\n\n  return \"Not Matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/187","completion":"  const dp = [];\n  const lcs = [];\n\n  for (let i = 0; i <= m; i += 1) {\n    dp[i] = [];\n    for (let j = 0; j <= n; j += 1) {\n      dp[i][j] = 0;\n    }\n  }\n\n  for (let i = 1; i <= m; i += 1) {\n    for (let j = 1; j <= n; j += 1) {\n      if (x[i - 1] === y[j - 1]) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n        lcs.push(dp[i - 1][j - 1]);\n      } else {\n        dp[i][j] = Math.max(dp[i][j - 1], dp[i","language":"javascript"}
{"task_id":"MBJSP\/188","completion":"    \/\/ if (n <= 0) {\n    \/\/     return 0;\n    \/\/ }\n    \/\/ if (n <= 1) {\n    \/\/     return 1;\n    \/\/ }\n    \/\/ let n2 = n * n;\n    \/\/ if (n2 % 4 === 0) {\n    \/\/     return false;\n    \/\/ }\n    \/\/ let sqrt = Math.sqrt(n);\n    \/\/ return sqrt * sqrt;\n    \/\/ if (n === 0) {\n    \/\/     return 0;\n    \/\/ }\n    \/\/ if (n === 1) {\n    \/\/     return 1;\n    \/\/ }\n    \/\/ if (n === 2) {\n    \/\/     return 4;\n    \/\/ }\n    \/\/ if (n === 3) {\n    \/\/     return 9;\n    \/\/ }\n    \/\/ return","language":"javascript"}
{"task_id":"MBJSP\/189","completion":"    var i;\n    for(i = 0; i < n; i++) {\n        if(arr[i] <= 0 || arr[i] > n) {\n            return i;\n        }\n    }\n    for(i = 0; i < n; i++) {\n        var x = Math.abs(arr[i]);\n        if(arr[x-1] > 0) {\n            arr[x-1] = -arr[x-1];\n        }\n    }\n    for(i = 0; i < n; i++) {\n        if(arr[i] > 0) {\n            return i+1;\n        }\n    }\n    return n+1;\n}","language":"javascript"}
{"task_id":"MBJSP\/190","completion":"  return (\n    Math.abs(x2 - x1) * Math.abs(y2 - y1) +\n    (x2 - x1 === 0 && y2 - y1 === 0 ? 0 : 1)\n  );\n}","language":"javascript"}
{"task_id":"MBJSP\/191","completion":"    let monthNumber = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let monthNumberObj = {\n        January: \"01\", February: \"02\", March: \"03\", April: \"04\", May: \"05\", June: \"06\", July: \"07\", August: \"08\", September: \"09\", October: \"10\", November: \"11\", December: \"12\"\n    };\n    let monthName = monthNumber[monthNumberObj[monthname3]];\n    let monthNameObj = {\n        \"01\": \"January\", \"02\": \"February\", \"03\": \"March\", \"04\": \"April\", \"05\": \"May\", \"06\": \"June\", \"07\": \"July\", \"08\": \"August\", \"09\": \"September\", \"10\": \"October\", \"11\":","language":"javascript"}
{"task_id":"MBJSP\/192","completion":"    return \/(?=.*[a-zA-Z])(?=.*\\d)\/.test(str);\n}","language":"javascript"}
{"task_id":"MBJSP\/193","completion":"  const unique = [...new Set(testTup)];\n  return unique;\n}","language":"javascript"}
{"task_id":"MBJSP\/194","completion":"  return parseInt(n, 8);\n}","language":"javascript"}
{"task_id":"MBJSP\/195","completion":"  let left = 0\n  let right = arr.length - 1\n\n  while (left <= right) {\n    let mid = Math.floor((left + right) \/ 2)\n    if (x === arr[mid] && n === arr[mid + 1]) return mid\n    if (x === arr[mid]) return mid + 1\n    if (x > arr[mid]) left = mid + 1\n    if (x < arr[mid]) right = mid - 1\n  }\n\n  return -1\n}","language":"javascript"}
{"task_id":"MBJSP\/196","completion":"  const newArray = [];\n  for (const index of testList) {\n    if (index.length !== k) {\n      newArray.push(index);\n    }\n  }\n  return newArray;\n}","language":"javascript"}
{"task_id":"MBJSP\/197","completion":"  if (testTup1.length !== testTup2.length) {\n    throw new Error('Tuples not equal in length');\n  }\n  let exponent = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    exponent.push(Math.pow(testTup1[i], testTup2[i]));\n  }\n  return exponent;\n}","language":"javascript"}
{"task_id":"MBJSP\/198","completion":"  return 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/199","completion":"    \/\/ code goes here\n    let max = 0;\n    let k = 2;\n    while (k <= n) {\n        if (n % k === 0) {\n            if (k > max) max = k;\n            k = n \/ k;\n        } else {\n            k++;\n        }\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/200","completion":"    var max;\n    var maxInd;\n    var maxIndArr = [];\n    for (var i = 0; i < list1.length; i++) {\n        if (max === undefined || list1[i] > max) {\n            max = list1[i];\n            maxInd = i;\n        }\n    }\n    maxIndArr.push(maxInd);\n    return maxIndArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/201","completion":"  var sortedArr = lst.sort();\n  for (var i = 0; i < sortedArr.length - 1; i++) {\n    if (sortedArr[i] === sortedArr[i + 1]) {\n      return true;\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/202","completion":"  return str1.split(\"\").filter((c) => c % 2 === 0).join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/203","completion":"    return (n1 ^ n2).toString(2).split('').filter(d => d == '1').length;\n}","language":"javascript"}
{"task_id":"MBJSP\/204","completion":"  return s.split(c).length - 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/205","completion":"  let result = [];\n  let len = testTup.length;\n  if (len <= 1) {\n    return result;\n  }\n  let leftTup = testTup.splice(0, len \/ 2);\n  let rightTup = testTup;\n  leftTup.forEach(leftEl => {\n    let index = rightTup.findIndex(rightEl => leftEl > rightEl);\n    if (index > -1) {\n      result.push(rightTup[index]);\n      rightTup.splice(index, 1);\n    }\n  });\n  result = result.concat(inversionElements(leftTup)).concat(inversionElements(rightTup));\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/206","completion":"    let str = \"\";\n    for (let i = 0; i < testTup.length - 1; i++) {\n        str += testTup[i] + testTup[i + 1];\n    }\n    return str;\n}","language":"javascript"}
{"task_id":"MBJSP\/207","completion":"  const len = str.length\n  const seen = {}\n  let maxLen = 0\n  let start = 0\n  for (let i = 0; i < len; i++) {\n    const char = str[i]\n    if (seen[char]) {\n      start = Math.max(start, seen[char])\n    }\n    maxLen = Math.max(maxLen, i - start + 1)\n    seen[char] = i + 1\n  }\n\n  return maxLen\n}","language":"javascript"}
{"task_id":"MBJSP\/208","completion":"  if (!num) return false;\n  return \/^[0-9]+(\\.[0-9]{2})?$\/.test(num);\n}","language":"javascript"}
{"task_id":"MBJSP\/209","completion":"  if (heap.length === 0) return heap;\n  let idx = heap.length - 1;\n  let temp = heap[idx];\n  heap[idx] = a;\n  while (idx > 0) {\n    let parentIdx = Math.floor((idx - 1) \/ 2);\n    if (heap[idx] > heap[parentIdx]) break;\n    let parent = heap[parentIdx];\n    heap[idx] = parent;\n    heap[parentIdx] = temp;\n    idx = parentIdx;\n  }\n  return heap;\n}","language":"javascript"}
{"task_id":"MBJSP\/210","completion":"  const validRegex = \/^[a-z0-9]+$\/i;\n  return validRegex.test(string);\n}","language":"javascript"}
{"task_id":"MBJSP\/211","completion":"    var res = 0;\n    while (n > 0) {\n        if (n & 1) res++;\n        n = n >> 1;\n    }\n    return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/212","completion":"  const result = (n ** 4);\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/213","completion":"    return testTup1.concat(testTup2);\n}","language":"javascript"}
{"task_id":"MBJSP\/214","completion":"  return (radian * 180) \/ Math.PI\n}","language":"javascript"}
{"task_id":"MBJSP\/215","completion":"  \/\/ write code here\n\n  if (alist.length === 0) {\n    return [];\n  }\n\n  var count = 0;\n  var result = [];\n  var temp = [];\n\n  for (let i = 0; i < alist.length; i++) {\n    const element = alist[i];\n    if (element.constructor !== Array) {\n      temp.push(element);\n      if (count === 0) {\n        count = element;\n      } else if (count === element) {\n        temp.length === 1 ? (count = 0) : (count -= element);\n      } else {\n        result.push(temp);\n        temp = [];\n        count = 0;\n      }\n    } else {\n      count = 0;\n      result.push(element);\n    }\n  }\n  if (count !== 0) {\n   ","language":"javascript"}
{"task_id":"MBJSP\/216","completion":"  if (list1.length > list2.length) {\n    return false;\n  }\n  if (list1.length === list2.length) {\n    return list1.every(function (val, index) {\n      return val === list2[index][0];\n    });\n  }\n  return list1.every(function (sublist) {\n    return checkSubsetList(sublist, list2);\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/217","completion":"  const charMap = {};\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    if (charMap[char]) {\n      return char;\n    }\n    charMap[char] = true;\n  }\n  return null;\n}","language":"javascript"}
{"task_id":"MBJSP\/218","completion":"  let operations = 0;\n  let max = Math.max(a, b);\n  let min = Math.min(a, b);\n  while (max !== min) {\n    if (max % 2 === 0) {\n      max = max \/ 2;\n    } else {\n      max--;\n    }\n    operations++;\n  }\n  return operations;\n}","language":"javascript"}
{"task_id":"MBJSP\/219","completion":"  let minMax = []\n  let length = testTup.length\n  let test = testTup.sort((a, b) => a - b)\n  if (test.length > k) {\n    for (let i = length - 1; i > length - k - 1; i--) {\n      minMax.push(test[i])\n    }\n  } else {\n    for (let i = length - 1; i > length - k - 1; i--) {\n      minMax.push(test[i])\n    }\n  }\n  return minMax\n}","language":"javascript"}
{"task_id":"MBJSP\/220","completion":"    const regex = \/[,\\. ]+\/gi;\n    let newText = text.split(regex);\n    let finalText = newText.splice(0, n);\n    return finalText.join(regex);\n}","language":"javascript"}
{"task_id":"MBJSP\/221","completion":"    return nums.find((num) => num % 2 === 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/222","completion":"    return Object.values(testTuple).every(value => typeof value === \"number\");\n}","language":"javascript"}
{"task_id":"MBJSP\/223","completion":"  let start = 0;\n  let end = n - 1;\n  let middle = Math.floor((start + end) \/ 2);\n  while (start <= end) {\n    if (arr[middle] === x) return true;\n    else if (arr[middle] < x) start = middle + 1;\n    else end = middle - 1;\n    middle = Math.floor((start + end) \/ 2);\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/224","completion":"  if (n === 0) {\n    return 0;\n  }\n  return n % 2 + countSetBits(Math.floor(n \/ 2));\n}","language":"javascript"}
{"task_id":"MBJSP\/225","completion":"    if (low > high) return arr[low];\n    if (low === high) return arr[low];\n    let mid = low + Math.floor((high - low) \/ 2);\n    if (arr[mid] < arr[mid + 1]) return arr[mid + 1];\n    if (arr[low] > arr[mid]) {\n        return findMin(arr, mid + 1, high);\n    }\n    return findMin(arr, low, mid - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/226","completion":"  let result = '';\n\n  for (let i = 0; i < str.length; i += 1) {\n    let char = str[i];\n    if (i % 2 === 0) {\n      result += char;\n    }\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/227","completion":"    return Math.min(a, b, c);\n}","language":"javascript"}
{"task_id":"MBJSP\/228","completion":"    \/\/ Write your code here\n    return ((n >> (r-l+1)) & 1) == 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/229","completion":"  return arr.map((v) => v < 0 ? v : n + v)\n}","language":"javascript"}
{"task_id":"MBJSP\/230","completion":"  const regex = \/[ ]\/gi;\n  return str1.replace(regex, char);\n}","language":"javascript"}
{"task_id":"MBJSP\/231","completion":"  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    sum += tri[i][i];\n  }\n  let max = sum;\n  for (let i = n - 1; i > 0; i--) {\n    sum = sum - tri[i - 1][i - 1] + tri[i - 1][i];\n    max = Math.max(sum, max);\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/232","completion":"  const list = list1.sort((a, b) => b - a)\n  return list.slice(0, n)\n}","language":"javascript"}
{"task_id":"MBJSP\/233","completion":"  return (2 * Math.PI * r * r) + (2 * Math.PI * r * h) + (2 * Math.PI * h * h);\n}","language":"javascript"}
{"task_id":"MBJSP\/234","completion":"  return l * l * l;\n}","language":"javascript"}
{"task_id":"MBJSP\/235","completion":"  \/\/ write code here\n}","language":"javascript"}
{"task_id":"MBJSP\/236","completion":"    let result = 0;\n    for (let i = 0; i < n; i++) {\n        if (i === 0) {\n            if (n % 2 === 0) {\n                result += Math.pow(2, n - 1);\n            } else {\n                result += Math.pow(2, n - 1);\n            }\n        } else {\n            result += Math.pow(2, i - 1);\n        }\n    }\n\n    if (k > result) {\n        return -1;\n    } else {\n        return result;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/237","completion":"  var myMap = new Map();\n  for (var i = 0; i < testList.length; i++) {\n    var myTuple = testList[i];\n    var myKey = myTuple.toString();\n    if (myMap.has(myKey)) {\n      myMap.set(myKey, myMap.get(myKey) + 1);\n    } else {\n      myMap.set(myKey, 1);\n    }\n  }\n\n  var myResult = {};\n  for (var [key, value] of myMap) {\n    if (myResult[value]) {\n      myResult[value] += 1;\n    } else {\n      myResult[value] = 1;\n    }\n  }\n  return myResult;\n}","language":"javascript"}
{"task_id":"MBJSP\/238","completion":"  let counter = 0;\n  let len = str.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = i + 1; j <= len; j++) {\n      let str1 = str.substring(i, j);\n      if (str1.length > 0) {\n        counter++;\n      }\n    }\n  }\n  return counter;\n}","language":"javascript"}
{"task_id":"MBJSP\/239","completion":"  if (m < 2 || n < 2) return 0;\n\n  let combinations = 1;\n  for (let i = 1; i < n; i++) combinations *= (m - 1) + i;\n\n  return combinations \/ (m - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/240","completion":"  \/\/code goes here\n}","language":"javascript"}
{"task_id":"MBJSP\/241","completion":"  var arr = [];\n  for (var i = 0; i < m; i++) {\n    arr[i] = [];\n    for (var j = 0; j < n; j++) {\n      arr[i][j] = [];\n      for (var k = 0; k < o; k++) {\n        arr[i][j][k] = '*';\n      }\n    }\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/242","completion":"  var count = 0;\n  for (var i = 0; i < str1.length; i++) {\n    if (str1[i] === \" \") {\n      continue;\n    }\n    count++;\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/243","completion":"    const result = [];\n\n    \/\/ Iterate through each sub-list\n    for (const subList of lst) {\n        \/\/ Initialize the result array with first item of sub-list\n        result.push(subList[0]);\n\n        \/\/ Initialize a counter for current item in sub-list\n        let count = 0;\n\n        \/\/ Iterate through every item in sub-list\n        for (const item of subList) {\n            \/\/ If the current item is the same as the first item of sub-list\n            if (item === result[count]) {\n                \/\/ Increment the counter\n                count++;\n            }\n            \/\/ If the counter is greater than or equal to the length of sub-list,\n            \/\/ we know that current item is the first item of sub-list\n            else {\n                \/\/ Add the item to the result array\n                result.push(item);\n\n                \/\/ Reset the counter\n                count = 0;\n            }\n        }\n\n        \/\/ Add the remaining items to result array\n        for (let i = count","language":"javascript"}
{"task_id":"MBJSP\/244","completion":"  let a = 0;\n  let b = n;\n  while (Math.pow(a, 2) <= b) {\n    a++;\n    b = Math.pow(a, 2);\n  }\n  return Math.pow(a, 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/245","completion":"    let windowSum = 0;\n    let currentMax = 0;\n    let i = 0;\n    let j = n - 1;\n    while (i < j) {\n        windowSum += arr[j];\n        if (arr[j] > arr[i]) {\n            currentMax = Math.max(currentMax, windowSum);\n            windowSum = 0;\n            j--;\n        } else {\n            windowSum -= arr[i];\n            i++;\n        }\n    }\n    return currentMax;\n}","language":"javascript"}
{"task_id":"MBJSP\/246","completion":"  \/\/ your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/247","completion":"  const l = str.length;\n  const dp = Array(l).fill(null).map(() => Array(l).fill(0));\n  let max = 0;\n  for (let i = 0; i < l; i++) {\n    dp[i][i] = 1;\n    max = 1;\n  }\n  for (let i = 1; i < l - 1; i++) {\n    dp[i][i + 1] = 2;\n    max = 2;\n  }\n\n  for (let j = 2; j < l; j++) {\n    for (let i = 1; i < j - 1; i++) {\n      if (str[i - 1] === str[j + 1] && dp[i - 1][j + 1] === 2) {\n        dp[i][j] = 2;\n        max = Math.","language":"javascript"}
{"task_id":"MBJSP\/248","completion":"    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        sum += 1 \/ (i + 1);\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/249","completion":"  if (!Array.isArray(arrayNums1) || !Array.isArray(arrayNums2)) return [];\n  const results = [];\n\n  arrayNums1.forEach(n => {\n    if (arrayNums2.includes(n)) {\n      results.push(n);\n    }\n  });\n\n  return results;\n}","language":"javascript"}
{"task_id":"MBJSP\/250","completion":"  return (tup.filter(x => x == x).length)\n}","language":"javascript"}
{"task_id":"MBJSP\/251","completion":"    \/\/ <unk>\ufffd\ufffd<unk>\ufffd<unk>\ufffdIJ <unk>12\ufffd<unk>\ufffd\ufffd<unk>\ufffd14 <unk>l\ufffdij<unk>\ufffd\ufffd<unk>\ufffd\ufffd<unk>\ufffd<unk>\ufffd\ufffd.\n    let newList = [];\n    for(let i = 0; i < list.length; i++) {\n      newList.push(list[i]);\n      newList.push(element);\n    }\n    return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/252","completion":"  \/\/ Write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/253","completion":"  const list1Count = list1.filter(function (item) {\n    if (typeof item === 'number') {\n      return item;\n    }\n  });\n\n  return list1Count.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/254","completion":"  return text\n    .split(' ')\n    .filter(word => {\n      return word.length > 0 && word.match(\/^[a-e]$\/gi) !== null;\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/255","completion":"  return []\n}","language":"javascript"}
{"task_id":"MBJSP\/256","completion":"    let count = 0;\n    for(let i = 2; i < n; i++) {\n        let isPrime = true;\n        for(let j = 2; j < i; j++) {\n            if(i % j === 0) {\n                isPrime = false;\n                break;\n            }\n        }\n        if(isPrime) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/257","completion":"  return [b, a]\n}","language":"javascript"}
{"task_id":"MBJSP\/258","completion":"  const arraySum = arrayNums.reduce((acc, val) => {\n    acc += val;\n    return acc;\n  }, 0);\n  const odd = arraySum \/ arrayNums.length;\n  return (odd % 2 === 1) ? 1 : 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/259","completion":"  const resultTup = [];\n\n  let tempTup1 = [];\n  let tempTup2 = [];\n\n  let max1 = testTup1[0][1];\n  let max2 = testTup2[0][1];\n\n  for (let i = 0; i < testTup1.length; i++) {\n    const element = testTup1[i];\n    if (element[1] > max1) {\n      max2 = max1;\n      max1 = element[1];\n      tempTup1 = [...testTup1];\n    }\n    if (element[1] > max2) {\n      max2 = element[1];\n      tempTup2 = [...testTup2];\n    }\n  }\n  for (let i = 0; i < tempTup1.length; i++) {\n    if (tempTup1[i][1] === max2) {\n      resultT","language":"javascript"}
{"task_id":"MBJSP\/260","completion":"    let prime = 1;\n    let total = 1;\n    let isPrime = true;\n    for (let i = 0; i < n; i++) {\n        total = total + prime;\n        if (total === 2) {\n            isPrime = true;\n            prime = 2;\n        } else {\n            isPrime = false;\n            prime++;\n        }\n    }\n    return isPrime ? total : -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/261","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/262","completion":"  const len = list1.length\n  const newArr = []\n  const restList = []\n\n  for (let i = 0; i < len; i++) {\n    if (i % l === 0) {\n      newArr.push(list1.slice(i, i + l))\n    } else {\n      restList.push(list1[i])\n    }\n  }\n\n  return [newArr, restList]\n}","language":"javascript"}
{"task_id":"MBJSP\/263","completion":"  let mergedDict = {};\n  for (let key in d1) {\n    mergedDict[key] = d1[key];\n  }\n  for (let key in d2) {\n    mergedDict[key] = d2[key];\n  }\n  return mergedDict;\n}","language":"javascript"}
{"task_id":"MBJSP\/264","completion":"    if(hAge > 0 && hAge <= 10){\n        return 10 * 3\n    } else if(hAge > 10 && hAge <= 20){\n        return 20 * 2.5\n    } else if(hAge > 20 && hAge <= 30){\n        return 30 * 1.5\n    } else if(hAge > 30 && hAge <= 40){\n        return 40 * 1\n    } else if(hAge > 40 && hAge <= 50){\n        return 50 * 0.5\n    } else {\n        return 60 * 0\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/265","completion":"  return s.reduce((r, v, i) => {\n    if (i % step === 0) {\n      r.push([v]);\n    } else {\n      r[r.length - 1].push(v);\n    }\n    return r;\n  }, []);\n}","language":"javascript"}
{"task_id":"MBJSP\/266","completion":"  return l * 6 * l * l;\n}","language":"javascript"}
{"task_id":"MBJSP\/267","completion":"    \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/268","completion":"  let s = 1;\n  for (let i = 2; i <= n; i++) {\n    s *= i;\n  }\n  return s;\n}","language":"javascript"}
{"task_id":"MBJSP\/269","completion":"  return k.charCodeAt();\n}","language":"javascript"}
{"task_id":"MBJSP\/270","completion":"    let sumEven = 0\n    for (let i = 0; i < n; i++) {\n        if (arr[i] % 2 == 0) {\n            sumEven += arr[i]\n        }\n    }\n    let sumEvenIndex = 0\n    for (let i = 0; i < n; i++) {\n        if (arr[i] % 2 == 0 && i % 2 == 0) {\n            sumEvenIndex += arr[i]\n        }\n    }\n    return sumEven + sumEvenIndex\n}","language":"javascript"}
{"task_id":"MBJSP\/271","completion":"  let sum = 0;\n  for (let i = 1; i <= n; i += 2) {\n    sum += Math.pow(i, 5);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/272","completion":"  let result = [];\n  for (let index = 0; index < testList.length; index++) {\n    let element = testList[index];\n    result.push(element[2]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/273","completion":"    \/\/ ...\n}","language":"javascript"}
{"task_id":"MBJSP\/274","completion":"\treturn 1 + 2 * (n - 1) + ((n - 1) * (n - 1)) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/275","completion":"    let i = 0;\n    let j = 0;\n    let flag = false;\n    for(i = 0; i < a.length; i++) {\n        if(a[i] === n || a[i] === m) {\n            flag = true;\n        } else if(flag && a[i] !== n && a[i] !== m) {\n            j = i;\n            flag = false;\n        }\n    }\n    return j;\n}","language":"javascript"}
{"task_id":"MBJSP\/276","completion":"    return 3.14 * r * r * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/277","completion":"  let dictNew = {};\n  for (let key in dict) {\n    if (dict[key] >= n) {\n      dictNew[key] = dict[key];\n    }\n  }\n  return dictNew;\n}","language":"javascript"}
{"task_id":"MBJSP\/278","completion":"  \/\/ code here\n}","language":"javascript"}
{"task_id":"MBJSP\/279","completion":"  if (n === 0) {\n    return 1;\n  }\n  if (n % 2 === 0) {\n    return isNumDecagonal(n \/ 2) * (3 * n + 1) \/ 2;\n  }\n  return isNumDecagonal(Math.floor(n \/ 2)) * (3 * n - 1) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/280","completion":"  for (let i = 0; i < dlist.length; i += 1) {\n    if (dlist[i] === item) {\n      return [true, i];\n    }\n  }\n  return [false, null];\n}","language":"javascript"}
{"task_id":"MBJSP\/281","completion":"  if (testList.length === 0) return true;\n  const seen = new Set();\n  return testList.every(e => {\n    if (seen.has(e)) return false;\n    seen.add(e);\n    return true;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/282","completion":"    return nums1.map((item, index) => item - nums2[index]);\n}","language":"javascript"}
{"task_id":"MBJSP\/283","completion":"    var frequency = {}\n    var digits = n.toString().split('')\n    for(var i=0; i<digits.length; i++) {\n        if(!frequency[digits[i]]) {\n            frequency[digits[i]] = 1\n        } else {\n            frequency[digits[i]]++\n        }\n    }\n    for(var key in frequency) {\n        if(frequency[key] <= digits.length) {\n            return false\n        }\n    }\n    return true\n}","language":"javascript"}
{"task_id":"MBJSP\/284","completion":"  \/\/ your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/285","completion":"  return text.match(\/a[\\w]+\\2\\3b\/) ? \"Found a match!\" : \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/286","completion":"  let max = 0;\n  let sum = 0;\n\n  for (let i = 0; i < n; i++) {\n    sum += a[i];\n  }\n  max = sum;\n\n  for (let i = n; i < n + k; i++) {\n    sum = sum - a[i - n] + a[i];\n    max = Math.max(max, sum);\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/287","completion":"  var sum = 0;\n  for (var i = 1; i <= n; i += 2) {\n    sum += Math.pow(i, 2);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/288","completion":"  const d = p - 1\n  let s = 1\n  for (const x of arr) {\n    s = (s * x) % p\n  }\n  return (s * d) % p\n}","language":"javascript"}
{"task_id":"MBJSP\/289","completion":"    \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/290","completion":"    let list = []\n    list1.forEach(element => {\n        if (list.length === 0) {\n            list.push(element);\n        } else {\n            let temp = [];\n            if (element.length > list[list.length - 1].length) {\n                temp = list[list.length - 1];\n                list[list.length - 1] = element;\n            } else {\n                temp = element;\n                list.push(element);\n            }\n        }\n    })\n    return list;\n}","language":"javascript"}
{"task_id":"MBJSP\/291","completion":"  if (n < 1 || k < 1) return 0;\n\n  const dp = [];\n\n  for (let i = 0; i < n; i++) {\n    dp[i] = [];\n    for (let j = 0; j < k; j++) {\n      dp[i][j] = 0;\n    }\n  }\n\n  \/\/ First row\n  for (let j = 0; j < k; j++) {\n    dp[0][j] = 1;\n  }\n\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < k; j++) {\n      dp[i][j] = dp[i - 1][j];\n      if (j > 0) {\n        dp[i][j] += dp[i - 1][j - 1];\n      }\n    }\n  ","language":"javascript"}
{"task_id":"MBJSP\/292","completion":"    return (n \/ m);\n}","language":"javascript"}
{"task_id":"MBJSP\/293","completion":"  return (w * h) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/294","completion":"    let max = Number.NEGATIVE_INFINITY\n    for (let v of listval) {\n        if (v > max) max = v\n    }\n    return max\n}","language":"javascript"}
{"task_id":"MBJSP\/295","completion":"  let sum = 0\n  for(let i = 1; i < number; i++) {\n    if(number % i === 0) {\n      sum += i\n    }\n  }\n  return sum\n}","language":"javascript"}
{"task_id":"MBJSP\/296","completion":"  if (n <= 1) return 0;\n  var sorted = arr.sort((a, b) => a - b);\n  var count = 0;\n  for (var i = 0; i < n - 1; i++) {\n    if (sorted[i] > sorted[i + 1]) count += 1;\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/297","completion":"  let result = [];\n  list1.forEach(list2 => {\n    if (Array.isArray(list2)) {\n      result = result.concat(flattenList(list2));\n    } else {\n      result.push(list2);\n    }\n  });\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/298","completion":"  return l1\n    .filter(e1 => l2.some(e2 => e1.every(e3 => e2.includes(e3))))\n    .map(e => e.reduce((a, c) => [...a, ...c], []));\n}","language":"javascript"}
{"task_id":"MBJSP\/299","completion":"    let max = 0\n    let maxName = null\n    stdata.forEach(stdata => {\n        if (stdata[1] > max) {\n            max = stdata[1]\n            maxName = stdata[0]\n        }\n    })\n    return maxName\n}","language":"javascript"}
{"task_id":"MBJSP\/300","completion":"    if (n === 1) return 2;\n    if (n === 2) return 6;\n    if (n === 3) return 20;\n    const total = (2 ** (n - 1)) - 1;\n    const total2 = (2 ** (n)) - 1;\n    return (total2 - total) * 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/301","completion":"  return Object.keys(d).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/302","completion":"  let i = 1;\n  let x = n;\n  while (x > 0) {\n    if ((x & 1) == 1) {\n      i = i ^ 1;\n    }\n    x = x >> 1;\n  }\n  return i;\n}","language":"javascript"}
{"task_id":"MBJSP\/303","completion":"    var c = [];\n    for (var i = 0; i < a.length; i++) {\n        if (c[a[i]]) {\n            c[a[i]]++;\n        } else {\n            c[a[i]] = 1;\n        }\n    }\n    var b = 0;\n    for (var k = 0; k < c.length; k++) {\n        if (c[k] > 1 && b === 0) {\n            b = 1;\n        }\n        if (c[k] > 2) {\n            return false;\n        }\n    }\n    return b === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/304","completion":"    let current = index\n    let count = 0\n    while (count < rotations) {\n        let temp = current + (ranges[1][1] - ranges[0][1])\n        temp = temp < 0 ? temp + arr.length : temp\n        count += 1\n        current = temp\n    }\n    return arr[current]\n}","language":"javascript"}
{"task_id":"MBJSP\/305","completion":"    return words.filter(word => word[0] === 'p');\n}","language":"javascript"}
{"task_id":"MBJSP\/306","completion":"  const dp = [];\n  dp[0] = 0;\n  for (let i = 1; i < n; i++) {\n    const prev = i - index;\n    const curr = i;\n    const prevDiff = prev >= 0 ? a[prev] : 0;\n    const currDiff = a[curr];\n    if (currDiff > prevDiff) {\n      dp[i] = dp[prev];\n    } else {\n      dp[i] = dp[prev] + currDiff;\n    }\n  }\n  return dp[n - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/307","completion":"  let k = [];\n  for (let i = m; i < n; i++) {\n    k.push(tuplex[i]);\n  }\n  k.push(tuplex[m]);\n  return k;\n}","language":"javascript"}
{"task_id":"MBJSP\/308","completion":"  if (nums1.length < n || nums2.length < n) {\n    throw new Error('invalid input');\n  }\n\n  const product = [];\n  let first = nums1.slice(0, n);\n  let second = nums2.slice(0, n);\n\n  for (let i = 0; i < n; i++) {\n    const p1 = first.reduce((total, num) => total * num, 1);\n    const p2 = second.reduce((total, num) => total * num, 1);\n\n    product.push(Math.max(p1, p2));\n\n    first = first.slice(1);\n    second = second.slice(1);\n  }\n\n  return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/309","completion":"    if (a >= b) {\n        return a;\n    } else {\n        return b;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/310","completion":"\tconst arr1 = str1.split(\" \");\n\treturn arr1;\n}","language":"javascript"}
{"task_id":"MBJSP\/311","completion":"    return n | (1 << (n.toString(2).length - 1));\n}","language":"javascript"}
{"task_id":"MBJSP\/312","completion":"  return Math.PI * r * r * h \/ 3;\n}","language":"javascript"}
{"task_id":"MBJSP\/313","completion":"  return list1.filter((item) => item >= 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/314","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/315","completion":"  const words = str.split(\" \");\n  let maxLen = 0;\n  let result = \"\";\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].length % 2 == 0) {\n      maxLen = Math.max(maxLen, words[i].length);\n    }\n  }\n  if (maxLen > 0) {\n    for (let i = 0; i < words.length; i++) {\n      if (words[i].length % 2 == 0 && words[i].length == maxLen) {\n        result = words[i];\n      }\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/316","completion":"  let left = 0;\n  let right = a.length - 1;\n\n  while (left <= right) {\n    const mid = Math.floor((left + right) \/ 2);\n\n    if (a[mid] === x) {\n      left = mid + 1;\n    } else if (a[mid] > x) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  return left - 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/317","completion":"  if (!alist || alist.length === 0) {\n    return []\n  }\n  let arr = [alist[0]]\n  let count = 1\n  for (let i = 1; i < alist.length; i++) {\n    if (alist[i] === alist[i - 1]) {\n      count++\n    } else {\n      arr.push(count)\n      arr.push(alist[i])\n      count = 1\n    }\n  }\n  arr.push(count)\n  return arr\n}","language":"javascript"}
{"task_id":"MBJSP\/318","completion":"  return Math.pow(3, 1 \/ 2) * Math.pow(s, 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/319","completion":"  \/\/ 1. \"match\" method\n  \/\/ 2. \"test\" method\n  \/\/ 3. \"split\" method\n\n  var words = text.split(\" \");\n\n  var longWords = [];\n\n  for (var i = 0; i < words.length; i++) {\n    if (words[i].match(\/[a-z]{5}\/g).length > 0) {\n      longWords.push(words[i]);\n    }\n  }\n  return longWords;\n}","language":"javascript"}
{"task_id":"MBJSP\/320","completion":"    const firstN = Array.from({ length: n }, (_, i) => i + 1);\n    const squared = firstN.map(num => num ** 2);\n    const sum = squared.reduce((acc, num) => acc + num);\n\n    return squared.reduce((acc, num, i) => acc + num - (sum - squared[i]), 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/321","completion":"    let result = [];\n    let temp = [];\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === \"1\") {\n            temp.push(s[i]);\n        } else {\n            temp.pop();\n        }\n        if (temp.length === 6) {\n            result.push(temp.join(\"\"));\n            temp = [];\n        }\n    }\n    return result.join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/322","completion":"  if (list1.length === 0) {\n    return [];\n  }\n\n  let min = list1[0];\n  let positions = [];\n  let counter = 0;\n\n  for (let i = 0; i < list1.length; i++) {\n    if (min > list1[i]) {\n      min = list1[i];\n      counter = i;\n    }\n  }\n\n  positions.push(counter);\n  return positions;\n}","language":"javascript"}
{"task_id":"MBJSP\/323","completion":"    \/\/ TODO: implement\n}","language":"javascript"}
{"task_id":"MBJSP\/324","completion":"  let sum = 0\n  let i = 0\n  while (i < testTuple.length) {\n    if (testTuple[i + 1] === testTuple[i]) {\n      sum += testTuple[i]\n      i++\n    } else {\n      sum += testTuple[i] + testTuple[i + 1]\n      i += 2\n    }\n  }\n  return sum\n}","language":"javascript"}
{"task_id":"MBJSP\/325","completion":"  let minSquares = Number.MAX_SAFE_INTEGER\n  for (let i = 1; i <= n; i++) {\n    for (let j = i; j <= n; j++) {\n      let sum = i * i + j * j\n      if (sum == n) {\n        minSquares = Math.min(minSquares, 2)\n      } else if (sum > n) {\n        break\n      }\n    }\n  }\n  return minSquares\n}","language":"javascript"}
{"task_id":"MBJSP\/326","completion":"    let counter = {};\n    for (let str of testList) {\n        [...str.split(\"\")].forEach(char => {\n            if (!counter[char]) {\n                counter[char] = 0;\n            }\n            counter[char]++;\n        })\n    }\n    let max = 0;\n    let maxChar;\n    for (let char in counter) {\n        if (counter[char] > max) {\n            max = counter[char];\n            maxChar = char;\n        }\n    }\n    return maxChar;\n}","language":"javascript"}
{"task_id":"MBJSP\/327","completion":"    let x1 = Math.sqrt(x)\n    let y1 = Math.sqrt(y)\n    let z1 = Math.sqrt(z)\n    if(x1 === Math.floor(x1) && y1 === Math.floor(y1) && z1 === Math.floor(z1)){\n        return true\n    }\n    return false\n}","language":"javascript"}
{"task_id":"MBJSP\/328","completion":"  \/\/ ...\n}","language":"javascript"}
{"task_id":"MBJSP\/329","completion":"    let negCount = 0;\n    for (let i = 0; i < list.length; i++) {\n        if (list[i] < 0) {\n            negCount++;\n        }\n    }\n    return negCount;\n}","language":"javascript"}
{"task_id":"MBJSP\/330","completion":"    return text.match(\/(\\w{3,})|(\\w{4})|(\\w{5})\/g)\n}","language":"javascript"}
{"task_id":"MBJSP\/331","completion":"    let num = n;\n    let count = 0;\n\n    while (num > 0) {\n        num = num & (num - 1);\n        count = count + 1;\n    }\n\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/332","completion":"  if (str1 === \"\") {\n    return {};\n  }\n  let map = {};\n  for (let i = 0; i < str1.length; i++) {\n    if (map[str1[i]] !== undefined) {\n      map[str1[i]] = map[str1[i]] + 1;\n    } else {\n      map[str1[i]] = 1;\n    }\n  }\n  return map;\n}","language":"javascript"}
{"task_id":"MBJSP\/333","completion":"    return subLi.sort((a, b) => a[1] - b[1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/334","completion":"    if(a+b>c || a+c>b || c+b>a){\n        return false\n    }\n    return true\n}","language":"javascript"}
{"task_id":"MBJSP\/335","completion":"  return n * d + a;\n}","language":"javascript"}
{"task_id":"MBJSP\/336","completion":"    let daycount = new Date(2020, monthname1 - 1, 0).getDate();\n    if (daycount == 28) {\n        return true;\n    } else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/337","completion":"  var matched = false;\n  var lastCharacter = text.slice(-1);\n  if (lastCharacter === \".\") {\n    matched = true;\n  }\n  if (lastCharacter === \"!\") {\n    matched = true;\n  }\n  return matched\n    ? \"Found a match!\"\n    : \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/338","completion":"    let count = 0;\n    let len = s.length;\n    for (let i = 1; i <= len - 1; i++) {\n        for (let j = 1; j <= len - i; j++) {\n            if (s[j - 1] !== s[len - i + j - 1]) break;\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/339","completion":"  let divisor = 1;\n  while (y \/ divisor >= 1) {\n    divisor++;\n  }\n  return divisor;\n}","language":"javascript"}
{"task_id":"MBJSP\/340","completion":"    \/\/ Code here\n}","language":"javascript"}
{"task_id":"MBJSP\/341","completion":"    return [...s]\n}","language":"javascript"}
{"task_id":"MBJSP\/342","completion":"  \/\/ TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/343","completion":"  const letterCount = Array(26).fill(0);\n  const digitCount = Array(10).fill(0);\n  for (const char of s) {\n    if (char >= \"a\" && char <= \"z\") {\n      letterCount[char.charCodeAt() - 97]++;\n    } else if (char >= \"0\" && char <= \"9\") {\n      digitCount[char.charCodeAt() - 48]++;\n    }\n  }\n  return [digitCount.reduce((a, b) => a + b, 0), letterCount.reduce((a, b) => a + b, 0)];\n}","language":"javascript"}
{"task_id":"MBJSP\/344","completion":"    let count = 0;\n    for (let i = n; i <= m; i++) {\n        if (i % 2 === 1) {\n            let square = i * i;\n            count += Math.sqrt(square) % 1 !== 0 ? 1 : 0;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/345","completion":"  const result = [];\n  let i = 0;\n  let j = 1;\n  while (j < nums.length) {\n    if (nums[i] !== nums[j]) {\n      result.push(j - i);\n      i = j;\n    }\n    j++;\n  }\n  result.push(j - i);\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/346","completion":"  let i = 0;\n  let j = n - k + 1;\n  while (i < j) {\n    const m = Math.floor((i + j) \/ 2);\n    const n = Math.floor(Math.sqrt(m * 2));\n    if (n * 2 + 1 === m && n + 1 === m) return m * 2;\n    else if (n * 2 + 1 > m) {\n      j = m - 1;\n    } else {\n      i = m + 1;\n    }\n  }\n  return i * 2 + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/347","completion":"    return (m * m) + (n * n);\n}","language":"javascript"}
{"task_id":"MBJSP\/348","completion":"  if (m === 0) {\n    return 1;\n  }\n\n  if (m === 1) {\n    return 2;\n  }\n\n  if (m === 2) {\n    return 4;\n  }\n\n  if (m === 3) {\n    return 7;\n  }\n\n  let ways = 2;\n  for (let i = 3; i <= m; i += 1) {\n    ways += (findWays(i - 1) * findWays(m - i));\n  }\n\n  return ways;\n}","language":"javascript"}
{"task_id":"MBJSP\/349","completion":"    let arr = string.split('');\n    let arr2 = [];\n    let total = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let value = arr[i];\n        if (value === '1') {\n            arr2.push(value);\n            total += 2;\n        } else {\n            total += 1;\n        }\n    }\n    if (total % 2 === 1) {\n        return \"No\";\n    } else {\n        return \"Yes\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/350","completion":"    var arr = s.split(\"\");\n    var count = 0;\n    var obj = {};\n    for (var i = 0; i < arr.length; i++) {\n        if (obj[arr[i]] === undefined) {\n            obj[arr[i]] = 1;\n        } else {\n            obj[arr[i]]++;\n        }\n    }\n    for (var key in obj) {\n        if (obj[key] === 1) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/351","completion":"    const freq = {}\n\n    arr.map(x => {\n        freq[x] ? freq[x] = freq[x] + 1 : freq[x] = 1;\n    })\n\n    let key;\n    for (let i in freq) {\n        if (freq[i] === k) {\n            key = i;\n            break;\n        }\n    }\n\n    return key;\n}","language":"javascript"}
{"task_id":"MBJSP\/352","completion":"    \/\/ write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/353","completion":"  const list2 = [];\n\n  for (let i = 0; i < list1.length; i++) {\n    let list3 = [];\n    for (let j = 0; j < list1[i].length; j++) {\n      if (j === n) continue;\n      list3.push(list1[i][j]);\n    }\n    list2.push(list3);\n  }\n  return list2;\n}","language":"javascript"}
{"task_id":"MBJSP\/354","completion":"    \/\/ your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/355","completion":"  let count = 0;\n  for (let i = 0; i < 2 * Math.PI * radius; i++) {\n    if (Math.pow(Math.sqrt(i) - radius, 2) < 1) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/356","completion":"  return (90 + a - b) % 360;\n}","language":"javascript"}
{"task_id":"MBJSP\/357","completion":"  if (testList.length == 0) return;\n  let max = testList[0][1];\n  for (let i = 1; i < testList.length; i++) {\n    if (testList[i][1] > max) max = testList[i][1];\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/358","completion":"    \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/359","completion":"    const discriminant = b ** 2 - 4 * a * c;\n    if (discriminant === 0) {\n        return 'Yes';\n    }\n    if (discriminant < 0) {\n        return 'No';\n    }\n    const sqrtDiscriminant = Math.sqrt(discriminant);\n    const root1 = (-b + sqrtDiscriminant) \/ (2 * a);\n    const root2 = (-b - sqrtDiscriminant) \/ (2 * a);\n    return root1 === root2 ? 'Yes' : 'No';\n}","language":"javascript"}
{"task_id":"MBJSP\/360","completion":"  var n = n,\n    num = 1,\n    str = '',\n    numCarol = 0,\n    carol = 0;\n\n  while (num < n) {\n    if (num === n) {\n      carol = numCarol;\n    }\n    str += num + ' ';\n    numCarol = num * 2;\n    num++;\n  }\n\n  return carol;\n}","language":"javascript"}
{"task_id":"MBJSP\/361","completion":"  \/\/ TODO: Implement me!\n  return;\n}","language":"javascript"}
{"task_id":"MBJSP\/362","completion":"  let max = 1,\n      maxOccur = nums[0];\n  for (let i = 1; i < nums.length; i++) {\n    if (nums[i] === maxOccur) {\n      max++;\n    } else if (nums[i] > maxOccur) {\n      max = 1;\n      maxOccur = nums[i];\n    }\n  }\n  return maxOccur;\n}","language":"javascript"}
{"task_id":"MBJSP\/363","completion":"  \/\/ your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/364","completion":"    if (str === \"\") {\n        return 0;\n    } else {\n        let flipCount = 0;\n        let lastChar = str[0];\n\n        for (let i = 0; i < str.length; i++) {\n            if (lastChar === str[i]) {\n                flipCount++;\n            } else {\n                flipCount += Math.ceil(str.length \/ 2);\n            }\n\n            lastChar = str[i];\n        }\n\n        return flipCount;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/365","completion":"    return n.toString().split('').map(v => v * 1).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/366","completion":"    let product = listNums[0];\n    let productIndex = 0;\n    for (let index = 0; index < listNums.length - 1; index++) {\n        let firstNum = listNums[index];\n        let secondNum = listNums[index + 1];\n        let product = firstNum * secondNum;\n        if (product > product) {\n            product = product;\n            productIndex = index;\n        }\n    }\n    return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/368","completion":"  const result = []\n  for (let i = 0; i < n; i += 1) {\n    result.push(testTup)\n  }\n  return result\n}","language":"javascript"}
{"task_id":"MBJSP\/369","completion":"  const side = 2 * (l * w + w * h + h * l);\n  const top = 2 * (l * h + w * h);\n  const lateralSurfaceArea = Math.abs(top + side);\n  return lateralSurfaceArea;\n}","language":"javascript"}
{"task_id":"MBJSP\/370","completion":"  return price.sort(\n    (a, b) => parseFloat(a[1]) - parseFloat(b[1])\n  );\n}","language":"javascript"}
{"task_id":"MBJSP\/371","completion":"  if (leftElement === rightElement) {\n    return 0\n  }\n  return rightElement - leftElement + 1 + smallestMissing(a, leftElement + 1, rightElement)\n}","language":"javascript"}
{"task_id":"MBJSP\/372","completion":"    let minHeap = new MinHeap(nums);\n    let sortedArr = [];\n    for (let i = 0; i < nums.length; i++) {\n        sortedArr.push(minHeap.poll());\n    }\n    return sortedArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/373","completion":"    return l * w * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/374","completion":"  var permutations = [];\n  var partialPermutations = [];\n  if (str === '') {\n    permutations.push(partialPermutations.join(''));\n    return permutations;\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    var firstChar = str[i];\n    var charsLeft = str.substring(0, i) + str.substring(i + 1);\n    var innerPermutations = permuteString(charsLeft);\n\n    for (var j = 0; j < innerPermutations.length; j++) {\n      var permutation = firstChar + innerPermutations[j];\n      permutations.push(permutation);\n      partialPermutations.push(permutation);\n    }\n  }\n\n  return permutations;\n}","language":"javascript"}
{"task_id":"MBJSP\/375","completion":"  const remainder = n % m\n  return remainder >= m \/ 2 ? (n - remainder) : (n + m - remainder)\n}","language":"javascript"}
{"task_id":"MBJSP\/376","completion":"    \/\/ write your code here\n    var retTup = [];\n    var dict = {};\n    for (var i = 0; i < testTup.length; i++) {\n        if (!dict[testTup[i]]) {\n            dict[testTup[i]] = testTup[i];\n            retTup.push(testTup[i]);\n        } else {\n            retTup.push(dict[testTup[i]]);\n        }\n    }\n    return retTup;\n}","language":"javascript"}
{"task_id":"MBJSP\/377","completion":"  return s.split(c).join('');\n}","language":"javascript"}
{"task_id":"MBJSP\/378","completion":"  return testList.map((item, index) => {\n    if (index === testList.length - 1) {\n      return testList[0];\n    }\n    return testList[index + 1];\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/379","completion":"  return l * w * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/380","completion":"  let finalList = [];\n  for (let i = 0; i < rownum; i += 1) {\n    let tempList = [];\n    for (let j = 0; j < colnum; j += 1) {\n      tempList.push(i * colnum + j);\n    }\n    finalList.push(tempList);\n  }\n  return finalList;\n}","language":"javascript"}
{"task_id":"MBJSP\/381","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/382","completion":"  const length = a.length;\n  let start = 0;\n  let end = length - 1;\n  let mid = Math.floor((start + end) \/ 2);\n\n  \/\/ Special case\n  if (length <= 1) return 0;\n\n  \/\/ Check if the element (mid + 1) is minimum element.\n  if (a[mid + 1] < a[mid]) return 0;\n\n  \/\/ Search in the left half\n  while (a[mid] >= a[start] && a[mid] <= a[end]) {\n    if (mid === start) return 0;\n\n    mid = Math.floor((start + end) \/ 2);\n\n    if (a[mid] > a[mid + 1]) {\n      return mid + 1;\n    }\n\n    if (a[mid] < a[start]) {\n      start = mid;\n    } else {\n      end = mid","language":"javascript"}
{"task_id":"MBJSP\/383","completion":"    if (n === 0) return n;\n    return (n ^ (n & 1)) >>> 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/384","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/385","completion":"  const perrin = [1, 2, 5, 3, 4];\n  const getNumber = (n, acc) => {\n    if (n === 0) return acc;\n    return getNumber(n - 1, acc + perrin[n - 1]);\n  };\n\n  return getNumber(n, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/386","completion":"  const stack = [];\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === '[') {\n      stack.push(s[i]);\n    } else if (s[i] === ']') {\n      if (stack.length > 0) {\n        stack.pop();\n      } else {\n        return 0;\n      }\n    }\n  }\n  return stack.length === 0 ? 1 : 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/387","completion":"  let res = parseInt(n, 16);\n  if (res % 2 === 0) {\n    return \"Even\";\n  } else {\n    return \"Odd\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/388","completion":"    \/\/ Write the logic here.\n    var res = 1;\n    while (res <= n) {\n        res <<= 1;\n    }\n    return res >> 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/389","completion":"  let i = 2;\n  let lucasNumber = 2;\n  while (i <= n) {\n    lucasNumber = lucasNumber + 1;\n    i++;\n  }\n  return lucasNumber;\n}","language":"javascript"}
{"task_id":"MBJSP\/390","completion":"  return list.map(item => string.replace(\"{0}\", item));\n}","language":"javascript"}
{"task_id":"MBJSP\/391","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/392","completion":"    let max = 0;\n\n    for (let i = 1; i < n; i++) {\n        const half = Math.floor(n \/ 2);\n        const third = Math.floor(n \/ 3);\n        const fourth = Math.floor(n \/ 4);\n        const fifth = Math.floor(n \/ 5);\n\n        max = Math.max(max, half * (half + third + fourth + fifth), n);\n    }\n\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/393","completion":"  const lengthList = inputList.map((items) => items.length);\n  const maxLength = Math.max(...lengthList);\n  const indexMax = lengthList.indexOf(maxLength);\n  const finalMaxList = inputList[indexMax];\n  return finalMaxList;\n}","language":"javascript"}
{"task_id":"MBJSP\/394","completion":"    \/\/ Write your solution here.\n}","language":"javascript"}
{"task_id":"MBJSP\/395","completion":"  let map = {};\n  for (let char of str1) {\n    if (map[char]) {\n      map[char] = map[char] + 1;\n    } else {\n      map[char] = 1;\n    }\n  }\n  for (let key in map) {\n    if (map[key] === 1) {\n      return key;\n    }\n  }\n  return null;\n}","language":"javascript"}
{"task_id":"MBJSP\/396","completion":"  if (string.match(\/^.*(.)\\1*$\/)) {\n    return \"Valid\";\n  } else {\n    return \"Invalid\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/397","completion":"    \/\/ your code here\n    let sortedNumbers = [a, b, c].sort((a, b) => a - b);\n\n    if (sortedNumbers.length % 2 === 0) {\n        return (sortedNumbers[sortedNumbers.length \/ 2] + sortedNumbers[sortedNumbers.length \/ 2 - 1]) \/ 2;\n    }\n    return sortedNumbers[Math.floor(sortedNumbers.length \/ 2)];\n}","language":"javascript"}
{"task_id":"MBJSP\/398","completion":"    return nums.map(n => n.toString().split('').map(d => +d).reduce((a, b) => a + b, 0));\n}","language":"javascript"}
{"task_id":"MBJSP\/399","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/400","completion":"    let arr = [...new Set(testList.map(x => x.join(',')))];\n\n    return arr.map(x => x.split(',').length).reduce((a, b) => a + b);\n}","language":"javascript"}
{"task_id":"MBJSP\/401","completion":"  var result = [];\n  for (var i = 0; i < testTup1.length; i++) {\n    result[i] = [];\n    for (var j = 0; j < testTup1[i].length; j++) {\n      result[i][j] = testTup1[i][j] + testTup2[i][j];\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/402","completion":"    let factorial = [1, 1];\n    for (let i = 2; i <= n; i++) {\n        factorial.push(factorial[i - 1] * i);\n    }\n    let result = 1;\n    for (let i = 0; i < r; i++) {\n        result *= (n - i) \/ (i + 1);\n    }\n    return result * factorial[r] % p;\n}","language":"javascript"}
{"task_id":"MBJSP\/403","completion":"  return \/^(?:(?:https?|ftp):\\\/\\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a","language":"javascript"}
{"task_id":"MBJSP\/404","completion":"  if (a < b) {\n    return a;\n  } else {\n    return b;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/405","completion":"  let element = 0;\n  for (let i = 0; i < tuplex.length; i++) {\n    if (tuplex[i] === tuple1) {\n      element = i;\n      break;\n    }\n  }\n  if (element === 0) {\n    return false;\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/406","completion":"    if (x % 2 === 0) {\n        return \"Even Parity\";\n    } else {\n        return \"Odd Parity\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/407","completion":"  let numStr = n.toString();\n  let arr = numStr.split('').map(Number);\n  let i = arr.length - 1;\n  let j = 0;\n  while (j < i) {\n    if (arr[j] < arr[j + 1]) {\n      let temp = arr[j];\n      arr[j] = arr[j + 1];\n      arr[j + 1] = temp;\n      i--;\n    }\n    j++;\n  }\n  return arr.reduce((a, b) => a + b);\n}","language":"javascript"}
{"task_id":"MBJSP\/408","completion":"  let result = [];\n  if (nums1.length === 0 || nums2.length === 0) return result;\n\n  nums1.forEach((num1, index) => {\n    nums2.forEach((num2, index) => {\n      result.push([num1, num2]);\n    });\n  });\n\n  return result.sort((a, b) => a[0] - b[0]).slice(0, k);\n}","language":"javascript"}
{"task_id":"MBJSP\/409","completion":"  const sortedList = list1.sort((a, b) => a[0] - b[0]);\n  const [min1, max1] = sortedList[0];\n  const [min2, max2] = sortedList[1];\n  const minProduct = max1 * max2;\n  const allProducts = [];\n  for (let i = min1; i <= max1; i++) {\n    for (let j = min2; j <= max2; j++) {\n      allProducts.push(i * j);\n    }\n  }\n  const minProductIndex = allProducts.indexOf(minProduct);\n  return allProducts[minProductIndex];\n}","language":"javascript"}
{"task_id":"MBJSP\/410","completion":"    return Math.min(...listval);\n}","language":"javascript"}
{"task_id":"MBJSP\/411","completion":"  let regex = \/_\\w\/g;\n  return word.replace(regex, function (match) {\n    return match.toUpperCase().replace(\"_\", \"\");\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/412","completion":"  const newL = [];\n  for (let i = 0; i < l.length; i += 1) {\n    if (l[i] % 2 !== 0) {\n      newL.push(l[i]);\n    }\n  }\n  return newL;\n}","language":"javascript"}
{"task_id":"MBJSP\/413","completion":"  return list1.map(list => list[n]);\n}","language":"javascript"}
{"task_id":"MBJSP\/414","completion":"    \/\/ write your code here\n    return list1.some(function(e){\n        return list2.includes(e);\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/415","completion":"  const newArr = arr.map((x) => x * x);\n  const sortedArr = newArr.sort((a, b) => a - b);\n  const firstIndex = sortedArr.length - 2;\n  const secondIndex = sortedArr.length - 1;\n  const first = sortedArr[firstIndex];\n  const second = sortedArr[secondIndex];\n  if (arr[firstIndex] < 0 && arr[secondIndex] < 0) return [-1, -1];\n  return arr[firstIndex] === arr[secondIndex]\n    ? [arr[firstIndex], arr[secondIndex]]\n    : [first, second];\n}","language":"javascript"}
{"task_id":"MBJSP\/416","completion":"  if (n === 1) return 1;\n  if (n === 2) return 2;\n  return n + Math.max(breaksum(n - 1), breaksum(n - 2));\n}","language":"javascript"}
{"task_id":"MBJSP\/417","completion":"  var map = new Map();\n  for (var i = 0; i < input.length; i++) {\n    var arr = input[i];\n    for (var j = 0; j < arr.length; j++) {\n      var v = arr[j];\n      if (map.has(v)) {\n        map.get(v).push(arr);\n      } else {\n        map.set(v, [arr]);\n      }\n    }\n  }\n  return map.values();\n}","language":"javascript"}
{"task_id":"MBJSP\/418","completion":"    \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/419","completion":"  let result = list1.reduce((acc, val) => {\n    const rounded = Math.round(val);\n    const sum = rounded + acc;\n    return sum;\n  }, 0);\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/420","completion":"    if (n < 0) {\n        return false;\n    }\n    let total = 0;\n    for (let i = 0; i < n; i++) {\n        total += Math.pow(i, 3);\n    }\n    return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/421","completion":"  return testTup.join(\"-\");\n}","language":"javascript"}
{"task_id":"MBJSP\/422","completion":"  \/\/ write code here\n}","language":"javascript"}
{"task_id":"MBJSP\/423","completion":"  let dp = new Array(m)\n    .fill(0)\n    .map(() => new Array(n).fill(0));\n  \/\/ \u7b2c\ufffd\u884c\ufffd14\ufffd\ufffd\u884c\u6700\u591a\ufffd12\ufffd34\u5230\u7684\u6700\u5927\ufffd14\n  for (let i = 0; i < m; i++) {\n    dp[i][0] = gold[i][0];\n    for (let j = 1; j < n; j++) {\n      dp[i][j] = Math.max(gold[i][j], dp[i][j - 1]);\n    }\n  }\n  \/\/ \u7b2c\ufffd\u5217\ufffd14\ufffd\ufffd\u5217\u6700\u591a\ufffd12\ufffd34\u5230\u7684\u6700\u5927\ufffd14\n  for (let i = 0; i < n; i++) {\n    dp[0][i] = gold[0][i];\n    for (let j = 1; j < m; j++) {\n      dp","language":"javascript"}
{"task_id":"MBJSP\/424","completion":"    return testTuple.map(string => string[string.length - 1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/425","completion":"  if (!list1) {\n    return 0;\n  }\n\n  let res = 0;\n\n  for (let i = 0; i < list1.length; i++) {\n    const currentList = list1[i];\n\n    if (currentList.length === 0) {\n      res += 1;\n      continue;\n    }\n\n    if (currentList.includes(x)) {\n      res += 1;\n      continue;\n    }\n\n    res += countElementInList(currentList, x);\n  }\n\n  return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/426","completion":"    return nums.filter(x => x % 2 !== 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/427","completion":"    let newDt = dt.split(\"-\");\n    let newDate = [newDt[2], newDt[1], newDt[0]].join(\"-\");\n    return newDate;\n}","language":"javascript"}
{"task_id":"MBJSP\/428","completion":"  \/\/ Code here\n}","language":"javascript"}
{"task_id":"MBJSP\/429","completion":"    return testTup1.map((num, index) => num && testTup2[index]);\n}","language":"javascript"}
{"task_id":"MBJSP\/430","completion":"  return (b * b) - (4 * a * c);\n}","language":"javascript"}
{"task_id":"MBJSP\/431","completion":"  if (list1.length === 0 || list2.length === 0) {\n    return null;\n  }\n\n  let commonList = [];\n  let sameList = [];\n  for (let i = 0; i < list1.length; i++) {\n    if (list2.includes(list1[i])) {\n      commonList.push(list1[i]);\n    }\n  }\n\n  for (let i = 0; i < list2.length; i++) {\n    if (list1.includes(list2[i])) {\n      sameList.push(list2[i]);\n    }\n  }\n\n  if (commonList.length > 0) {\n    return commonList[0];\n  } else {\n    return null;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/432","completion":"  return (base1 + base2 + height) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/433","completion":"  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > number) {\n      return \"Yes, the entered number is greater than those in the array\";\n    } else {\n      return \"No, entered number is less than those in the array\";\n    }\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/434","completion":"  let result = \"Not matched!\";\n  if (text.match(\/^a+b+\/g)) {\n    result = \"Found a match!\";\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/435","completion":"\tlet arr = n.toString().split('');\n\tlet len = arr.length;\n\treturn arr[len - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/436","completion":"    var negList = [];\n    for(var i=0; i<list1.length; i++){\n        if(list1[i]<0){\n            negList.push(list1[i]);\n        }\n    }\n    return negList;\n}","language":"javascript"}
{"task_id":"MBJSP\/437","completion":"  return str1.split(\"\").filter(function (value, index) {\n    return index % 2 === 0;\n  }).join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/438","completion":"  const n = testList.length\n  let count = 0\n  for (let i = 0; i < n - 1; i++) {\n    if (testList[i][0] < testList[i][1]) {\n      count++\n    } else if (testList[i][0] > testList[i][1]) {\n      count++\n    }\n  }\n  return count\n}","language":"javascript"}
{"task_id":"MBJSP\/439","completion":"  let answer = 0;\n  l.forEach((x) => (answer *= x));\n  return answer;\n}","language":"javascript"}
{"task_id":"MBJSP\/440","completion":"  const textSplit = text.split(\" \");\n  const adverb = textSplit.map((str) => {\n    const strSplit = str.split(\"\");\n    const adverbFound = [];\n    strSplit.map((letter, index) => {\n      if (letter === \"!\" && strSplit[index + 1] === \"?\") {\n        adverbFound.push(index);\n      }\n    });\n    return adverbFound;\n  });\n\n  const final = adverb.flat();\n  return final;\n}","language":"javascript"}
{"task_id":"MBJSP\/441","completion":"  let cubearea = 6 * Math.pow(l, 2)\n  return cubearea\n}","language":"javascript"}
{"task_id":"MBJSP\/442","completion":"  \/\/ TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/443","completion":"  \/\/ throw 'Not implemented';\n  return Math.max.apply(null, list1.filter(function(e){\n    return e < 0;\n  }));\n}","language":"javascript"}
{"task_id":"MBJSP\/444","completion":"  \/\/ TODO: Write your code here.\n}","language":"javascript"}
{"task_id":"MBJSP\/445","completion":"  let result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    let inner = [];\n    for (let j = 0; j < testTup1[i].length; j++) {\n      inner.push(testTup1[i][j] * testTup2[i][j]);\n    }\n    result.push(inner);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/446","completion":"  let count = 0;\n  for (let i = 0; i < tup.length; i++) {\n    if (lst.includes(tup[i])) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/447","completion":"  return nums.map(num => num ** 3)\n}","language":"javascript"}
{"task_id":"MBJSP\/448","completion":"  if (n === 1) return 2;\n  else return n + calSum(n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/449","completion":"  if (\n    (x1 > x2 + x3 || x2 > x1 + x3 || x3 > x1 + x2) &&\n    (y1 > y2 + y3 || y2 > y1 + y3 || y3 > y1 + y2)\n  ) {\n    return \"No\";\n  } else {\n    return \"Yes\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/450","completion":"    let results = []\n    for (let i = 0; i < str.length; i += l) {\n        results.push(str[i])\n    }\n    return results\n}","language":"javascript"}
{"task_id":"MBJSP\/451","completion":"    return text1.replace(\/\\s\/g, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/452","completion":"  if (actualCost >= saleAmount) {\n    return actualCost - saleAmount;\n  }\n  return null;\n}","language":"javascript"}
{"task_id":"MBJSP\/453","completion":"    let sum = 0;\n    for (let i = 1; i <= Math.sqrt(n); i++) {\n        if (n % i === 0) {\n            if (i === Math.sqrt(n)) {\n                sum += i;\n            } else {\n                sum += i + n \/ i;\n            }\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/454","completion":"    var re = \/z\/;\n    var m = text.match(re);\n    if (m !== null) {\n        return \"Found a match!\";\n    }\n    else {\n        return \"Not matched!\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/455","completion":"  return monthnum2 % 2 === 0 ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/456","completion":"  let newlist = [];\n  stringlist.forEach((string) => {\n    newlist.unshift(string);\n  });\n  return newlist;\n}","language":"javascript"}
{"task_id":"MBJSP\/457","completion":"    if (lst.length === 0) {\n        return null;\n    }\n    var min = lst[0];\n    for (var i = 0; i < lst.length; i++) {\n        if (lst[i].length < min.length) {\n            min = lst[i];\n        }\n    }\n    return min;\n}","language":"javascript"}
{"task_id":"MBJSP\/458","completion":"  return l * b;\n}","language":"javascript"}
{"task_id":"MBJSP\/459","completion":"    var str2 = str1.replace(\/[A-Z]\/g, '')\n    return str2\n}","language":"javascript"}
{"task_id":"MBJSP\/460","completion":"    return lst.map(v => v[0])\n}","language":"javascript"}
{"task_id":"MBJSP\/461","completion":"  let count = 0;\n  for (let char of str) {\n    if (char === char.toUpperCase()) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/462","completion":"    var list2 = [];\n    var list3 = [];\n    var list4 = [];\n    var list5 = [];\n    var list6 = [];\n    var list7 = [];\n    var list8 = [];\n    var list9 = [];\n    var list10 = [];\n    var list11 = [];\n    var list12 = [];\n    var list13 = [];\n    var list14 = [];\n\n    for (var i = 0; i < list1.length; i++) {\n        list2.push(list1[i]);\n    }\n    for (var j = 0; j < list2.length; j++) {\n        list3.push(list2[j]);\n    }\n    for (var k = 0; k < list3.length; k++) {\n        list4.push(list3[k]);\n    }\n    for (var l = 0; l < list4.length;","language":"javascript"}
{"task_id":"MBJSP\/463","completion":"  let max = -Infinity;\n  let maxProduct = 1;\n  let tempMax;\n  let tempProduct;\n\n  for (let i = 0; i < arr.length; i++) {\n    tempMax = 1;\n    tempProduct = 1;\n\n    for (let j = i; j < arr.length; j++) {\n      tempMax *= arr[j];\n      tempProduct *= arr[j];\n\n      if (tempProduct > max) {\n        max = tempProduct;\n      }\n\n      if (tempMax > maxProduct) {\n        maxProduct = tempMax;\n      }\n    }\n  }\n\n  return maxProduct;\n}","language":"javascript"}
{"task_id":"MBJSP\/464","completion":"    let flag = true\n    Object.keys(dict).map(function(key) {\n        if (dict[key] != n) {\n            flag = false\n        }\n    })\n    return flag\n}","language":"javascript"}
{"task_id":"MBJSP\/465","completion":"    let new_obj = {};\n    for (const key in dict1) {\n        if (dict1[key]) {\n            new_obj[key] = dict1[key];\n        }\n    }\n    return new_obj;\n}","language":"javascript"}
{"task_id":"MBJSP\/466","completion":"  let left = 0;\n  let right = n - 1;\n  while (left < right) {\n    const mid = left + Math.floor((right - left) \/ 2);\n    if (arr[mid - 1] < arr[mid] && arr[mid] > arr[mid + 1]) {\n      return mid;\n    } else if (arr[mid - 1] > arr[mid]) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/467","completion":"    return (decinum * 8);\n}","language":"javascript"}
{"task_id":"MBJSP\/468","completion":"  \/\/ let left = 0;\n  \/\/ let right = n - 1;\n  \/\/ let max = 0;\n  \/\/ let curr = 1;\n\n  \/\/ while (left < right) {\n  \/\/   if (arr[left] < arr[right]) {\n  \/\/     curr *= arr[left];\n  \/\/     left++;\n  \/\/   } else {\n  \/\/     curr *= arr[right];\n  \/\/     right--;\n  \/\/   }\n\n  \/\/   if (curr > max) {\n  \/\/     max = curr;\n  \/\/   }\n  \/\/ }\n\n  \/\/ return max;\n\n  if (n === 1) {\n    return arr[0];\n  }\n\n  return Math.max(arr[0] * maxProduct(arr.slice(1), n - 1), arr[n - 1] * maxProduct(arr.slice(0, n - 1","language":"javascript"}
{"task_id":"MBJSP\/469","completion":"  let maxProfit = -1;\n  if (k > price.length) {\n    return maxProfit;\n  } else if (k === 0) {\n    return 0;\n  } else {\n    for (let i = 0; i < k; i++) {\n      let minPrice = price[i];\n      let maxPrice = price[i];\n      for (let j = i + 1; j < k; j++) {\n        if (price[j] > maxPrice) {\n          maxPrice = price[j];\n        } else if (price[j] < minPrice) {\n          minPrice = price[j];\n        }\n      }\n      let profit = maxPrice - minPrice;\n      if (profit > maxProfit) {\n        maxProfit = profit;\n      }\n    }\n    return maxProfit;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/470","completion":"  const outputTup = [];\n  let output = 0;\n  let test = 0;\n  let count = 0;\n  for (let i = 0; i < testTup.length; i++) {\n    test += testTup[i];\n    count += 1;\n  }\n  outputTup.push(test);\n  outputTup.push(test + (testTup[count] * 2));\n  for (let i = 1; i < testTup.length - 1; i++) {\n    outputTup.push(testTup[i] + testTup[i + 1]);\n  }\n  return outputTup;\n}","language":"javascript"}
{"task_id":"MBJSP\/471","completion":"  if (arr.length === 0) return 0;\n  if (lens === 1) return arr[0] % n;\n\n  const leftArr = arr.slice(0, arr.length \/ 2);\n  const rightArr = arr.slice(arr.length \/ 2);\n\n  return (\n    findRemainder(leftArr, lens \/ 2, n) +\n    findRemainder(rightArr, lens \/ 2, n)\n  );\n}","language":"javascript"}
{"task_id":"MBJSP\/472","completion":"  let count = 0;\n  const nums = l.sort((a, b) => a - b);\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === nums[i + 1]) {\n      count++;\n    } else if (count > 1) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/473","completion":"  return new Set([\n    ...testList1.map((element) => new Set([...element])),\n    ...testList2.map((element) => new Set([...element]))\n  ]);\n}","language":"javascript"}
{"task_id":"MBJSP\/474","completion":"    var result = \"\";\n    for (var i = 0; i < str1.length; i++) {\n        if (str1[i] === ch) {\n            result += newch;\n        } else {\n            result += str1[i];\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/475","completion":"  let arr = [];\n  for (let key in dict1) {\n    arr.push([key, dict1[key]]);\n  }\n  arr.sort((a, b) => b[1] - a[1]);\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/476","completion":"  const num1 = nums[0];\n  const num2 = nums[1];\n  const num3 = nums[2];\n  const num1sum = num1 + num2 + num3;\n  const num2sum = num1 + num2 + num3;\n  const num3sum = num1 + num2 + num3;\n  const num1min = Math.min(num1, num2, num3);\n  const num2min = Math.min(num1, num2, num3);\n  const num3min = Math.min(num1, num2, num3);\n  const num1max = Math.max(num1, num2, num3);\n  const num2max = Math.max(num1, num2, num3);\n  const num3max = Math.max(num1, num2, num3);\n  return num1sum + num2sum + num3sum - num1min - num2min - num3min + num1max + num2max","language":"javascript"}
{"task_id":"MBJSP\/477","completion":"    return string.toLowerCase();\n}","language":"javascript"}
{"task_id":"MBJSP\/478","completion":"    var newStr = \"\";\n    for(var i = 0; i < str1.length; i++){\n        var tempChar = str1.charAt(i);\n        if(tempChar.toLowerCase() != tempChar.toUpperCase()){\n            newStr += tempChar;\n        }\n    }\n    return newStr;\n}","language":"javascript"}
{"task_id":"MBJSP\/479","completion":"    return Math.floor(n \/ 10);\n}","language":"javascript"}
{"task_id":"MBJSP\/480","completion":"  var obj = {},\n    max = 0,\n    maxChar = '';\n\n  for (var i = 0; i < str1.length; i += 1) {\n    if (str1[i] in obj) {\n      obj[str1[i]] += 1;\n    } else {\n      obj[str1[i]] = 1;\n    }\n  }\n\n  for (var char in obj) {\n    if (obj[char] > max) {\n      max = obj[char];\n      maxChar = char;\n    }\n  }\n  return maxChar;\n}","language":"javascript"}
{"task_id":"MBJSP\/481","completion":"  if (n < 0) return false;\n  if (sum === 0) return true;\n  if (!set[n]) return false;\n  return isSubsetSum(set, n - 1, sum) || isSubsetSum(set, n - 1, sum - set[n]);\n}","language":"javascript"}
{"task_id":"MBJSP\/482","completion":"    return text.match(\/[A-Z]\\w*\/g)\n}","language":"javascript"}
{"task_id":"MBJSP\/483","completion":"  for (let i = 1; i <= x; i++) {\n    if (x % i === 0) {\n      return i\n    }\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/484","completion":"  return testList1.filter((el) => !testList2.some((el2) => el2[0] === el[0]));\n}","language":"javascript"}
{"task_id":"MBJSP\/485","completion":"  const largestPalindrome = [];\n  if (n === 0 || n === 1) {\n    return n;\n  }\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      const palindrome = a.slice(i, n - j);\n      if (palindrome === palindrome.split('').reverse().join('')) {\n        largestPalindrome.push(parseInt(palindrome));\n      }\n    }\n  }\n  console.log(largestPalindrome);\n  return Math.max.apply(null, largestPalindrome);\n}","language":"javascript"}
{"task_id":"MBJSP\/486","completion":"  var sum = 0;\n  var denominator = 1 - p;\n  for (var i = 0; i < k; i++) {\n    sum += p;\n    denominator *= (n - i);\n  }\n  return sum \/ denominator;\n}","language":"javascript"}
{"task_id":"MBJSP\/487","completion":"  let arr = [];\n\n  for (let i = 0; i < tup.length; i++) {\n    for (let j = 0; j < tup[i].length; j++) {\n      if (j === tup[i].length - 1) {\n        arr.push(tup[i]);\n      }\n    }\n  }\n  arr.sort(function(a, b) {\n    return a[b.length - 1] - b[b.length - 1];\n  });\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/488","completion":"  if (a < 0) {\n    return \"invalid\";\n  }\n\n  var area = (1 * (3 * (Math.sqrt(3) * Math.pow(a, 2))) \/ 2);\n  return Math.round(area * 1000) \/ 1000;\n}","language":"javascript"}
{"task_id":"MBJSP\/489","completion":"  let largest = 0;\n  let freq = 0;\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > largest) {\n      freq = 1;\n      largest = arr[i];\n      count = 1;\n    } else {\n      freq += 1;\n      if (arr[i] === largest) count++;\n    }\n  }\n  return count > n ? 0 : freq;\n}","language":"javascript"}
{"task_id":"MBJSP\/490","completion":"    let list = new Set(testList)\n    const symmetricPairs = new Set()\n    const arr = [...list]\n\n    function addSymmetricPairs(set, first, second) {\n        if (first < 0 || second < 0 || first >= arr.length || second >= arr.length) return\n        if (arr[first] === arr[second]) {\n            const pair = [arr[first], arr[second]]\n            set.add(pair)\n            addSymmetricPairs(set, first - 1, second - 1)\n        }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        const pair = [arr[i], arr[(i + 1) % arr.length]]\n        addSymmetricPairs(symmetricPairs, i, (i + 1) % arr.length)\n    }\n\n    return symmetricPairs\n}","language":"javascript"}
{"task_id":"MBJSP\/491","completion":"  return a * Math.pow(r, n) * Math.pow(1 - r, n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/492","completion":"    let low = 0;\n    let high = itemList.length - 1;\n    while (low <= high) {\n        let mid = Math.floor((low + high) \/ 2);\n        if (itemList[mid] === item) {\n            return true;\n        } else if (item > itemList[mid]) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/493","completion":"    var polygons = [];\n    for (var y = starty; y < endy; y++) {\n        for (var x = startx; x < endx; x++) {\n            var angle = Math.atan2(endy - y, endx - x) * 180 \/ Math.PI;\n            var p = [x, y];\n            var dx = Math.cos(angle * Math.PI \/ 180);\n            var dy = Math.sin(angle * Math.PI \/ 180);\n            p[0] = p[0] + dx * radius;\n            p[1] = p[1] + dy * radius;\n            polygons.push(p);\n        }\n    }\n    return polygons;\n}","language":"javascript"}
{"task_id":"MBJSP\/494","completion":"  \/\/ TODO: implement this function\n  return testTup.join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/495","completion":"  return str1.replace(\/[a-z]\/gi, \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/496","completion":"  const minHeap = [];\n  for (let i = 0; i < n; i++) {\n    heapifyUp(minHeap, nums[i]);\n  }\n  for (let i = n; i < nums.length; i++) {\n    if (nums[i] < minHeap[0]) {\n      minHeap[0] = nums[i];\n      heapifyDown(minHeap, nums[i], 0);\n    }\n  }\n  return minHeap;\n}","language":"javascript"}
{"task_id":"MBJSP\/497","completion":"  var s = (2 * Math.PI * r) + (2 * Math.PI * r * h);\n  return s;\n}","language":"javascript"}
{"task_id":"MBJSP\/498","completion":"  if (y > x) {\n    x = x + y\n    y = y - x\n    x = x - y\n  }\n  return x\n}","language":"javascript"}
{"task_id":"MBJSP\/499","completion":"  let diameter = 2 * r;\n  return diameter;\n}","language":"javascript"}
{"task_id":"MBJSP\/500","completion":"  var result = '';\n  for (var i = 0; i < list.length; i++) {\n    result += list[i];\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/501","completion":"    if(x === y) {\n        return x;\n    }\n    for(i=Math.floor(x\/y); i>0; i--) {\n        if(x % i === 0 && y % i === 0) {\n            return i;\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/502","completion":"  return n % m;\n}","language":"javascript"}
{"task_id":"MBJSP\/503","completion":"  let numArray = [];\n\n  for (let i = 0; i < nums.length; i++) {\n    numArray.push(nums[i]);\n    if (i !== nums.length - 1 && numArray.length !== 0) {\n      numArray.push(nums[i + 1] - nums[i]);\n    }\n  }\n  return numArray;\n}","language":"javascript"}
{"task_id":"MBJSP\/504","completion":"    \/\/code goes here\n}","language":"javascript"}
{"task_id":"MBJSP\/505","completion":"  \/\/ TODO: write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/506","completion":"  const nCk = factorial(n) \/ (factorial(k) * factorial(n - k));\n  return nCk;\n}","language":"javascript"}
{"task_id":"MBJSP\/507","completion":"  const words = [];\n  for (const word of list1) {\n    if (!removewords.includes(word)) {\n      words.push(word);\n    }\n  }\n  return words;\n}","language":"javascript"}
{"task_id":"MBJSP\/508","completion":"    const arr = [];\n\n    for (let i = 0; i < l1.length; i++) {\n        arr.push(l1[i]);\n    }\n\n    for (let i = 0; i < l2.length; i++) {\n        if (arr.indexOf(l2[i]) == -1) {\n            return false;\n        }\n    }\n\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/509","completion":"    let total = 0;\n    for (let i = 1; i <= n; i += 2) {\n        total += i;\n    }\n    return total \/ n;\n}","language":"javascript"}
{"task_id":"MBJSP\/510","completion":"    if (arr.length === 0) {\n        return 0;\n    }\n\n    if (arr.length === 1) {\n        return 1;\n    }\n\n    const dp = new Array(arr.length).fill(1);\n    let left = 0;\n    let right = 1;\n\n    for (; right < arr.length; right++) {\n        const curr = arr[right];\n        let min = Infinity;\n        for (let i = left; i < right; i++) {\n            const sub = arr[i];\n            if (sub * curr < k && sub * curr < min) {\n                min = sub * curr;\n            }\n        }\n\n        for (let i = right - 1; i >= left; i--) {\n            const sub = arr[i];\n            if (sub * curr >= min) {\n                dp[right] += dp[i];\n            }\n","language":"javascript"}
{"task_id":"MBJSP\/511","completion":"  let sum = 0;\n  for (let i = 1; i < num; i++) {\n    if (num % i === 0) sum += i;\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/512","completion":"  const result = {};\n  for (let i = 0; i < testTuple.length; i++) {\n    const element = testTuple[i];\n    if (Array.isArray(element)) {\n      const subResult = countElementFreq(element);\n      Object.keys(subResult).forEach(key => {\n        result[key] = result[key] ? result[key] + subResult[key] : subResult[key];\n      });\n    } else if (typeof element === 'number') {\n      result[element] = result[element] ? result[element] + 1 : 1;\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/513","completion":"  let tup = [...testTup];\n  let str = k;\n  for (let i = 0; i < tup.length; i++) {\n    tup[i] = [tup[i], str];\n  }\n  return tup;\n}","language":"javascript"}
{"task_id":"MBJSP\/514","completion":"  if (testTup.length === 0) return 0;\n\n  let sum = 0;\n  for (let i = 0; i < testTup.length; i++) {\n    sum += testTup[i];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/515","completion":"  \/\/ Your code here\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return sum % m === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/516","completion":"  let maxDigit = 0\n  \/\/ Find the maximum number in the array\n  for (let i = 0; i < nums.length; i++) {\n    if (Math.log10(nums[i]) > maxDigit) {\n      maxDigit = Math.log10(nums[i])\n    }\n  }\n\n  \/\/ Create the buckets\n  let arr = new Array(10)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = []\n  }\n\n  \/\/ Put the numbers in the buckets\n  for (let i = 0; i < maxDigit; i++) {\n    for (let j = 0; j < nums.length; j++) {\n      let index = Math.floor(Math.log10(nums[j])) + i\n      if (index < 10) {\n        arr[index].push(nums[j])\n      }\n    }\n\n    \/\/ Sort","language":"javascript"}
{"task_id":"MBJSP\/517","completion":"    let max = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] > 0) {\n            max = list1[i];\n            break;\n        }\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/518","completion":"  let x = 0\n  while (Math.abs(x * x - num) >= 0.0001) {\n    x = ((num \/ x) + x) \/ 2\n  }\n  return x\n}","language":"javascript"}
{"task_id":"MBJSP\/519","completion":"  let volume = 1;\n\n  for (let i = 1; i <= num; i += 1) {\n    volume += (2 \/ (i * i));\n  }\n\n  return volume;\n}","language":"javascript"}
{"task_id":"MBJSP\/520","completion":"  if (l.length === 1) return l[0]\n\n  let res = l[0]\n  for (let i = 1; i < l.length; i++) {\n    res = gcd(res, l[i])\n  }\n\n  return res\n}","language":"javascript"}
{"task_id":"MBJSP\/521","completion":"    \/\/ Write your code here\n    if (x === y || x === z || y === z) {\n        return true\n    } else {\n        return false\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/522","completion":"  if (arr.length <= 2) {\n    return arr.length\n  }\n  let max = 0\n  for (let i = 0; i < arr.length; i++) {\n    let j = 1\n    while (j < arr.length - i) {\n      if (arr[j] > arr[j + 1]) {\n        let temp = arr[j]\n        arr[j] = arr[j + 1]\n        arr[j + 1] = temp\n      }\n      j++\n    }\n    if (arr[j - 1] - arr[i] + 1 > max) {\n      max = arr[j - 1] - arr[i] + 1\n    }\n  }\n  return max\n}","language":"javascript"}
{"task_id":"MBJSP\/523","completion":"    let str2 = \"\";\n    str2 += str1[0].toUpperCase();\n    for (let i = 1; i < str1.length; i++) {\n      if (isNaN(str1[i])) {\n        if (str1[i] !== str1[i].toLowerCase()) {\n          str2 += str1[i].toLowerCase();\n        } else {\n          str2 += str1[i];\n        }\n      } else {\n        str2 += str1[i];\n      }\n    }\n    if (str2.length >= 8) {\n      return \"String length should be atleast 8.\";\n    }\n    return `Valid string.`;\n  }","language":"javascript"}
{"task_id":"MBJSP\/524","completion":"  if (!arr || arr.length < n) return null;\n  if (n === 1) return arr[0];\n  const dp = new Array(n).fill(0);\n  let res = 0;\n  for (let i = 1; i < n; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[j] < arr[i]) {\n        dp[i] = Math.max(dp[i], dp[j] + arr[i]);\n      }\n    }\n    res = Math.max(res, dp[i]);\n  }\n  return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/525","completion":"  const [x1, y1] = line1;\n  const [x2, y2] = line2;\n\n  const distance = Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2);\n\n  if (distance === 0) {\n    return true;\n  }\n\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/526","completion":"    \/\/ Write your code here\n    var strArr = str1.split(' ');\n    var result = [];\n\n    for (var i = 0; i < strArr.length; i++) {\n        result.push(strArr[i].charAt(0).toUpperCase() + strArr[i].slice(1, strArr[i].length));\n    }\n\n    return result.join(' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/527","completion":"  const count = [];\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j < arr.length; j++) {\n      if (i !== j) {\n        if ((arr[i] + arr[j]) === sum) {\n          count.push({ arr[i], arr[j] });\n        }\n      }\n    }\n  }\n  return count.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/528","completion":"  return list1.reduce((list, subList) => {\n    if (subList.length < list.length) {\n      return subList;\n    } else {\n      return list;\n    }\n  }, list1[0]);\n}","language":"javascript"}
{"task_id":"MBJSP\/529","completion":"  if (n === 1) {\n    return 1;\n  }\n  if (n === 2) {\n    return 2;\n  }\n  return jacobsthalLucas(n - 1) + jacobsthalLucas(n - 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/530","completion":"  return nums.reduce((negative, num) => (num < 0 ? negative + 1 : negative), 0) \/ nums.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/531","completion":"    if (v === 0) {\n        return 0;\n    }\n\n    var i,\n        n = coins.length;\n    for (i = n - 1; i >= 0; i--) {\n        if (v - coins[i] >= 0) {\n            var numCoins = minCoins(coins, i, v - coins[i]) + 1;\n            if (numCoins < m) {\n                m = numCoins;\n            }\n        }\n    }\n\n    return m;\n}","language":"javascript"}
{"task_id":"MBJSP\/532","completion":"    if (str1.length !== str2.length) return false;\n    let counter = {};\n    for (let char of str1) {\n        counter[char] = counter[char] + 1 || 1;\n    }\n    for (let char of str2) {\n        if (!counter[char]) return false;\n        counter[char]--;\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/534","completion":"  let locations = []\n\n  for (let i = 0; i <= text.length - pattern.length; i++) {\n    let substr = text.slice(i, i + pattern.length)\n    if (substr === pattern) {\n      locations.push(i)\n    }\n  }\n  return locations\n}","language":"javascript"}
{"task_id":"MBJSP\/535","completion":"  return (Math.PI * r**2 * (r + 2)).toFixed(2);\n}","language":"javascript"}
{"task_id":"MBJSP\/536","completion":"  if (n > list.length) {\n    throw \"Invalid input\";\n  }\n  return list.slice(list.length - n, list.length);\n}","language":"javascript"}
{"task_id":"MBJSP\/537","completion":"  const arr = str1.split(' ');\n  const map = {};\n  for (let i = 0; i < arr.length; i += 1) {\n    if (map[arr[i]]) {\n      return arr[i];\n    }\n    map[arr[i]] = 1;\n  }\n  return 'None';\n}","language":"javascript"}
{"task_id":"MBJSP\/538","completion":"    let strArray = str1.split(\" \");\n    let result = [];\n    strArray.forEach(element => {\n        result.push(element.split(\"\").shift().toUpperCase());\n    });\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/539","completion":"  \/\/ code here\n\n}","language":"javascript"}
{"task_id":"MBJSP\/540","completion":"  \/\/ TODO:\n}","language":"javascript"}
{"task_id":"MBJSP\/541","completion":"    let s = 0;\n    for (let i = 1; i < n; i++) {\n        if (n % i === 0) s += i;\n    }\n    return s > n;\n}","language":"javascript"}
{"task_id":"MBJSP\/542","completion":"  return text.replace(\/\\s+|,|\\.+\/g, ':');\n}","language":"javascript"}
{"task_id":"MBJSP\/543","completion":"  let sum = 0;\n  while (num1 || num2) {\n    if (num1 % 10 > num2 % 10) {\n      sum += num2 % 10;\n      num2 = Math.floor(num2 \/ 10);\n    } else {\n      sum += num1 % 10;\n      num1 = Math.floor(num1 \/ 10);\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/544","completion":"    var finalList = [];\n    var tempList = [];\n    var tupleCount = 0;\n\n    function flatten(inputList, depth) {\n        for (var i = 0; i < inputList.length; i++) {\n            var item = inputList[i];\n            var index = depth + 1;\n            var isTuple = false;\n            if (item instanceof Array) {\n                if (tupleCount > 0) {\n                    isTuple = true;\n                }\n                flatten(item, index);\n            } else {\n                tempList.push(item);\n            }\n            if (isTuple) {\n                tupleCount++;\n            } else if (tempList.length > 0) {\n                finalList.push(tempList.join(\" \"));\n                tupleCount = 0;\n                tempList = [];\n            }\n        }\n    }\n\n    flatten(testList, 0);\n    if (tempList.","language":"javascript"}
{"task_id":"MBJSP\/545","completion":"  return (n & 0xF) | ((n & 0xF0) >> 4);\n}","language":"javascript"}
{"task_id":"MBJSP\/546","completion":"    let counter = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === char) {\n            counter = i;\n        }\n    }\n    if (counter === 0) {\n        return null;\n    }\n    else {\n        return counter;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/547","completion":"  var a = 0;\n  while (n > 0) {\n    n = n & (n - 1);\n    a += 1;\n  }\n  return a;\n}","language":"javascript"}
{"task_id":"MBJSP\/548","completion":"  let len = arr.length,\n    len_max = 0;\n  if (!len) return len_max;\n\n  let dp = [];\n  for (let i = 0; i < len; i++) {\n    dp[i] = [];\n  }\n\n  for (let i = 0; i < len; i++) {\n    dp[i][0] = 1;\n  }\n\n  for (let i = 1; i < len; i++) {\n    for (let j = 1; j < i; j++) {\n      if (arr[i] > arr[j]) {\n        dp[i][j] = dp[j][i - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[j][i - 1], dp[i - 1][j]);\n      }\n    }\n  }\n\n  for (let i","language":"javascript"}
{"task_id":"MBJSP\/549","completion":"    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        if (i % 2 !== 0) {\n            sum += Math.pow(i, 5);\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/550","completion":"  if (low === high) return arr[low];\n  if (low === high - 1) return Math.max(arr[low], arr[high]);\n\n  const mid = Math.floor((low + high) \/ 2);\n  const left = findMax(arr, low, mid);\n  const right = findMax(arr, mid, high);\n\n  return Math.max(left, right);\n}","language":"javascript"}
{"task_id":"MBJSP\/551","completion":"    const result = list1.map(element => element[n])\n    return result\n}","language":"javascript"}
{"task_id":"MBJSP\/552","completion":"    var i,\n        len,\n        result;\n\n    if (seqNums.length == 1) {\n        return 'Linear Sequence';\n    } else if (seqNums.length == 2) {\n        if (seqNums[0] == seqNums[1]) {\n            return 'Linear Sequence';\n        } else {\n            return 'Non Linear Sequence';\n        }\n    }\n\n    len = seqNums.length;\n    for (i = 0; i < len - 1; i++) {\n        if (seqNums[i] + 1 != seqNums[i + 1]) {\n            return 'Non Linear Sequence';\n        }\n    }\n    return 'Linear Sequence';\n}","language":"javascript"}
{"task_id":"MBJSP\/553","completion":"  \/\/ TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/554","completion":"    var odd = [];\n    for (var i = 0; i < list.length; i++) {\n        if (i % 2 === 1) {\n            odd.push(list[i]);\n        }\n    }\n    return odd;\n}","language":"javascript"}
{"task_id":"MBJSP\/555","completion":"    let firstNum = 0;\n    let sum = 0;\n    let sumOfCubes = 0;\n    for (let i = 0; i < n; i++) {\n        firstNum += Math.pow(i, 3);\n        sum += i;\n        sumOfCubes += Math.pow(i, 3);\n    }\n    return sum - sumOfCubes;\n}","language":"javascript"}
{"task_id":"MBJSP\/556","completion":"    let sum = 0;\n    for (let i = 0; i < a.length; i++) {\n        sum = a[i] ^ n\n        if (sum === a[i + 1]) {\n            return sum\n        }\n    }\n    return sum\n}","language":"javascript"}
{"task_id":"MBJSP\/557","completion":"  return string.toLowerCase().replace(\/[a-z]\/g, char =>\n    char === char.toUpperCase()\n      ? char.toLowerCase()\n      : char.toUpperCase()\n  );\n}","language":"javascript"}
{"task_id":"MBJSP\/558","completion":"    return Math.abs(n1 - n2).toString().length;\n}","language":"javascript"}
{"task_id":"MBJSP\/559","completion":"  let max = 0;\n  let current = 0;\n  for (let i = 0; i < a.length - size + 1; i++) {\n    for (let j = 0; j < size; j++) {\n      current += a[i + j];\n    }\n    if (current > max) max = current;\n    current = 0;\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/560","completion":"  return [...new Set(testTup1.concat(testTup2))]\n}","language":"javascript"}
{"task_id":"MBJSP\/561","completion":"  let res = [];\n  let map = {};\n  for (let i = 0; i < testList.length; i++) {\n    res.push(testList[i].sort());\n  }\n  res.sort((a, b) => a.length - b.length);\n  let temp = [];\n  let start = 0;\n  let end = res.length - 1;\n  while (start < end) {\n    let first = res[start][0];\n    let second = res[end][0];\n    if (first === second) {\n      temp.push(first);\n      temp.push(res[start][1]);\n      temp.push(res[end][1]);\n      map[first] = temp;\n      temp = [];\n      start++;\n      end--;\n    } else if (first < second) {\n      temp.push(first);\n      temp.push(res[start][1]);\n      map[first] =","language":"javascript"}
{"task_id":"MBJSP\/562","completion":"    let result = 0;\n    let temp = 0;\n    for (let i = 0; i < lst.length; i++) {\n        let element = lst[i];\n        temp = 0;\n        for (let j = 0; j < element.length; j++) {\n            if (element[j] == element[j + 1]) {\n                temp++;\n            } else {\n                if (temp > result) {\n                    result = temp;\n                }\n                temp = 0;\n            }\n        }\n        if (temp > result) {\n            result = temp;\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/563","completion":"  return text.match(\/\".*?\"\/g) || [];\n}","language":"javascript"}
{"task_id":"MBJSP\/564","completion":"    let counter = 0;\n    let len = arr.length;\n    for (let i = 0; i < len - 1; i++) {\n        for (let j = i + 1; j < len; j++) {\n            if (arr[i] !== arr[j] && arr[i] + arr[j] === n) {\n                counter++;\n            }\n        }\n    }\n    return counter;\n}","language":"javascript"}
{"task_id":"MBJSP\/565","completion":"  var arr = [];\n  for(let i = 0; i < word.length; i++) {\n    arr.push(word[i]);\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/566","completion":"  if (n < 10) return n;\n  return sumDigits(String(n).split('').reduce((a, b) => a + +b));\n}","language":"javascript"}
{"task_id":"MBJSP\/567","completion":"  let len = list1.length;\n  let left = 0;\n  let right = len - 1;\n  while (left < right) {\n    if (list1[left] < list1[right]) {\n      return true;\n    } else if (list1[left] > list1[right]) {\n      return false;\n    } else {\n      left++;\n      right--;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/568","completion":"  \/\/ Your code here.\n}","language":"javascript"}
{"task_id":"MBJSP\/569","completion":"    const result = [];\n\n    for (let i = 0; i < list1.length; i++) {\n        result.push(list1[i].slice().sort());\n    }\n\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/570","completion":"  \/\/ TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/571","completion":"  \/\/ get the max sum for the left\n  \/\/ get the max sum for the right\n  \/\/ get the diff\n  \/\/ if diff is less than k, then add the sum to the left sum and subtract the diff to the right sum\n}","language":"javascript"}
{"task_id":"MBJSP\/572","completion":"  let arr = [];\n  for (let i = 0; i < nums.length; i++) {\n    if (arr.indexOf(nums[i]) === -1) {\n      arr.push(nums[i]);\n    } else {\n      nums.splice(i, 1);\n      i--;\n    }\n  }\n  return nums;\n}","language":"javascript"}
{"task_id":"MBJSP\/573","completion":"    let result = 1\n    for(let i=0; i<listData.length; i++){\n        result = result * listData[i]\n    }\n    return result\n}","language":"javascript"}
{"task_id":"MBJSP\/574","completion":"    return Math.PI * Math.pow(r, 2) + Math.PI * Math.pow(r, 2) * h\n}","language":"javascript"}
{"task_id":"MBJSP\/575","completion":"  const arr = [];\n  for (let i = l; i <= r; i += 1) {\n    if (i % n === 0) {\n      arr.push(i);\n    }\n  }\n  return arr.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/576","completion":"  let k = 0;\n  for (let i = 0; i < n; i++) {\n    if (b[i] !== a[k]) {\n      k++;\n      if (k > m) {\n        return false;\n      }\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/577","completion":"    if (n == 0) return 0;\n    if (n % 10 === 0) return 0;\n    return n % 10;\n}","language":"javascript"}
{"task_id":"MBJSP\/578","completion":"  const result = [];\n  let i = 0;\n  let j = 0;\n  let k = 0;\n\n  while (i < list1.length && j < list2.length && k < list3.length) {\n    result.push(list1[i]);\n    result.push(list2[j]);\n    result.push(list3[k]);\n    i++;\n    j++;\n    k++;\n  }\n\n  if (i < list1.length) {\n    result.push(...list1.slice(i));\n  }\n\n  if (j < list2.length) {\n    result.push(...list2.slice(j));\n  }\n\n  if (k < list3.length) {\n    result.push(...list3.slice(k));\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/579","completion":"    \/\/TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/580","completion":"  const [head, ...tail] = testTuple;\n\n  if (head % 2 === 0) {\n    return tail.map((i) => {\n      if (Array.isArray(i)) {\n        return extractEven(i);\n      }\n      return i;\n    });\n  }\n\n  return [head];\n}","language":"javascript"}
{"task_id":"MBJSP\/581","completion":"\treturn b * s * 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/582","completion":"  return Object.keys(dict1).length === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/583","completion":"  let counter = 1;\n  let catalan = 1;\n  for (let i = 2; i <= num; i++) {\n    for (let j = 2; j <= i; j++) {\n      if (i % j === 0) {\n        counter += 1;\n        if (counter === num) {\n          catalan *= i;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n  return catalan;\n}","language":"javascript"}
{"task_id":"MBJSP\/584","completion":"  const adverbs = [\"ably\", \"able\", \"acid\", \"acrid\", \"admit\", \"adverse\", \"afore\", \"afraid\", \"aged\", \"aggravate\", \"ain't\", \"ain't\", \"alas\", \"alive\", \"all\", \"am\", \"ambiguous\", \"amuck\", \"amuse\", \"anew\", \"angelic\", \"angrily\", \"anxiously\", \"anxiously\", \"anxiously\", \"apprehensive\", \"appropriate\", \"apt\", \"arrogantly\", \"assiduous\", \"astonish\", \"astonished\", \"atrocious\", \"atrocious\", \"atrocious\", \"attentive\", \"aunt\", \"augur\", \"avaricious\", \"avaricious\", \"avaricious\", \"avaricious\", \"avaricious\", \"avaricious\", \"beneath\", \"","language":"javascript"}
{"task_id":"MBJSP\/585","completion":"    let itemHeap = new PriorityQueue(function (a, b) {\n        return a.price - b.price;\n    });\n\n    for (let i = 0; i < items.length; i++) {\n        itemHeap.insert(items[i]);\n    }\n\n    let output = [];\n    while (n > 0) {\n        output.push(itemHeap.remove());\n        n--;\n    }\n\n    return output;\n}","language":"javascript"}
{"task_id":"MBJSP\/586","completion":"    return a.splice(0,k).concat(a);\n}","language":"javascript"}
{"task_id":"MBJSP\/587","completion":"    if (listx.length > 2) {\n        return listx.slice(0, 2);\n    }\n    return listx;\n}","language":"javascript"}
{"task_id":"MBJSP\/588","completion":"  let biggest = Math.max(...nums);\n  let smallest = Math.min(...nums);\n  return biggest - smallest;\n}","language":"javascript"}
{"task_id":"MBJSP\/589","completion":"  return [...Array(b-a+1)].map((_, i) => i+a);\n}","language":"javascript"}
{"task_id":"MBJSP\/591","completion":"    var newlist1 = newlist[0]\n    var newlist2 = newlist[newlist.length - 1]\n\n    newlist.unshift(newlist2)\n    newlist.push(newlist1)\n\n    return newlist\n}","language":"javascript"}
{"task_id":"MBJSP\/592","completion":"  let prod = 1;\n  let count = n;\n\n  for (let i = 1; i < n; i++) {\n    prod *= i;\n  }\n  while (count > 0) {\n    prod \/= count;\n    count--;\n  }\n  return prod;\n}","language":"javascript"}
{"task_id":"MBJSP\/593","completion":"  let result = [];\n  for (let i = 0; i < ip.length; i++) {\n    if (ip[i] !== '0') {\n      result.push(ip[i]);\n    }\n  }\n  return result.join('.');\n}","language":"javascript"}
{"task_id":"MBJSP\/594","completion":"  var even = [];\n  var odd = [];\n  for (var i = 0; i < list1.length; i++) {\n    if (list1[i] % 2 === 0) {\n      even.push(list1[i]);\n    } else {\n      odd.push(list1[i]);\n    }\n  }\n  return Math.abs(even.length - odd.length);\n}","language":"javascript"}
{"task_id":"MBJSP\/595","completion":"  let counter = 0;\n  for (let i = 0; i < str1.length; i++) {\n    if (str1[i] !== str2[i]) {\n      counter++;\n      [str1[i], str2[i]] = [str2[i], str1[i]];\n    }\n  }\n  return counter;\n}","language":"javascript"}
{"task_id":"MBJSP\/597","completion":"  let p1 = 0,\n    p2 = 0,\n    p3 = 0;\n  while (p1 < arr1.length && p2 < arr2.length) {\n    if (arr1[p1] < arr2[p2]) {\n      p3++;\n      if (p3 === k) {\n        return arr1[p1];\n      }\n      p1++;\n    } else if (arr1[p1] > arr2[p2]) {\n      p3++;\n      if (p3 === k) {\n        return arr2[p2];\n      }\n      p2++;\n    } else {\n      p1++;\n      p2++;\n    }\n  }\n  if (p1 >= arr1.length) {\n    return arr2[p2 + k - 1];\n  }\n  if (p2 >= arr2.length) {\n    return arr1[p1 ","language":"javascript"}
{"task_id":"MBJSP\/598","completion":"    let num = number.toString();\n    let count = 0;\n    for (let i = 0; i < num.length; i++) {\n        count += Math.pow(parseInt(num[i]), num.length);\n    }\n    if (count === number) {\n        return true;\n    } else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/599","completion":"    let sum = 0;\n    let avg = 0;\n    for(let i = 1; i <= number; i++) {\n        sum += i;\n    }\n    avg = sum \/ number;\n    return [sum, avg];\n}","language":"javascript"}
{"task_id":"MBJSP\/600","completion":"    return (n & 1) === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/602","completion":"    const newStr = str1.toLowerCase();\n    const char = {};\n    for (let i = 0; i < newStr.length; i++) {\n        const charItem = newStr[i];\n        if (char[charItem]) {\n            return charItem;\n        } else {\n            char[charItem] = 1;\n        }\n    }\n    return 'None';\n}","language":"javascript"}
{"task_id":"MBJSP\/603","completion":"  let numbers = [];\n  for (let i = 1; i <= n; i++) {\n    numbers.push(i);\n  }\n  let first = numbers.shift();\n  let last = numbers.pop();\n  numbers = numbers.reverse();\n  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    result.push(first + (last * i));\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/604","completion":"  let words = s.split(\" \");\n  let reverseWord = \"\";\n  for (let i = words.length - 1; i >= 0; i--) {\n    reverseWord += \" \" + words[i];\n  }\n  return reverseWord.slice(1);\n}","language":"javascript"}
{"task_id":"MBJSP\/605","completion":"  if (num === 0) return false\n  else if (num === 1 || num === 2) return true\n  else if (num < 0) return false\n  else if (num === '0') return false\n  else if (num < 2) return false\n\n  for (let i = 2; i < num; i++) {\n    if (num % i === 0) {\n      return false\n    }\n  }\n  return true\n}","language":"javascript"}
{"task_id":"MBJSP\/606","completion":"  return degree * Math.PI \/ 180;\n}","language":"javascript"}
{"task_id":"MBJSP\/607","completion":"    const patternRegex = `\\\\b${pattern}\\\\b`;\n    const regex = new RegExp(patternRegex, \"g\");\n    let match = regex.exec(text);\n    let literal;\n    let start;\n    let end;\n\n    while (match) {\n        start = match.index;\n        end = start + match[0].length;\n        literal = match[0];\n        match = regex.exec(text);\n    }\n\n    return [literal, start, end];\n}","language":"javascript"}
{"task_id":"MBJSP\/608","completion":"  let bellNum = 1;\n  for (let i = 2; i <= n; i++) {\n    bellNum += bellNum * 2;\n  }\n  return bellNum;\n}","language":"javascript"}
{"task_id":"MBJSP\/609","completion":"    let c = Math.min(a, b) - n\n    if(c > 0) return c\n    return 0\n}","language":"javascript"}
{"task_id":"MBJSP\/610","completion":"    if (list1.length <= l) {\n        return list1;\n    }\n\n    let firstPart = list1.slice(0, l);\n    let secondPart = list1.slice(l + 1, list1.length);\n    return firstPart.concat(secondPart);\n}","language":"javascript"}
{"task_id":"MBJSP\/611","completion":"  if (testList[0].length === 1) return testList[0][n];\n  const length = testList.length;\n  const [head, ...tail] = testList;\n  return Math.max(maxOfNth(tail, n), maxOfNth(tail, n - 1) + head[n - 1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/612","completion":"    \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/613","completion":"  let result = [];\n  if (!testList.length) {\n    return result;\n  }\n  let testArr = [...testList[0]];\n  for (let i = 1; i < testList.length; i++) {\n    let temp = testList[i];\n    for (let j = 0; j < temp.length; j++) {\n      if (testArr[j] < temp[j]) {\n        testArr[j] = temp[j];\n      }\n    }\n  }\n  result.push(testArr);\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/614","completion":"  let sum = 0;\n  for (let i = 0; i < testList.length; i++) {\n    const tuple = testList[i];\n    const sumFromTuple = tuple.reduce((acc, curr) => acc + curr, 0);\n    sum += sumFromTuple;\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/615","completion":"  return nums\n    .map((arr) => {\n      const sum = arr.reduce((acc, cur) => acc + cur, 0);\n      const length = arr.length;\n      return sum \/ length;\n    })\n    .sort((a, b) => a - b);\n}","language":"javascript"}
{"task_id":"MBJSP\/616","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/617","completion":"  let jumps = 0;\n  if (a == b) {\n    return jumps;\n  }\n  if (a > b) {\n    return 0;\n  }\n  while (a < d) {\n    jumps++;\n    a = a + b;\n    b = b - a;\n  }\n  return jumps;\n}","language":"javascript"}
{"task_id":"MBJSP\/618","completion":"  return nums1.map((num1) => num1 \/ nums2)\n}","language":"javascript"}
{"task_id":"MBJSP\/619","completion":"  const numbers = \/\\d+\/g;\n  const testNumbers = testStr.match(numbers);\n  const testString = testStr.split('');\n  const resultString = testString.map((val, i) => {\n    const current = testNumbers[i];\n    const next = testNumbers[i + 1];\n    return current !== undefined\n      ? current < next ? `${current}${next}` : `${next}${current}`\n      : val;\n  });\n  const res = resultString.join('');\n  return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/620","completion":"  let result = [];\n  if (a.length === 0 || n === 0) {\n    return 0;\n  }\n\n  for (let i = 0; i < a.length; i += 1) {\n    if (result.length === 0) {\n      result.push(a[i]);\n    }\n    for (let j = 0; j < result.length; j += 1) {\n      if (a[i] % result[j] === 0) {\n        if (result[j] === n) {\n          return result.length;\n        }\n        result.push(a[i]);\n      }\n    }\n  }\n\n  return result.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/621","completion":"  return testList.map(string => {\n    const num = Number.parseInt(string);\n    if (Number.isNaN(num)) {\n      return string;\n    } else {\n      return String(num + k);\n    }\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/622","completion":"  const arr = [];\n  for (let i = 0; i < n; i++) {\n    arr[i] = Math.max(arr1[i], arr2[i]);\n  }\n\n  for (let i = 0; i < n; i++) {\n    if (arr1[i] > arr[n - 1]) arr.push(arr1[i]);\n    else arr.push(arr2[i]);\n  }\n\n  arr.sort((a, b) => a - b);\n\n  const mid = Math.floor(arr.length \/ 2);\n\n  return arr.length % 2 !== 0 ? arr[mid] : (arr[mid - 1] + arr[mid]) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/623","completion":"  const nthNums = (arr, n) => {\n    if (n === 1) return arr;\n    return nthNums(arr.map((el, i) => el * arr[i]), n - 1);\n  };\n\n  return nthNums(nums, n);\n}","language":"javascript"}
{"task_id":"MBJSP\/624","completion":"    return string.toUpperCase();\n}","language":"javascript"}
{"task_id":"MBJSP\/625","completion":"  let arr = [];\n  arr = newlist.slice(1, newlist.length - 1);\n  arr.push(newlist[0]);\n  arr.push(newlist[newlist.length - 1]);\n  console.log(arr);\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/626","completion":"    if (r === 0 || r === -1) {\n        return r;\n    } else if (r > 0) {\n        return (Math.sqrt(3) \/ 4) * Math.pow(r, 2);\n    } else {\n        return -1;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/627","completion":"  let min = Math.min(start, end);\n  let max = Math.max(start, end);\n  \/\/ find the element in the range [start, end] which is not in the array\n  \/\/ if no such element exists, then the missing number is the smallest number in the range\n  \/\/ (it will have to be > start, < end)\n  for (let i = start; i <= end; i++) {\n    if (!array.includes(i)) {\n      return i;\n    }\n  }\n  return array[start];\n}","language":"javascript"}
{"task_id":"MBJSP\/628","completion":"  const arr = string.split(\"\");\n  let str = \"\";\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === \" \") {\n      str += \"%20\";\n    } else {\n      str += arr[i];\n    }\n  }\n  return str;\n}","language":"javascript"}
{"task_id":"MBJSP\/629","completion":"    const result = []\n    list.map(item => result.push(item))\n    result.sort()\n    result.map((item, index, arr) => arr[index] = item % 2 === 0 ? item : null)\n    return result.filter(item => item)\n}","language":"javascript"}
{"task_id":"MBJSP\/630","completion":"    let x = testTup[0]\n    let y = testTup[1]\n    let coordinates = []\n    \/\/ loop through and create coordinates\n    for (let i = 1; i <= x + 1; i++) {\n        for (let j = 1; j <= y + 1; j++) {\n            coordinates.push([i, j])\n        }\n    }\n    return coordinates\n}","language":"javascript"}
{"task_id":"MBJSP\/631","completion":"  return text.replace(\/[\\s]\/g, \"_\");\n}","language":"javascript"}
{"task_id":"MBJSP\/632","completion":"    let noZero = [];\n    let zero = [];\n    for (let i = 0; i < numList.length; i++) {\n        if (numList[i] !== 0) {\n            noZero.push(numList[i]);\n        } else {\n            zero.push(numList[i]);\n        }\n    }\n    zero.push(...noZero);\n    return zero;\n}","language":"javascript"}
{"task_id":"MBJSP\/633","completion":"  let sum = 0;\n  arr.map((el, i) => {\n    arr.map((el2, i2) => {\n      if (i !== i2) {\n        sum += Math.abs(el ^ el2);\n      }\n    });\n  });\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/634","completion":"\tlet sum = 0;\n\tfor (let i = 1; i <= n; i += 2) {\n\t\tsum += Math.pow(2, i * 4);\n\t}\n\treturn sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/635","completion":"  const minHeap = [];\n  const maxHeap = [];\n\n  for (let num of iterable) {\n    if (maxHeap.length === 0 || num >= maxHeap[0]) {\n      minHeap.push(num);\n    } else {\n      maxHeap.push(num);\n    }\n    shift();\n  }\n\n  return [...minHeap, ...maxHeap];\n\n  function shift() {\n    if (minHeap.length === 0) {\n      while (maxHeap.length > 0) {\n        minHeap.push(maxHeap.shift());\n      }\n    }\n    if (maxHeap.length === 0) {\n      while (minHeap.length > 0) {\n        maxHeap.push(minHeap.shift());\n      }\n    }\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/636","completion":"    var d = b * b - 4 * a * c;\n    if (d > 0) {\n        var x1 = ((-b) + Math.sqrt(d)) \/ (2 * a);\n        var x2 = ((-b) - Math.sqrt(d)) \/ (2 * a);\n        return \"Yes\";\n    }\n    else if (d === 0) {\n        return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/637","completion":"  return actualCost - saleAmount > 0\n}","language":"javascript"}
{"task_id":"MBJSP\/638","completion":"    const windChill = (v + ((t - v)\/ 5)) * (t - v)\/ (v + ((t - v)\/ 5));\n\n    return windChill.toFixed(0);\n}","language":"javascript"}
{"task_id":"MBJSP\/639","completion":"    let sum = 0\n    for (let i = 0; i < sampleNames.length; i++) {\n        if (sampleNames[i].toLowerCase().startsWith('a')) {\n            sum += sampleNames[i].length\n        }\n    }\n    return sum\n}","language":"javascript"}
{"task_id":"MBJSP\/640","completion":"    return items.reduce((acc, item) => {\n        const [pre, ...rest] = item;\n        const [post] = rest;\n\n        if (pre === \"(\" && post === \")\") {\n            return acc;\n        }\n        return `${acc}${pre}${post}`;\n    }, \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/641","completion":"  let a = (n * (n + 1)) \/ 2\n  return n < 100 ? a : n % 6 !== 0 ? a : -1\n}","language":"javascript"}
{"task_id":"MBJSP\/643","completion":"    const matches = text.match(\/[a-zA-Z]+[a-zA-Z]z\/g)\n    if (matches) {\n        return `Found a match!`\n    } else {\n        return `Not matched!`\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/644","completion":"  let result = [];\n  for (let i = 0; i < k; i++) {\n    result.push(input.shift());\n  }\n  input.reverse().forEach((item) => {\n    result.push(item);\n  });\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/645","completion":"  if (testList.length === 0) return 0;\n\n  const sorted = testList.sort((a, b) => a[0] - b[0]);\n  const len = sorted.length;\n  const product = sorted[len - 1][k] * sorted[len - 2][k];\n\n  return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/646","completion":"    return (Math.pow(n, 3)) \/ (Math.pow(k, 3));\n}","language":"javascript"}
{"task_id":"MBJSP\/647","completion":"  const splitText = text.split(\/(?=[A-Z])\/);\n\n  return splitText;\n}","language":"javascript"}
{"task_id":"MBJSP\/648","completion":"  const len = lst.length;\n  if (!len) {\n    return lst;\n  }\n\n  const mid = Math.ceil(len \/ 2);\n  const head = lst.splice(0, mid);\n  const tail = lst;\n\n  return [...head, ...tail].sort((a, b) => a - b);\n}","language":"javascript"}
{"task_id":"MBJSP\/649","completion":"  var sum = 0;\n  for (var i = m; i <= n; i++) {\n    sum += nums[i];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/650","completion":"    let arr1Sorted = arr1.sort();\n    let arr2Sorted = arr2.sort();\n    if (arr1Sorted.length !== arr2Sorted.length) return false;\n    let result = true;\n    for (let i = 0; i < arr1Sorted.length; i++) {\n        if (arr1Sorted[i] !== arr2Sorted[i]) result = false;\n    }\n    if (result) return true;\n    else return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/651","completion":"  return testTup2.every((value) => testTup1.includes(value));\n}","language":"javascript"}
{"task_id":"MBJSP\/652","completion":"    var list = [];\n\n    for (var i = 0; i < testList.length; i++) {\n        var row = testList[i];\n        for (var j = 0; j < row.length; j++) {\n            var item = row[j];\n            var tuple = \"(\" + item[0] + \", \" + item[1] + \")\";\n            list.push(tuple);\n        }\n    }\n    return list.join(\", \");\n}","language":"javascript"}
{"task_id":"MBJSP\/653","completion":"  var dict = {};\n  \/\/for each element in the list\n  for (var i=0; i < l.length; i++) {\n    \/\/get the first element of the list and add it to the key of the dict if the first element doesn't exist\n    var key = l[i][0];\n    if (!(key in dict)) {\n      dict[key] = [];\n    }\n    \/\/add the second element of the list to the corresponding key in the dict\n    dict[key].push(l[i][1]);\n  }\n  return dict;\n}","language":"javascript"}
{"task_id":"MBJSP\/654","completion":"    return 2 * (l + b);\n}","language":"javascript"}
{"task_id":"MBJSP\/655","completion":"  let sum = 0;\n  for (let i = 0; i <= n; i++) {\n    sum += Math.pow(5, i);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/656","completion":"    let first = a.sort((a, b) => a - b).slice(0, n)\n    let second = b.sort((a, b) => a - b).slice(0, n)\n    let sum = 0\n    for (let i = 0; i < first.length; i++) {\n        sum += Math.abs(first[i] - second[i])\n    }\n    return sum\n}","language":"javascript"}
{"task_id":"MBJSP\/657","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/658","completion":"  return list1.reduce((acc, cur) => (acc[cur] = acc[cur] + 1 || 1, acc), {})\n    .reduce((acc, cur, i) => (cur > acc[1] ? [i, cur] : acc), [0, 0])[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/659","completion":"    let myArr = [];\n\n    if (x.length == 1) {\n        return x;\n    }\n\n    for (let i = 0; i < x.length; i++) {\n        if (x[i] != x[i + 1]) {\n            myArr.push(x[i]);\n        }\n    }\n\n    return myArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/660","completion":"    let arr1 = [];\n    let arr2 = [];\n\n    for (let i = l1; i < r1; i++) {\n        arr1.push(i);\n    }\n\n    for (let i = l2; i < r2; i++) {\n        arr2.push(i);\n    }\n\n    let finalArr = [];\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr2.indexOf(arr1[i]) === -1) {\n            finalArr.push(arr1[i]);\n        }\n    }\n\n    for (let i = 0; i < arr2.length; i++) {\n        if (arr1.indexOf(arr2[i]) === -1) {\n            finalArr.push(arr2[i]);\n        }\n    }\n\n    return finalArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/661","completion":"  arr = arr.sort((a, b) => a - b);\n\n  let start = 0;\n  let end = n - 1;\n  let max = 0;\n  let currentSum = 0;\n\n  while (start < n) {\n    if (end >= n) {\n      currentSum = arr[start] + arr[end];\n      if (currentSum > max) max = currentSum;\n      start = end + 1;\n      end = start + n - 1;\n    } else {\n      if (arr[start + 1] + arr[end] > currentSum) {\n        currentSum = arr[start + 1] + arr[end];\n      }\n      end = end - 1;\n    }\n  }\n\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/662","completion":"  const dict2 = Object.keys(dict1).reduce((acc, key) => {\n    const sortedArr = dict1[key].sort();\n    acc[key] = sortedArr;\n    return acc;\n  }, {});\n  return dict2;\n}","language":"javascript"}
{"task_id":"MBJSP\/663","completion":"  const values = [];\n  let answer = 0;\n  for (let i = 0; i <= n; i++) {\n    const val = i % y;\n    if (val === 0) {\n      answer = i;\n      break;\n    } else {\n      values.push(i);\n    }\n  }\n  answer = values.reduce((a, b) => (a % y < b % y ? a : b));\n  return answer;\n}","language":"javascript"}
{"task_id":"MBJSP\/664","completion":"    let sum = 0;\n    for (let i = 0; i <= n; i++) {\n        if (i % 2 === 0) {\n            sum += i;\n        }\n    }\n    let result = sum \/ (n + 1);\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/665","completion":"    var length = numList.length;\n    return numList.slice(1, length) + numList[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/666","completion":"  let counter = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === char) {\n      counter++;\n    }\n  }\n  return counter;\n}","language":"javascript"}
{"task_id":"MBJSP\/667","completion":"    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (vowels.indexOf(string[i]) !== -1) {\n            count += 1;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/668","completion":"  return string.split(char).join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/669","completion":"  if (\/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\/.test(ip)) {\n    return \"Valid IP address\";\n  }\n  return \"Invalid IP address\";\n}","language":"javascript"}
{"task_id":"MBJSP\/670","completion":"  \/\/ Code here\n}","language":"javascript"}
{"task_id":"MBJSP\/671","completion":"  return (n & (1 << (n.toString(2).length - 1))) >> 0\n}","language":"javascript"}
{"task_id":"MBJSP\/672","completion":"  if (num1 > num2 && num1 > num3) return num1;\n  if (num2 > num1 && num2 > num3) return num2;\n  return num3;\n}","language":"javascript"}
{"task_id":"MBJSP\/673","completion":"    let result = '';\n    for (let i = 0; i < list.length; i++) {\n        result += list[i];\n    }\n    return parseInt(result);\n}","language":"javascript"}
{"task_id":"MBJSP\/674","completion":"    let arr = string.split(' ');\n    let set = new Set(arr);\n    let unique = [...set];\n    return unique.join(' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/675","completion":"  return Math.max(Math.min(x + y, n), m);\n}","language":"javascript"}
{"task_id":"MBJSP\/676","completion":"  return text1.replace(\/[^\\w]\/g, \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/677","completion":"  if (a + b > c && a + c > b && b + c > a) {\n    return true;\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/678","completion":"    return str1.replace(\/ \/g, \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/679","completion":"  for (let value in ditionary) {\n    if (key === parseInt(value)) {\n      return value;\n    }\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/680","completion":"    \/\/ loop from the start of the array to the end\n    for (let i = 0; i < nums.length - 1; i++) {\n        \/\/ if the next element is greater than the current element, return false\n        if (nums[i] > nums[i + 1]) return false;\n    }\n    \/\/ if the loop completes, return true\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/681","completion":"    for(let i = 2; i <= Math.sqrt(n); i++) {\n        if(n % i === 0) {\n            return i;\n        }\n    }\n    return n;\n}","language":"javascript"}
{"task_id":"MBJSP\/682","completion":"  return nums1.map(e => e * nums2.reduce((acc, e2) => acc + e2, 0))\n}","language":"javascript"}
{"task_id":"MBJSP\/683","completion":"  var sum = 0;\n  while (n) {\n    sum += Math.pow(n % 10, 2);\n    n = Math.floor(n \/ 10);\n  }\n  return sum === n ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/684","completion":"    let count = 0;\n    str = str.split(\"\");\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === x) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/685","completion":"  if (n < 2) return 0;\n  let p = [];\n  let x = 0;\n  for (let i = 2; i < n; i++) {\n    if (p[i] !== undefined) {\n      x += p[i];\n    }\n    for (let j = i + i; j < n; j += i) {\n      p[j] = i;\n    }\n  }\n  return x;\n}","language":"javascript"}
{"task_id":"MBJSP\/686","completion":"  let obj = {};\n\n  for (let i = 0; i < testTup.length; i++) {\n    obj[testTup[i]] = obj[testTup[i]] ? obj[testTup[i]] + 1 : 1;\n  }\n\n  return obj;\n}","language":"javascript"}
{"task_id":"MBJSP\/687","completion":"  if (!b) {\n    return a;\n  }\n  return recurGcd(b, a % b);\n}","language":"javascript"}
{"task_id":"MBJSP\/688","completion":"  var length = (a ** 2 + b ** 2) ** 0.5;\n  return length;\n}","language":"javascript"}
{"task_id":"MBJSP\/689","completion":"  \/\/ if (n >= 0) {\n  \/\/   return 1;\n  \/\/ } else {\n  \/\/   return -1;\n  \/\/ }\n\n  \/\/ O(n^2)\n  if (arr.length <= 1) return 0;\n  const dp = new Array(n + 1).fill(Infinity);\n  dp[0] = 0;\n  for (let i = 1; i <= n; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[i] >= arr[j] + i && dp[i] > dp[j] + 1) {\n        dp[i] = dp[j] + 1;\n      }\n    }\n  }\n  return dp[n];\n}","language":"javascript"}
{"task_id":"MBJSP\/690","completion":"  const newArr = [];\n\n  for (let i = 0; i < nums.length; i += 1) {\n    const firstElement = nums[i];\n    let counter = 1;\n\n    for (let j = i + 1; j < nums.length; j += 1) {\n      if (nums[j] === firstElement) {\n        counter += 1;\n      } else {\n        newArr.push(firstElement * counter);\n        counter = 1;\n      }\n    }\n    newArr.push(firstElement * counter);\n  }\n\n  return newArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/691","completion":"    const result = {};\n\n    for(let i = 0; i < testList.length; i++) {\n        const currentNum = testList[i][0];\n        const currentElem = testList[i][1];\n        if(result[currentElem]) {\n            result[currentElem].push(currentNum);\n        } else {\n            result[currentElem] = [currentNum];\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/692","completion":"    var arr = []\n    var r = n\n    var len = 0\n    while(r > 0) {\n        arr.push(r % 10)\n        r = parseInt(r\/10)\n        len++\n    }\n    var a = arr.reverse()\n    var b = a.pop()\n    var c = a.pop()\n    var d = b + c\n    if(d == 1) {\n        return len\n    }\n    return -1\n}","language":"javascript"}
{"task_id":"MBJSP\/693","completion":"  return text1.replace(\/\\s{2,}\/g, ' ')\n}","language":"javascript"}
{"task_id":"MBJSP\/694","completion":"    let uniqueArr = [];\n    for (let key in testDict) {\n        let keyVal = testDict[key];\n        keyVal.forEach(function (el) {\n            if (uniqueArr.indexOf(el) < 0) {\n                uniqueArr.push(el)\n            }\n        });\n    }\n    return uniqueArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/695","completion":"    for (let i = 0; i < testTup2.length; i++) {\n        if (testTup1[i] <= testTup2[i]) {\n            return false\n        }\n    }\n    return true\n}","language":"javascript"}
{"task_id":"MBJSP\/696","completion":"  \/\/ TODO: Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/697","completion":"  if (arrayNums === undefined) {\n    return undefined;\n  }\n  return arrayNums.reduce((count, element) => (element % 2 === 0 ? count + 1 : count), 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/698","completion":"  var finalDict = {};\n  var keys = Object.keys(testDict);\n  var tupleKey = keys[0];\n  var tupleValue = testDict[tupleKey];\n  for (var i = 1; i < keys.length; i++) {\n    var key = keys[i];\n    var value = testDict[key];\n    var tempTuple = [tupleValue, value];\n    finalDict[tupleKey + ' ' + key] = tempTuple;\n    tupleKey = key;\n    tupleValue = value;\n  }\n  return finalDict;\n}","language":"javascript"}
{"task_id":"MBJSP\/699","completion":"  const c1 = str1.split(\"\").reduce((acc, curr, idx) => {\n    acc[curr] = idx;\n    return acc;\n  }, {});\n  const c2 = str2.split(\"\").reduce((acc, curr, idx) => {\n    acc[curr] = idx;\n    return acc;\n  }, {});\n  if (Object.keys(c1).length !== Object.keys(c2).length) {\n    return \"Not Possible\";\n  }\n  let count = 0;\n  for (const k in c1) {\n    if (c1[k] !== c2[k]) {\n      count += 1;\n      [c2[k], c2[c1[k]]] = [c2[c1[k]], c2[k]];\n      [c1[k], c1[c2[k]]] = [c1[c2[k]], c1[k]];\n    }\n  }\n  return count","language":"javascript"}
{"task_id":"MBJSP\/700","completion":"  \/\/ TODO: solution goes here\n}","language":"javascript"}
{"task_id":"MBJSP\/701","completion":"  const sumLeft = arr.reduce((a, b) => a + b, 0);\n  const sumRight = arr.reduce((a, b) => a + b, 0);\n  const diff = Math.abs(sumLeft - sumRight);\n  let result = -1;\n\n  for (let i = 0; i < arr.length; i += 1) {\n    if (diff === Math.abs(arr[i] - (sumRight - sumLeft \/ arr.length))) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/702","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/703","completion":"    for (var i in d) {\n        if (d[i] == x) {\n            return true;\n        }\n    }\n    return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/704","completion":"    if (n < 1) {\n        throw new Error('invalid input');\n    }\n    if (n === 1) {\n        return 1;\n    }\n    return 1 \/ (n + 1) + harmonicSum(n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/705","completion":"  \/\/ Your code here.\n}","language":"javascript"}
{"task_id":"MBJSP\/706","completion":"    let i = 0;\n    let j = 0;\n\n    while(i < m && j < n) {\n        if (arr1[i] === arr2[j]) i++;\n        if (arr1[i] !== arr2[j]) j++;\n    }\n\n    return i === m ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/707","completion":"    return Math.floor(Math.log2(n)) + 1\n}","language":"javascript"}
{"task_id":"MBJSP\/708","completion":"    let result = [];\n    result = string.split(' ');\n    console.log(result);\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/709","completion":"  let result = {};\n  let finalResult = {};\n  let uniList = [];\n  let uni = 0;\n  let newArr = [];\n  let j = 0;\n  testList.map(item => {\n    let item1 = item.join();\n    if (Object.keys(result).length === 0) {\n      result[item1] = 1;\n    } else if (result[item1]) {\n      result[item1] = result[item1] + 1;\n    } else {\n      result[item1] = 1;\n    }\n  });\n  for (let i in result) {\n    uniList[j] = i + \" \" + result[i];\n    j = j + 1;\n  }\n  console.log(uniList);\n  for (let i = 0; i < uniList.length; i++) {\n    new","language":"javascript"}
{"task_id":"MBJSP\/710","completion":"  \/\/ return first and last item in testTup\n\n}","language":"javascript"}
{"task_id":"MBJSP\/711","completion":"  var len = n.toString().length;\n  var total = 1;\n  for (var i = 0; i < len; i++) {\n    var digit = Number(n.toString()[i]);\n    var multiplier = (i % 2 === 0) ? 1 : 2;\n    total *= digit * multiplier;\n  }\n  return n === total;\n}","language":"javascript"}
{"task_id":"MBJSP\/712","completion":"  let result = [];\n  let hash = [];\n  list1.forEach((item) => {\n    if (hash.includes(item)) {\n      return;\n    } else {\n      hash.push(item);\n    }\n    result.push(item);\n  });\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/713","completion":"    return !testTup.some((testVal, index) => {\n        return testTup[index + 1] !== true && testVal !== true;\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/714","completion":"  let count = 1;\n  for (let i = 2; i <= n \/ i; i++) {\n    if (n % i === 0) {\n      count++;\n      n \/= i;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/715","completion":"  var arr = testStr.split(',');\n  return arr.map(function(val) {\n    return parseInt(val);\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/716","completion":"  if (a === 1) return 2\n  return a * 4\n}","language":"javascript"}
{"task_id":"MBJSP\/717","completion":"    \/\/ TODO: Your code goes here.\n}","language":"javascript"}
{"task_id":"MBJSP\/718","completion":"    if (!Array.isArray(list1)) {\n        return null;\n    }\n\n    const list2 = [...list1];\n    let newList = [];\n\n    for (let i = 0; i < list1.length; i += 2) {\n        if (list1.length % 2 === 1 && i === list1.length - 1) {\n            newList.push(list1[i]);\n        } else if (i > 0) {\n            newList.push(list1[i]);\n        } else if (i === 0) {\n            newList.push(list1[i]);\n        }\n        newList.push(list1[i + 1]);\n    }\n\n    return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/719","completion":"  return `Found a match!`;\n}","language":"javascript"}
{"task_id":"MBJSP\/720","completion":"  return testTup.concat(testDict);\n}","language":"javascript"}
{"task_id":"MBJSP\/721","completion":"  let path = [];\n  let i = 0;\n  let sum = 0;\n  while (i < n) {\n    path.push(0);\n    i++;\n  }\n  sum = path.reduce((a, b) => a + b, 0);\n  let max = sum;\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      if (i != 0) {\n        path[j] = path[j] + cost[i - 1][j];\n      }\n      if (j != 0) {\n        path[j] = path[j] + cost[i][j - 1];\n      }\n      if (i != 0 && j != 0) {\n        path[j] = path[j] + cost[i - 1][j - 1];","language":"javascript"}
{"task_id":"MBJSP\/722","completion":"    let result = {}\n    for(let key in students){\n        if(students[key][0] <= h && students[key][1] <= w){\n            result[key] = students[key]\n        }\n    }\n    return result\n}","language":"javascript"}
{"task_id":"MBJSP\/723","completion":"  if (!nums1.length || !nums2.length) {\n    return 0;\n  }\n  let numsMap = new Map();\n  for (let i = 0; i < nums1.length; i++) {\n    if (numsMap.has(nums1[i])) {\n      numsMap.set(nums1[i], numsMap.get(nums1[i]) + 1);\n    } else {\n      numsMap.set(nums1[i], 1);\n    }\n  }\n  let result = 0;\n  for (let i = 0; i < nums2.length; i++) {\n    if (numsMap.has(nums2[i]) && numsMap.get(nums2[i]) > 1) {\n      result += 1;\n      numsMap.set(nums2[i], numsMap.get(nums2[i]) - 1);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/724","completion":"  if (base === 1) return 1\n  if (power === 1) return base\n\n  return base + powerBaseSum(base, power - 1)\n}","language":"javascript"}
{"task_id":"MBJSP\/725","completion":"  return text1.match(\/\"([^\"]+)\"\/g);\n}","language":"javascript"}
{"task_id":"MBJSP\/726","completion":"  \/\/ TODO: Your code here!\n}","language":"javascript"}
{"task_id":"MBJSP\/727","completion":"  const regex = \/[a-zA-Z0-9]\/;\n  return s.replace(regex, \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/728","completion":"    return lst1.map((x, idx) => lst2[idx] + x)\n}","language":"javascript"}
{"task_id":"MBJSP\/729","completion":"    const res = nums1.map((num, index) => num + nums2[index])\n    return res\n}","language":"javascript"}
{"task_id":"MBJSP\/730","completion":"  let currentNum = nums[0];\n  let result = [currentNum];\n\n  for (let i = 1; i < nums.length; i++) {\n    if (currentNum !== nums[i]) {\n      currentNum = nums[i];\n      result.push(currentNum);\n    }\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/731","completion":"  const pi = 3.14\n  const surface = 2 * pi * r * h\n  return surface\n}","language":"javascript"}
{"task_id":"MBJSP\/732","completion":"  \/\/ 1. replace all special characters\n  let replacedText = text.replace(\/[^\\w\\s]\/g, '');\n\n  \/\/ 2. replace space with : and comma with ;\n  replacedText = replacedText.replace(\/\\s\/g, ':').replace(\/\\,\/g, ';');\n\n  return replacedText;\n}","language":"javascript"}
{"task_id":"MBJSP\/733","completion":"    let left = 0, right = a.length - 1, mid;\n    while (left <= right) {\n        mid = Math.floor((left + right) \/ 2);\n        if (a[mid] < x) {\n            left = mid + 1;\n        }\n        else {\n            right = mid - 1;\n        }\n    }\n    return left;\n}","language":"javascript"}
{"task_id":"MBJSP\/734","completion":"  let sum = 0;\n  for (let i = 0; i < arr.length - n + 1; i++) {\n    sum += arr.slice(i, i + n).reduce((a, b) => a * b, 1);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/735","completion":"    let result = 0;\n    result = n & 0x0f;\n    return result + (n & 0x30) >> 4;\n}","language":"javascript"}
{"task_id":"MBJSP\/736","completion":"    let left = 0\n    let right = a.length\n\n    while (right - left > 1) {\n        const middle = Math.floor((left + right) \/ 2)\n        if (x < a[middle]) {\n            right = middle\n        } else {\n            left = middle\n        }\n    }\n\n    return left\n}","language":"javascript"}
{"task_id":"MBJSP\/737","completion":"  \/\/ Code here\n}","language":"javascript"}
{"task_id":"MBJSP\/738","completion":"  return (1 \/ (1 - (1 \/ n)));\n}","language":"javascript"}
{"task_id":"MBJSP\/739","completion":"    let arr = [];\n    let tri = [1];\n    let len = n;\n\n    while (len > 1) {\n        for (let i = 0; i < len; i++) {\n            tri.push(tri[i] + tri[i + 1]);\n        }\n        tri.shift();\n        tri.pop();\n        len--;\n    }\n\n    for (let i = 0; i < n; i++) {\n        arr.push(tri[i]);\n    }\n\n    let min = arr[0];\n    let minIndex = 0;\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n\n    return minIndex * (minIndex + 1) \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/740","completion":"  let dict = {};\n  for(let i = 0; i < testTup.length; i++) {\n    if(!dict.hasOwnProperty(testTup[i])) {\n      dict[testTup[i]] = testTup[i + 1];\n    }\n  }\n  return dict;\n}","language":"javascript"}
{"task_id":"MBJSP\/741","completion":"  if(s.length > 1) {\n    for(let i = 0; i < s.length; i++) {\n      if(s.charAt(i) !== s.charAt(0)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/742","completion":"  if (side === 0) return 0;\n  return (3 * Math.sqrt(3) \/ 2) * (Math.pow(side, 2));\n}","language":"javascript"}
{"task_id":"MBJSP\/743","completion":"  let new_list = [...list1];\n  let count = n - m;\n  for (let i = 0; i < count; i++) {\n    new_list.unshift(new_list.pop());\n  }\n  return new_list;\n}","language":"javascript"}
{"task_id":"MBJSP\/744","completion":"    return testTup.some(function (value) {\n        return value === null;\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/745","completion":"  const startArr = String(startnum).split('');\n  const endArr = String(endnum).split('');\n  const result = [];\n\n  for (let i = 0; i < startArr.length; i++) {\n    const start = parseInt(startArr[i]);\n    const end = parseInt(endArr[i]);\n    for (let j = start; j < end; j++) {\n      if (start % j === 0 && end % j === 0) {\n        result.push(j);\n      }\n    }\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/746","completion":"  if (isNaN(r) || isNaN(a)) return null;\n  let area = (2 * Math.PI * r * r) + (2 * Math.PI * r * a);\n  return area;\n}","language":"javascript"}
{"task_id":"MBJSP\/747","completion":"  if (n === 0 || m === 0) return 0;\n  if (x[m - 1] === y[n - 1] && y[n - 1] === z[o - 1]) return 1 + lcsOfThree(x, y, z, m - 1, n - 1, o - 1);\n  return Math.max(lcsOfThree(x, y, z, m - 1, n, o), lcsOfThree(x, y, z, m, n - 1, o), lcsOfThree(x, y, z, m, n, o - 1));\n}","language":"javascript"}
{"task_id":"MBJSP\/748","completion":"    return str1.replace(\/[A-Z]\/g, \" $&\");\n}","language":"javascript"}
{"task_id":"MBJSP\/749","completion":"  return numsStr.sort((a, b) => a - b);\n}","language":"javascript"}
{"task_id":"MBJSP\/750","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/751","completion":"  if (i >= arr.length) return true;\n  if (arr[i] <= arr[Math.floor((i + 1) \/ 2)]) return false;\n  let parent = Math.floor((i + 1) \/ 2);\n  return checkMinHeap(arr, parent) && checkMinHeap(arr, i + 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/752","completion":"  \/\/ TODO: return the nth jacobsthal number\n}","language":"javascript"}
{"task_id":"MBJSP\/753","completion":"  return testList.sort((a, b) => b[1] - a[1]).slice(0, k);\n}","language":"javascript"}
{"task_id":"MBJSP\/754","completion":"    let indices = [];\n    for (let i = 0; i < l1.length; i++) {\n        if (l2.indexOf(l1[i]) > -1 && l3.indexOf(l1[i]) > -1) {\n            indices.push(l1[i]);\n        }\n    }\n    return indices;\n}","language":"javascript"}
{"task_id":"MBJSP\/755","completion":"    \/\/ Write code here\n}","language":"javascript"}
{"task_id":"MBJSP\/756","completion":"  \/\/ TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/757","completion":"  \/\/ Write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/758","completion":"  if (list1.length === 0) {\n    return {};\n  }\n  let dict = {};\n  let sub = [];\n\n  list1.forEach((l) => {\n    if (l.length === 0) {\n      dict[sub.join(\",\")] = dict[sub.join(\",\")] ? dict[sub.join(\",\")] + 1 : 1;\n      sub = [];\n    } else {\n      sub = sub.concat(l);\n    }\n  });\n\n  return dict;\n}","language":"javascript"}
{"task_id":"MBJSP\/759","completion":"  return Number.parseFloat(num) === num;\n}","language":"javascript"}
{"task_id":"MBJSP\/760","completion":"    let result = [];\n    if (arr.length === 1) return \"YES\";\n\n    for (let i = 0; i < n; i++) {\n        let result = arr.filter((num, idx, arr) => idx === arr.indexOf(num));\n        if (result.length === 1) return \"YES\";\n    }\n\n    return \"NO\";\n}","language":"javascript"}
{"task_id":"MBJSP\/761","completion":"  const pi = Math.PI;\n  const angleInRad = a * (pi \/ 180);\n  const distanceInRad = d \/ 2;\n  return (distanceInRad * Math.abs(Math.cos(angleInRad)))\n}","language":"javascript"}
{"task_id":"MBJSP\/762","completion":"    if (monthnum3 % 100 === 0 && monthnum3 % 400 === 0) {\n        return true;\n    }\n    else if (monthnum3 % 100 !== 0 && monthnum3 % 4 === 0) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/763","completion":"  arr = arr.sort(function(a, b) {\n    return a - b;\n  });\n\n  var minimumDiff = Number.POSITIVE_INFINITY;\n  var minIndex = Number.POSITIVE_INFINITY;\n  for (let i = 0; i < arr.length - 1; i++) {\n    let diff = arr[i + 1] - arr[i];\n    if (diff < minimumDiff) {\n      minimumDiff = diff;\n      minIndex = i;\n    }\n  }\n  return arr[minIndex];\n}","language":"javascript"}
{"task_id":"MBJSP\/764","completion":"  \/\/ Solution code here...\n}","language":"javascript"}
{"task_id":"MBJSP\/765","completion":"    return n === 11 || n === 13 || n === 7 || n === 5;\n}","language":"javascript"}
{"task_id":"MBJSP\/766","completion":"    let pairs = [];\n    for (let i = 0; i < l1.length - 1; i++) {\n        pairs.push([l1[i], l1[i + 1]]);\n    }\n    return pairs;\n}","language":"javascript"}
{"task_id":"MBJSP\/767","completion":"  let count = 0\n  for (let i = 0; i < arr.length; i++) {\n    let current = arr[i]\n    for (let j = i + 1; j < arr.length; j++) {\n      let next = arr[j]\n      if (current + next === sum) {\n        count++\n      }\n    }\n  }\n  return count\n}","language":"javascript"}
{"task_id":"MBJSP\/768","completion":"  return !(x & 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/769","completion":"  var diff = [],\n    i = 0,\n    j = 0;\n\n  while (i < li1.length && j < li2.length) {\n    if (li1[i] === li2[j]) {\n      diff.push(li1[i]);\n      i++;\n      j++;\n    } else if (li1[i] < li2[j]) {\n      diff.push(li1[i++]);\n    } else {\n      diff.push(li2[j++]);\n    }\n  }\n\n  if (i < li1.length) {\n    while (i < li1.length) {\n      diff.push(li1[i++]);\n    }\n  } else {\n    while (j < li2.length) {\n      diff.push(li2[j++]);\n    }\n  }\n\n  return diff;\n}","language":"javascript"}
{"task_id":"MBJSP\/770","completion":"    let sum = 0;\n\n    for (let i = 1; i <= n; i += 2) {\n        sum += Math.pow(i, 4);\n    }\n\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/771","completion":"    var arr = exp.split(\"\");\n    var opening = 0, closing = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === '{') opening += 1;\n        else if (arr[i] === '}') closing += 1;\n        else if (arr[i] === ']') closing += 1;\n\n        if (opening > closing) return false;\n\n        if (opening < closing) return false;\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/772","completion":"  let splitStr = testStr.split(' ');\n  for (let i = 0; i < splitStr.length; i++) {\n    if (splitStr[i].length === k) {\n      splitStr.splice(i, 1);\n      i--;\n    }\n  }\n  return splitStr.join(' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/773","completion":"  let result = [];\n  let patternIndex = 0;\n  let textIndex = 0;\n  while (patternIndex < pattern.length && textIndex < text.length) {\n    if (text[textIndex] === pattern[patternIndex]) {\n      patternIndex++;\n    }\n    textIndex++;\n  }\n  if (patternIndex === pattern.length) {\n    result.push(patternIndex);\n    result.push(textIndex - patternIndex);\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/774","completion":"    let regex = \/^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$\/;\n    return regex.test(email) ? \"Valid Email\" : \"Invalid Email\";\n}","language":"javascript"}
{"task_id":"MBJSP\/775","completion":"  for(let i = 0; i < nums.length; i++) {\n    if(i % 2 === 1 && nums[i] % 2 === 1) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/776","completion":"  let count = 0;\n  for (let i = 0; i < testStr.length; i++) {\n    if ('aeiou'.includes(testStr[i])) {\n      if (i + 1 < testStr.length) {\n        if ('aeiou'.includes(testStr[i + 1])) count++;\n      }\n      if (i - 1 >= 0) {\n        if ('aeiou'.includes(testStr[i - 1])) count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/777","completion":"    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        let x = arr[i];\n        if (arr.indexOf(x) === arr.lastIndexOf(x)) {\n            continue;\n        } else {\n            sum += x;\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/778","completion":"    \/\/TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/779","completion":"  const sublists = new Map();\n  for (let i = 0; i < list1.length; i++) {\n    let sublist = list1[i];\n    let count = 1;\n    for (let j = i + 1; j < list1.length; j++) {\n      if (sublist[0] === list1[j][0] && sublist[1] === list1[j][1]) {\n        count++;\n      } else {\n        sublists.set(`(${sublist[0]}, ${sublist[1]})`, count);\n        break;\n      }\n    }\n  }\n  return sublists;\n}","language":"javascript"}
{"task_id":"MBJSP\/780","completion":"    if (testList.length < 1) {\n        return [];\n    }\n    const output = [];\n    const subLists = [];\n    const subLists2 = [];\n    subLists.push(testList[0]);\n    for (let i = 1; i < testList.length; i++) {\n        subLists2.push(testList[i]);\n    }\n    testList.forEach(element => {\n        const arr1 = [];\n        const arr2 = [];\n        arr1.push(element);\n        arr2.push(subLists[subLists.length - 1]);\n        subLists.pop();\n        subLists.forEach(element1 => {\n            const arr3 = [];\n            arr3.push(element1);\n            arr3.push(subLists2[subLists2.length - 1]);\n            subLists2.pop();\n            subLists2.forEach(element2 => {\n                const arr4 = [];\n                arr","language":"javascript"}
{"task_id":"MBJSP\/781","completion":"  const divisorCount = [0, 0, 0, 0];\n  for (let i = 1; i <= n; i += 1) {\n    let divisorCountForI = 0;\n    for (let j = 1; j <= n; j += 1) {\n      if (n % j === 0) {\n        divisorCountForI += 1;\n      }\n    }\n    divisorCount[divisorCountForI] += 1;\n  }\n  const [even, odd, prime, composite] = [\n    divisorCount[0] === 0,\n    divisorCount[1] === 0,\n    divisorCount[2] === 0,\n    divisorCount[3] === 0\n  ];\n  if (even) {\n    console.log(\"Even\");\n  } else if (odd) {\n    console.log(\"Odd\");\n  } else if (prime) {\n    console","language":"javascript"}
{"task_id":"MBJSP\/782","completion":"    var result = 0;\n\n    for (let i = 0; i < arr.length; i += 2) {\n        result += arr[i];\n    }\n\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/783","completion":"  return [\n    0.0, 0.0, 0.0, \/\/ red\n    0.0, 0.0, 0.0, \/\/ green\n    0.0, 0.0, 0.0, \/\/ blue\n  ];\n}","language":"javascript"}
{"task_id":"MBJSP\/784","completion":"    let firstEven = 0;\n    let lastEven = list1.length - 1;\n    for (let i = 0; i <= list1.length - 1; i++) {\n        if (i % 2 === 0) {\n            firstEven = i;\n        }\n        lastEven = i;\n    }\n    let firstOdd = firstEven + 1;\n    let lastOdd = lastEven - 1;\n    if (firstOdd % 2 !== 0 || lastOdd % 2 !== 0) {\n        return 'invalid data';\n    }\n    let product = 1;\n    for (let i = firstOdd; i <= lastOdd; i++) {\n        product *= list1[i];\n    }\n    return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/785","completion":"  return testStr.replace(\/\\(\\d+, \\d+, \\d+\\)\/g, (v) => {\n    return v.match(\/\\d+\/g).map((num) => parseInt(num));\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/786","completion":"  let left = 0;\n  let right = a.length - 1;\n  while (left < right) {\n    const mid = Math.floor((left + right) \/ 2);\n    if (x > a[mid]) {\n      left = mid + 1;\n    } else {\n      right = mid;\n    }\n  }\n  return left;\n}","language":"javascript"}
{"task_id":"MBJSP\/787","completion":"    if (text[text.length - 3] === 'b' && text[text.length - 2] === 'a' && text[text.length - 1] === 'c') {\n        return 'Found a match!';\n    }\n    return 'Not matched!';\n}","language":"javascript"}
{"task_id":"MBJSP\/788","completion":"  var result = [];\n  for(var i = 0; i < testList.length; i++){\n    result.push(testList[i]);\n  }\n  result.push(testStr);\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/789","completion":"  const area = (s * l) \/ 2\n  return area * Math.PI\n}","language":"javascript"}
{"task_id":"MBJSP\/790","completion":"  const evens = [];\n  for (let i = 0; i < nums.length; i += 2) {\n    evens.push(nums[i]);\n  }\n  return evens.every((num) => num % 2 === 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/791","completion":"  let nested = false;\n  let nestedIdx = testTup.length - 1;\n\n  while (!nested && nestedIdx >= 0) {\n    if (Array.isArray(testTup[nestedIdx])) {\n      nested = true;\n    } else {\n      nestedIdx--;\n    }\n  }\n\n  if (nested) {\n    testTup.splice(nestedIdx, 1);\n  }\n\n  return testTup;\n}","language":"javascript"}
{"task_id":"MBJSP\/792","completion":"  return inputList.filter(function(list) {\n    return Array.isArray(list);\n  }).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/793","completion":"    let low = 0;\n    let high = arr.length - 1;\n\n    while (low <= high) {\n        let mid = Math.floor((low + high) \/ 2);\n\n        if (arr[mid] === x) {\n            if (mid === n) {\n                return mid;\n            } else if (mid > n) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        } else if (arr[mid] < x) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n    return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/794","completion":"  return text.match(\/a(.*)b\/g) ? \"Found a match!\" : \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/795","completion":"  \/\/code goes here\n}","language":"javascript"}
{"task_id":"MBJSP\/796","completion":"  return Object.values(dict).reduce((total, cur) => total + cur);\n}","language":"javascript"}
{"task_id":"MBJSP\/797","completion":"    let sum = 0;\n    for (let i = l; i <= r; i += 2) {\n        sum += i;\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/798","completion":"  let sum = 0;\n  arr.forEach((el) => {\n    sum += el;\n  });\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/799","completion":"    return (n << d) | (n >>> (32 - d));\n}","language":"javascript"}
{"task_id":"MBJSP\/800","completion":"    return text.replace(\/\\s+\/g, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/801","completion":"    let num = 0;\n    if (x === y && y === z) num++;\n    if (x !== y && y !== z) num++;\n    console.log(num);\n}","language":"javascript"}
{"task_id":"MBJSP\/802","completion":"    let counter = 0;\n    while(n > 0) {\n        arr.unshift(arr.pop());\n        counter++;\n        n--;\n    }\n    return counter;\n}","language":"javascript"}
{"task_id":"MBJSP\/803","completion":"  var start = 0, end = n, mid, sqrt;\n\n  while(start <= end) {\n    mid = Math.floor((start + end) \/ 2);\n    sqrt = Math.sqrt(mid);\n\n    if(mid * mid === n) {\n      return true;\n    }\n\n    else if (mid * mid > n) {\n      end = mid - 1;\n    }\n\n    else {\n      start = mid + 1;\n    }\n  }\n\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/804","completion":"    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n    }\n    return product % n === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/805","completion":"  let sum = 0;\n  let maxSumList = [];\n  let maxSum = 0;\n  for (let i = 0; i < lists.length; i++) {\n    let sumList = lists[i].reduce((a, b) => a + b, 0);\n    if (sumList > maxSum) {\n      maxSum = sumList;\n      maxSumList = lists[i];\n    }\n    sum = sum + sumList;\n  }\n  return maxSumList;\n}","language":"javascript"}
{"task_id":"MBJSP\/806","completion":"  if (typeof testStr !== \"string\") {\n    throw new Error(\"Invalid argument, please provide a string as argument.\");\n  }\n  let length = 0;\n  let currentMax = 0;\n  for (let i = 0; i < testStr.length; i++) {\n    if (testStr[i] === testStr[i].toUpperCase()) {\n      length++;\n    } else {\n      if (length > currentMax) {\n        currentMax = length;\n      }\n      length = 0;\n    }\n  }\n  return currentMax;\n}","language":"javascript"}
{"task_id":"MBJSP\/807","completion":"  if (nums.length < 1) {\n    return null;\n  }\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] % 2 === 1) {\n      return nums[i];\n    }\n  }\n  return null;\n}","language":"javascript"}
{"task_id":"MBJSP\/808","completion":"  return !(testTup.includes(k) || k === testTup[testTup.length - 1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/809","completion":"    for (let i = 0; i < testTup2.length; i++) {\n        if (testTup2[i] < testTup1[i]) {\n            return true;\n        }\n    }\n    return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/810","completion":"    \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/811","completion":"    for (let i = 0; i < testList1.length; i++) {\n        for (let j = 0; j < testList1[i].length; j++) {\n            if (testList1[i][j] !== testList2[i][j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/812","completion":"    let result = street.replace(\"road\", \"rd.\");\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/813","completion":"  if (typeof str1 !== \"string\") throw new Error(\"It should be string.\");\n\n  return str1.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/814","completion":"  let result = p * q;\n  let total = 0;\n  let counter = 0;\n  let base = p;\n\n  while (base <= q) {\n    total = total + result;\n    base++;\n  }\n\n  return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/815","completion":"  let max = 0;\n  let i = 0;\n  let j = 0;\n  let temp;\n  while (max < n) {\n    if (arr[i] > arr[i + 1]) {\n      temp = arr[i];\n      arr[i] = arr[i + 1];\n      arr[i + 1] = temp;\n      max++;\n    }\n    if (arr[j] > arr[j + 1]) {\n      temp = arr[j];\n      arr[j] = arr[j + 1];\n      arr[j + 1] = temp;\n      max++;\n    }\n    if (i + 2 < arr.length) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/816","completion":"  const result = []\n  for (let i = 0; i < testTup.length; i++) {\n    if (testTup[i] !== 0) {\n      result.push(testTup[i])\n    }\n  }\n  return result\n}","language":"javascript"}
{"task_id":"MBJSP\/817","completion":"  return nums.filter(num => (num % m === 0 || num % n === 0))\n}","language":"javascript"}
{"task_id":"MBJSP\/818","completion":"    return str.split('').reduce((a,b) => a + b.toLowerCase().charCodeAt(0) - 96, 0)\n}","language":"javascript"}
{"task_id":"MBJSP\/819","completion":"  \/\/ Write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/820","completion":"    if (monthnum1 == 2) {\n        return (monthnum1 % 28 == 0)\n    } else {\n        return (monthnum1 % 28 != 0)\n    }\n\n}","language":"javascript"}
{"task_id":"MBJSP\/821","completion":"  const mergedDictionary = {};\n  const mergedDictionaryValues = Object.values(dict1).concat(Object.values(dict2));\n  const mergedDictionaryKeys = Object.keys(dict1).concat(Object.keys(dict2));\n  \n  mergedDictionaryValues.forEach((element, index) => {\n    const key = mergedDictionaryKeys[index];\n    mergedDictionary[key] = element;\n  })\n  return mergedDictionary;\n}","language":"javascript"}
{"task_id":"MBJSP\/822","completion":"  return \/^(?=.*[a-zA-Z])(?=.*\\d)[a-zA-Z\\d]{5,}$\/.test(p)\n}","language":"javascript"}
{"task_id":"MBJSP\/823","completion":"  const regex = new RegExp(sample, 'i');\n  const result = regex.test(string);\n  if (result === true) {\n    return 'string starts with the given substring';\n  } else {\n    return 'string doesnt start with the given substring';\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/824","completion":"    const n = [];\n\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] % 2 === 0) {\n            n.push(l[i]);\n        }\n    }\n    return n;\n}","language":"javascript"}
{"task_id":"MBJSP\/825","completion":"  let newNums = [];\n  for (let i = 0; i < listIndex.length; i++) {\n    let index = listIndex[i];\n    newNums.push(nums[index]);\n  }\n  return newNums;\n}","language":"javascript"}
{"task_id":"MBJSP\/826","completion":"    if ((a + b > c) && (a + c > b) && (b + c > a)) {\n        if ((a === b) && (a === c)) {\n            return \"Equilateral Triangle\";\n        } else if ((a === b) || (b === c) || (a === c)) {\n            return \"Isosceles Triangle\";\n        } else {\n            return \"Scalene Triangle\";\n        }\n    } else {\n        return \"invalid triangle\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/827","completion":"  \/\/ Write your solution here\n}","language":"javascript"}
{"task_id":"MBJSP\/828","completion":"  let alphaCount = 0;\n  let digitCount = 0;\n  let specialCount = 0;\n  for (let i = 0; i < string.length; i++) {\n    let ch = string[i];\n    if (ch.match(\/[A-Z]\/g)) {\n      alphaCount++;\n    } else if (ch.match(\/\\d\/g)) {\n      digitCount++;\n    } else if (ch.match(\/[^\\w\\s]\/g)) {\n      specialCount++;\n    }\n  }\n  return [alphaCount, digitCount, specialCount];\n}","language":"javascript"}
{"task_id":"MBJSP\/829","completion":"  const counts = {}\n  input.forEach((item) => {\n    counts[item] = counts[item] + 1 || 1\n  })\n  let max = 0\n  let result\n  for (const key in counts) {\n    if (counts[key] > max) {\n      max = counts[key]\n      result = key\n    }\n  }\n  return result\n}","language":"javascript"}
{"task_id":"MBJSP\/830","completion":"    \/\/ TODO: your code\n    return a.toFixed(digits)\n}","language":"javascript"}
{"task_id":"MBJSP\/831","completion":"  let count = 0;\n  arr.forEach(element => {\n    if (arr.includes(element + n)) count++;\n    if (arr.includes(element - n)) count++;\n  });\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/832","completion":"  return input.match(\/\\d+\/g).sort((a, b) => b - a)[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/833","completion":"  let keys = Object.keys(dict);\n  return keys;\n}","language":"javascript"}
{"task_id":"MBJSP\/834","completion":"  let matrix = [];\n  for (let i = 0; i < n; i++) {\n    matrix.push([]);\n  }\n  let rowStart = 0;\n  let rowEnd = n - 1;\n  let colStart = 0;\n  let colEnd = n - 1;\n\n  let count = 1;\n  while (rowStart <= rowEnd && colStart <= colEnd) {\n    \/\/ Top row\n    for (let i = colStart; i <= colEnd; i++) {\n      matrix[rowStart][i] = count++;\n    }\n    rowStart++;\n\n    \/\/ Right column\n    for (let i = rowStart; i <= rowEnd; i++) {\n      matrix[i][colEnd] = count++;\n    }\n    colEnd--;\n\n    \/\/ Bottom row\n    for (let i = colEnd; i >= colStart; i--) {\n      matrix[rowEnd][i] = count++;","language":"javascript"}
{"task_id":"MBJSP\/835","completion":"  return (y1 - y2) \/ (x1 - x2);\n}","language":"javascript"}
{"task_id":"MBJSP\/836","completion":"  if (size > a.length) {\n    return null;\n  }\n  if (size === a.length) {\n    return a[a.length - 1];\n  }\n  const subArrSum = [];\n  let sum = 0;\n  for (let i = 0; i < size; i += 1) {\n    sum += a[i];\n    subArrSum[i] = sum;\n  }\n  sum = 0;\n  for (let j = size; j < a.length; j += 1) {\n    sum += a[j];\n    subArrSum[j] = Math.max(sum, subArrSum[j - size] + a[j]);\n  }\n  return Math.max(...subArrSum);\n}","language":"javascript"}
{"task_id":"MBJSP\/837","completion":"  \/\/code here\n}","language":"javascript"}
{"task_id":"MBJSP\/838","completion":"  \/\/ convert strings to numbers\n  const s1Num = s1.split(\"\").map(char => char.charCodeAt(0))\n  const s2Num = s2.split(\"\").map(char => char.charCodeAt(0))\n\n  \/\/ define two indices, one for each character in string\n  const s1Index = []\n  const s2Index = []\n  for (let i = 0; i < s1Num.length; i++) {\n    s1Index[s1Num[i]] = i\n    s2Index[s2Num[i]] = i\n  }\n  let s1Swaps = 0\n  let s2Swaps = 0\n  let i = 0\n  let j = 0\n  while (i < s1Num.length && j < s2Num.length) {\n    if (s1Num[i] < s2Num[j]) {\n      \/\/ s1Num[i] < s2Num[j]\n      const temp ","language":"javascript"}
{"task_id":"MBJSP\/839","completion":"  return tup.sort((a, b) => a[0].localeCompare(b[0]));\n}","language":"javascript"}
{"task_id":"MBJSP\/840","completion":"    let discriminant = b**2 - 4 * a * c;\n    let s1 = (-b + Math.sqrt(discriminant)) \/ (2 * a);\n    let s2 = (-b - Math.sqrt(discriminant)) \/ (2 * a);\n    return (s1 == s2 ? \"Yes\" : \"No\");\n}","language":"javascript"}
{"task_id":"MBJSP\/841","completion":"  \/\/ Code here\n}","language":"javascript"}
{"task_id":"MBJSP\/842","completion":"    var result = arr.reduce(function (prev, current, index, arr) {\n        if (current % 2 === 1) {\n            prev.push(current);\n            if (prev.length === arrSize) {\n                return prev.sort();\n            }\n        }\n        return prev;\n    }, []);\n\n    return result[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/843","completion":"  if (primes.length <= 1) {\n    return 1;\n  }\n  const pq = new PriorityQueue();\n  const num = [];\n  pq.enqueue(1);\n  num.push(1);\n\n  while (n > 1) {\n    const x = pq.dequeue();\n    for (let i = 0; i < primes.length; i++) {\n      const val = x * primes[i];\n      if (val > n) break;\n      pq.enqueue(val);\n      num.push(val);\n    }\n    n -= x;\n  }\n\n  return num.pop();\n}","language":"javascript"}
{"task_id":"MBJSP\/844","completion":"    return n * k - k - 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/845","completion":"  return String(n).split(\"\").reduce(function(acc, val) {\n    return acc + parseInt(val);\n  }, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/846","completion":"    let minPlatform = Math.max(...arr);\n    let count = 0;\n    let j = 0;\n    for(let i = 0; i < dep.length; i++) {\n        while(dep[i] < minPlatform) {\n            j++;\n            minPlatform -= j;\n        }\n        count = Math.max(count, j);\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/847","completion":"    \/\/ TODO: Copy a list from a singleton tuple.\n    return xs;\n}","language":"javascript"}
{"task_id":"MBJSP\/848","completion":"  return (base1 + base2) * height \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/849","completion":"    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (i != n) {\n                sum += i;\n            } else {\n                sum += i - 1;\n            }\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/850","completion":"  const sum = a + b + c;\n\n  if (Math.sqrt(a * a + b * b + c * c) <= sum \/ 2) {\n    return true;\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/851","completion":"  var sum = sum || 0,\n    factor = 1,\n    i = 1;\n  for (; i < n; i += 1) {\n    if (n % i === 0) {\n      factor *= 1 \/ i;\n      sum += factor;\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/852","completion":"    return numList.filter(num => num >= 0)\n}","language":"javascript"}
{"task_id":"MBJSP\/853","completion":"  if (n === 0) return 0\n  let sum = 0\n  const n1 = Math.sqrt(n)\n  for (let i = 1; i <= n1; i += 2) {\n    if (n % i === 0) {\n      sum += i + n \/ i\n    }\n  }\n  return sum\n}","language":"javascript"}
{"task_id":"MBJSP\/854","completion":"  let heap = []\n\n  let i = 0\n\n  for (let _ of rawheap) {\n    heap.push(i)\n    siftUp(i++)\n  }\n\n  return heap\n\n  function siftUp(index) {\n    const parentIndex = Math.floor((index - 1) \/ 2)\n    if (index <= 1) return\n    if (rawheap[heap[index]] < rawheap[heap[parentIndex]]) {\n      swap(heap, parentIndex, index)\n      siftUp(parentIndex)\n    }\n  }\n\n  function siftDown(index) {\n    let childIndex = 2 * index + 1\n    const length = heap.length\n    let lastChildIndex = length - 1\n    if (childIndex <= lastChildIndex &&\n      rawheap[heap[index]] < rawheap[heap[childIndex]]) {\n      childIndex++\n    }\n    if (childIndex ","language":"javascript"}
{"task_id":"MBJSP\/855","completion":"    var result = (x & 1) == 0 ? true : false;\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/856","completion":"  const swaps = [];\n  let totalSwaps = 0;\n\n  for (let i = 0; i < n; i += 1) {\n    const swapsCount = countSwaps(arr, i);\n\n    if (swapsCount > 0) {\n      totalSwaps += swapsCount;\n      swaps.push({ position: i, count: swapsCount });\n    }\n  }\n\n  return Math.min(...swaps.map(s => s.count));\n}","language":"javascript"}
{"task_id":"MBJSP\/857","completion":"  return list1.map(item => {\n    const string = item.split(\" \");\n    return string.map(word => {\n      return word + \" \";\n    });\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/858","completion":"    let counter = 0;\n    for (let i = 0; i < inputList.length; i++) {\n        if (inputList[i].length > 0) {\n            counter += inputList[i].length;\n        }\n    }\n\n    let squaredCounter = counter ** 2;\n    return squaredCounter;\n}","language":"javascript"}
{"task_id":"MBJSP\/859","completion":"    var subArr = [];\n    subArr.push([]);\n    for (var i = 0; i < myList.length; i++) {\n        var last = subArr.length - 1;\n        for (var j = last; j >= 0; j--) {\n            subArr.push(subArr[j].concat(myList[i]));\n        }\n    }\n    return subArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/860","completion":"  \/\/  return string.match(\/^[a-zA-Z0-9]*$\/g)\n  return string.match(\/[^a-zA-Z0-9]*$\/g)\n}","language":"javascript"}
{"task_id":"MBJSP\/861","completion":"    return texts.filter(function (text) {\n        var anagram = true;\n\n        var charFreq = {};\n        for (var i = 0; i < text.length; i++) {\n            if (!charFreq[text[i]]) {\n                charFreq[text[i]] = 0;\n            }\n            charFreq[text[i]]++;\n        }\n\n        for (var j = 0; j < str.length; j++) {\n            if (charFreq[str[j]] && charFreq[str[j]] > 0) {\n                charFreq[str[j]]--;\n            } else {\n                anagram = false;\n                break;\n            }\n        }\n\n        return anagram;\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/862","completion":"  const freq = {};\n\n  for (let word of text.toLowerCase().split(' ')) {\n    if (freq[word]) {\n      freq[word]++;\n    } else {\n      freq[word] = 1;\n    }\n  }\n\n  const sorted = [];\n\n  for (let key in freq) {\n    sorted.push([key, freq[key]]);\n  }\n\n  sorted.sort((a, b) => b[1] - a[1]);\n\n  return sorted.splice(0, n);\n}","language":"javascript"}
{"task_id":"MBJSP\/863","completion":"    let maxLength = 0;\n\n    for (let i = 0; i < arr.length - 1; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            let sum = arr[i] + arr[j];\n            if (sum === n) {\n                maxLength = Math.max(maxLength, j - i + 1);\n            } else if (sum > n) {\n                break;\n            }\n        }\n    }\n\n    return maxLength;\n}","language":"javascript"}
{"task_id":"MBJSP\/864","completion":"  return texts.map(text => {\n    return text\n      .toLowerCase()\n      .split('')\n      .reverse()\n      .join('');\n  })\n    .filter(text => {\n      return text === text.split('').reverse().join('');\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/865","completion":"  return nums.map((item, idx) => item * n + idx);\n}","language":"javascript"}
{"task_id":"MBJSP\/866","completion":"    let daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    return (daysInMonth.indexOf(monthname2) >= 0) ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/867","completion":"    var min = Math.min.apply(Math, arr);\n    var sum = 0;\n    var i;\n    for (i = 0; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n    }\n    console.log(min);\n    while (n % min !== 0) {\n        sum += min;\n        min += 1;\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/868","completion":"  var s = a.split(\" \");\n  return s[s.length - 1].length;\n}","language":"javascript"}
{"task_id":"MBJSP\/869","completion":"  const newList = list1.filter(list => list.length > leftrange && list.length < rigthrange);\n  return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/870","completion":"    var sum = 0;\n    nums.forEach(function(num) {\n        if (num > 0) {\n            sum += num;\n        }\n    });\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/871","completion":"    if (string1.length !== string2.length) {\n        return false;\n    }\n    var rotation = string1 + string1;\n    return rotation.includes(string2);\n}","language":"javascript"}
{"task_id":"MBJSP\/872","completion":"  \/\/ TODO: write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/873","completion":"  if (n === 0) {\n    return 0;\n  } else if (n === 1) {\n    return 1;\n  } else {\n    return fibonacci(n - 1) + fibonacci(n - 2);\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/874","completion":"  return str1 + str2 === str2 + str1\n}","language":"javascript"}
{"task_id":"MBJSP\/875","completion":"  const map = {};\n\n  for (let i = 0; i < testList.length; i++) {\n    const a = testList[i][0];\n    const b = testList[i][1];\n\n    if (map[a]) {\n      map[a].push(b);\n    } else {\n      map[a] = [b];\n    }\n  }\n\n  const sorted = Object.entries(map)\n    .sort((a, b) => {\n      if (a[0] === b[0]) {\n        return a[1].length - b[1].length;\n      }\n      return a[0] - b[0];\n    })\n    .reduce((acc, curr) => {\n      acc.push(curr[0]);\n      acc.push(curr[1].sort());\n      return acc;\n    }, []);\n\n  return Math.min(...sorted.reduce((acc, curr) => {\n    return acc.","language":"javascript"}
{"task_id":"MBJSP\/876","completion":"    let z = x * y \/ gcd(x, y);\n    return z;\n}","language":"javascript"}
{"task_id":"MBJSP\/877","completion":"    let chars = {}\n    let output = \"\"\n    for (let i = 0; i < str.length; i++) {\n        let char = str[i]\n        if (chars[char] === undefined) {\n            chars[char] = 1\n        } else {\n            chars[char]++\n        }\n    }\n    for (let char in chars) {\n        for (let i = 0; i < chars[char]; i++) {\n            output += char\n        }\n    }\n    return output\n}","language":"javascript"}
{"task_id":"MBJSP\/878","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/879","completion":"  \/\/ TODO: write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/880","completion":"    let count = 0;\n    const d = Math.sqrt(b*b - 4*a*c);\n    if (d > 0) {\n        count = 2;\n        let x1 = (-b + d) \/ (2*a);\n        let x2 = (-b - d) \/ (2*a);\n        if (x1 < 0 && x2 < 0) {\n            count = 1;\n        } else if (x1 < 0) {\n            count = 2;\n        } else if (x2 < 0) {\n            count = 1;\n        }\n    }\n    return count + ' solutions';\n}","language":"javascript"}
{"task_id":"MBJSP\/881","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/882","completion":"    return 2 * (b + h);\n}","language":"javascript"}
{"task_id":"MBJSP\/883","completion":"  return nums.filter(num => num % m === 0 && num % n === 0)\n}","language":"javascript"}
{"task_id":"MBJSP\/884","completion":"  const lbit = (n >> l) & 1;\n  const rbit = (n >> r) & 1;\n  return lbit === rbit;\n}","language":"javascript"}
{"task_id":"MBJSP\/885","completion":"  const obj = {};\n\n  for (let i = 0; i < str1.length; i += 1) {\n    const key = str1[i];\n    const value = str2[i];\n\n    if (obj[key] !== undefined && obj[key] !== value) {\n      return false;\n    }\n\n    obj[key] = value;\n  }\n\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/886","completion":"  const numberLength = numbers.length;\n  let sum = 0;\n  for (let i = 0; i < numberLength; i++) {\n    sum += numbers[i];\n  }\n  const result = sum \/ numberLength;\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/887","completion":"  return n & 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/888","completion":"    let arr = [];\n    testTup1.forEach((val, index) => {\n        arr.push(val - testTup2[index]);\n    })\n    return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/889","completion":"    return lists.map(reverseList);\n}","language":"javascript"}
{"task_id":"MBJSP\/890","completion":"  \/\/ 1. find the first position from arr2 that is equal or greater than n\n  \/\/ 2. then find the first position from arr1 that is equal or greater than n\n  \/\/ 3. then compare and return the value (which is not present in both arrays)\n  let position1 = arr1.findIndex(el => el >= n);\n  let position2 = arr2.findIndex(el => el >= n);\n  if (position1 < 0 && position2 < 0) {\n    return -1;\n  } else if (position1 < 0) {\n    return position2;\n  } else if (position2 < 0) {\n    return position1;\n  } else {\n    return position1 - position2;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/891","completion":"    if (a.toString().length == b.toString().length) {\n        return true\n    }\n    else {\n        return false\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/892","completion":"    let spaceText = '';\n    let i = 0;\n    for (const char of text) {\n        if (char !== ' ' || spaceText === '') {\n            spaceText += char;\n        } else {\n            spaceText = '';\n            i += 1;\n        }\n        if (i === text.length) {\n            spaceText = '';\n        }\n    }\n    return spaceText;\n}","language":"javascript"}
{"task_id":"MBJSP\/893","completion":"    let result = [];\n    for (let i = 0; i < lst.length; i++) {\n        result.push(lst[i].pop());\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/894","completion":"    if (!testStr) {\n        return undefined;\n    }\n\n    return testStr.split(\",\").map(function (x) {\n        return parseFloat(x);\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/895","completion":"    var currentMax = 0,\n        max = 0;\n\n    for (var i = 0; i < a.length; i++) {\n        currentMax = currentMax + a[i];\n        if (max < currentMax) {\n            max = currentMax;\n        }\n        if (currentMax < 0) {\n            currentMax = 0;\n        }\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/896","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/897","completion":"    let regex = new RegExp(\"\\\\b\" + word + \"\\\\b\");\n    return regex.test(sentence);\n}","language":"javascript"}
{"task_id":"MBJSP\/898","completion":"  let result = [];\n  for (let i = 0; i < numbers.length - n + 1; i++) {\n    result.push(numbers[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/899","completion":"    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i + 1]) return false;\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/900","completion":"    if(string[0] === \"5\") {\n      return true;\n    } else {\n      return false;\n    }\n  }","language":"javascript"}
{"task_id":"MBJSP\/901","completion":"  \/\/ TODO\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/902","completion":"  const dict = Object.assign(d1, d2)\n  return dict\n}","language":"javascript"}
{"task_id":"MBJSP\/903","completion":"    return Math.floor(Math.log2(n))\n}","language":"javascript"}
{"task_id":"MBJSP\/904","completion":"  return (x % 2) === 0\n}","language":"javascript"}
{"task_id":"MBJSP\/905","completion":"    let result = 0;\n    for (let i = 0; i <= n; i++) {\n        result += Math.pow(i, 2);\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/906","completion":"  const pattern = \/\\\/([0-9]{4})\\\/([0-9]{2})\\\/([0-9]{2})\/\n  const matches = url.match(pattern)\n  if (matches) {\n    return matches.map((m) => m.replace('\/', ''))\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/907","completion":"  let luckyNumArr = [];\n  let luckyNum = 1;\n  let totalNumbers = 0;\n  while (totalNumbers < n) {\n    let isLucky = isDivisible(luckyNum, 2);\n    if (isLucky) {\n      luckyNumArr.push(luckyNum);\n      totalNumbers++;\n    }\n    luckyNum++;\n  }\n  return luckyNumArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/908","completion":"    if (arr[0] === n) {\n        return 0;\n    }\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] === n) {\n            return i;\n        }\n    }\n    return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/909","completion":"  let str = num.toString();\n  let reversed = str.split(\"\").reverse().join(\"\");\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === reversed[i]) {\n      return parseInt(str[i - 1] + reversed.substr(i - 1, str.length - 1));\n    }\n  }\n  return num;\n}","language":"javascript"}
{"task_id":"MBJSP\/910","completion":"    let date = new Date(y, m - 1, d);\n    if (date.getFullYear() == y && date.getMonth() + 1 == m && date.getDate() == d) {\n        return true;\n    } else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/911","completion":"    var heap = new MinHeap(nums.length);\n    for (var i = 0; i < nums.length; i++) {\n        heap.push(nums[i]);\n    }\n    var maxProduct = 1;\n    var maxProductI = 0;\n    var minProductI = 1;\n    while (heap.size() > 0) {\n        var currentMax = heap.pop();\n        var currentMin = heap.pop();\n        var currentProduct = currentMax * currentMin;\n        if (currentMax > currentMin) {\n            if (currentProduct > maxProduct) {\n                maxProduct = currentProduct;\n                maxProductI = currentMaxI;\n                minProductI = currentMinI;\n            } else if (currentProduct === maxProduct) {\n                maxProductI = Math.max(currentMaxI, currentMinI);\n            }\n        } else {\n            if (currentProduct < maxProduct) {\n               ","language":"javascript"}
{"task_id":"MBJSP\/912","completion":"    let sum = n * (n + 1) * m * (m + 1) \/ 4;\n    console.log(sum);\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/913","completion":"  const number = parseInt(string[string.length - 1]);\n  if (isNaN(number)) return false;\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/914","completion":"    \/\/ 0:a 1:b\n    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === s[i + 1]) {\n            count++;\n        } else if (count === 0) {\n            return true;\n        } else {\n            count = 0;\n        }\n    }\n    return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/915","completion":"  \/\/ Write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/916","completion":"  \/\/sort the array\n  a.sort((a, b) => a - b)\n  let result = []\n  for (let i = 0; i < arrSize - 2; i++) {\n    let left = i + 1\n    let right = arrSize - 1\n    let currSum = a[i] + a[left] + a[right]\n    while (left < right) {\n      let tempSum = a[i] + a[left] + a[right]\n      if (tempSum === sum) {\n        result.push(a[i], a[left], a[right])\n        left++\n        right--\n        i++\n      } else if (tempSum > sum) {\n        right--\n      } else if (tempSum < sum) {\n        left++\n      }\n    }\n  }\n  return result\n}","language":"javascript"}
{"task_id":"MBJSP\/917","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/918","completion":"  let dp = Array.from({ length: n + 1 }, () => 0);\n\n  dp[0] = 1;\n\n  for (let i = 1; i <= n; i++) {\n    for (let j = 0; j < m; j++) {\n      if (s[j] <= i) {\n        dp[i] += dp[i - s[j]];\n      }\n    }\n  }\n\n  return dp[n];\n}","language":"javascript"}
{"task_id":"MBJSP\/919","completion":"    return items.reduce((a, b) => a * b, 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/920","completion":"  return testList.filter((arr) => arr.filter((i) => i !== null).length === 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/921","completion":"    if (n < 1) {\n        return [];\n    }\n    let cur = [];\n    for (let i = 0; i < n; i++) {\n        cur.push(testTup[i]);\n    }\n    let res = [];\n    let start = 0;\n    let end = n;\n    while (start < testTup.length) {\n        res.push(cur);\n        cur = [];\n        for (let i = start; i < end; i++) {\n            cur.push(testTup[i]);\n        }\n        start += n;\n        end += n;\n    }\n    if (cur.length !== 0) {\n        res.push(cur);\n    }\n    return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/922","completion":"  let max = -Infinity;\n  let first = 0;\n  let second = 0;\n\n  for (let i = 0; i < arr.length - 1; i += 1) {\n    for (let j = i + 1; j < arr.length; j += 1) {\n      const product = arr[i] * arr[j];\n      if (product > max) {\n        max = product;\n        first = arr[i];\n        second = arr[j];\n      }\n    }\n  }\n\n  return [first, second];\n}","language":"javascript"}
{"task_id":"MBJSP\/923","completion":"  \/\/ Write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/924","completion":"    if(x > y) {\n        return x;\n    } else {\n        return y;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/925","completion":"    var multi = nums[0];\n    for (let i = 1; i < nums.length; i++) {\n        multi *= nums[i];\n    }\n    return multi;\n}","language":"javascript"}
{"task_id":"MBJSP\/926","completion":"  const m_1 = (1 + Math.sqrt(5)) \/ 2;\n  const a = Math.ceil(m_1 * n);\n  const b = Math.floor(n + m \/ 2);\n  return Math.pow(a, b);\n}","language":"javascript"}
{"task_id":"MBJSP\/928","completion":"  let arr = dt.split(\"-\");\n  return `${arr[1]}-${arr[2]}-${arr[0]}`;\n}","language":"javascript"}
{"task_id":"MBJSP\/929","completion":"  \/\/code\n}","language":"javascript"}
{"task_id":"MBJSP\/930","completion":"  return \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/931","completion":"    let sum = 0;\n    let n = 1;\n    for (let i = 1; i <= number; i++) {\n        sum += 3 * n ** 2;\n        n++;\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/932","completion":"    var r = new Array();\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] != undefined) {\n            var found = false;\n            for (var j = 0; j < r.length; j++) {\n                if (l[i] == r[j]) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                r.push(l[i]);\n            }\n        }\n    }\n    return r;\n}","language":"javascript"}
{"task_id":"MBJSP\/933","completion":"    return text.replace(\/([A-Z])\/g, '_$1').toLowerCase();\n}","language":"javascript"}
{"task_id":"MBJSP\/934","completion":"  const num1 = 1;\n  const num2 = 3;\n  let num3 = num2 ** 2;\n  for (let i = 1; i < n; i++) {\n    num3 = num3 * 2 + num1;\n  }\n  return num3 % m;\n}","language":"javascript"}
{"task_id":"MBJSP\/935","completion":"  if (number < 1) {\n    return 0;\n  }\n\n  const n = number * 2;\n  let sum = n * (n + 1) \/ 2;\n\n  return sum + seriesSum(number - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/936","completion":"  const ordMap = {};\n  for (let i = 0; i < ordList.length; i += 1) {\n    ordMap[ordList[i]] = true;\n  }\n  const resList = [];\n  testList.forEach((tuple) => {\n    if (ordMap[tuple[0]]) {\n      resList.unshift(tuple);\n    } else {\n      resList.push(tuple);\n    }\n  });\n  return resList;\n}","language":"javascript"}
{"task_id":"MBJSP\/937","completion":"    const charMap = {};\n\n    for (let char of str1) {\n        if (!charMap[char]) {\n            charMap[char] = 1;\n        } else {\n            charMap[char]++;\n        }\n    }\n\n    let maxChar = '';\n    let maxCharCount = 0;\n\n    for (let char in charMap) {\n        if (charMap[char] > maxCharCount) {\n            maxChar = char;\n            maxCharCount = charMap[char];\n        }\n    }\n\n    return maxChar;\n}","language":"javascript"}
{"task_id":"MBJSP\/938","completion":"    \/\/ write your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/939","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/940","completion":"  const heap = [];\n  \/\/ Add root node to the heap\n  heap.push(arr[0]);\n  for (let i = 1; i < arr.length; i++) {\n    \/\/ Add the node at the current index to the heap\n    heap.push(arr[i]);\n    \/\/ The current node is not greater than its parent\n    let idx = i;\n    while (idx > 0 && heap[idx] < heap[Math.floor((idx - 1) \/ 2)]) {\n      \/\/ Swap the parents of the current node\n      [heap[idx], heap[Math.floor((idx - 1) \/ 2)]] = [\n        heap[Math.floor((idx - 1) \/ 2)],\n        heap[idx],\n      ];\n      \/\/ Update the index\n      idx = Math.floor((idx - 1) \/ 2);\n    }\n  }\n  return heap;\n}","language":"javascript"}
{"task_id":"MBJSP\/941","completion":"  let count = 0;\n\n  for (let i = 0; i < num.length; i++) {\n    if (Array.isArray(num[i])) {\n      count += countElim(num[i])\n    } else {\n      count++\n    }\n  }\n\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/942","completion":"  for (let i = 0; i < checkList.length; i++) {\n    if (testTup.includes(checkList[i])) {\n      return true;\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/943","completion":"  if (num1.length === 0) return num2;\n  if (num2.length === 0) return num1;\n\n  let combined = [];\n\n  let q1 = num1.slice(0);\n  let q2 = num2.slice(0);\n\n  while (q1.length && q2.length) {\n    combined.push(q1[0] > q2[0] ? q1.shift() : q2.shift());\n  }\n\n  combined = combined.concat(q1.length ? q1 : q2);\n\n  return combined;\n}","language":"javascript"}
{"task_id":"MBJSP\/944","completion":"  return text.match(\/\\d+\/g).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/945","completion":"    const set = new Set();\n    for (let i = 0; i < t.length; i++) {\n        const str = t[i];\n        set.add(str);\n    }\n    return set;\n}","language":"javascript"}
{"task_id":"MBJSP\/946","completion":"  const sArr = s.split(\"\");\n  const counts = new Array(26).fill(0);\n  let max = 0;\n  let maxIdx = 0;\n  let temp = [];\n\n  for (let i = 0; i < sArr.length; i++) {\n    const idx = sArr[i].charCodeAt() - 97;\n    counts[idx]++;\n    if (counts[idx] > max) {\n      max = counts[idx];\n      maxIdx = idx;\n    }\n  }\n\n  for (let i = 0; i < sArr.length; i++) {\n    const idx = sArr[i].charCodeAt() - 97;\n    if (counts[idx] === max) {\n      temp.push(sArr[i]);\n    }\n  }\n\n  return temp.map((item) => [item, max]);\n}","language":"javascript"}
{"task_id":"MBJSP\/947","completion":"    let map1 = new Map();\n    let map2 = new Map();\n    list1.forEach(item => {\n        if (map1.has(item.length)) {\n            map1.set(item.length, [...map1.get(item.length), item]);\n        } else {\n            map1.set(item.length, [item])\n        }\n    });\n    for (let item of map1.keys()) {\n        if (map1.get(item).length === 1) {\n            return item;\n        } else {\n            map2.set(item, map1.get(item).length);\n        }\n    }\n    return Math.min(...map2.values());\n}","language":"javascript"}
{"task_id":"MBJSP\/948","completion":"  let item = null;\n  if (tup1.length > index) {\n    item = tup1[index];\n  }\n  return item;\n}","language":"javascript"}
{"task_id":"MBJSP\/949","completion":"  const sortList1 = (list, digits) => {\n    let result = [];\n    const sortList2 = (list, digits) => {\n      if (list.length === 0) return;\n      const list1 = [];\n      const list2 = [];\n      list.map((item, index) => {\n        item.length === digits\n          ? list1.push(item)\n          : list2.push(item);\n      });\n      result.push(list1.sort((a, b) => a - b).concat(list2));\n      return sortList2(list1, digits);\n    };\n    return sortList2(list, digits);\n  };\n\n  return sortList1(testList, 4);\n}","language":"javascript"}
{"task_id":"MBJSP\/950","completion":"    if (year > 2005 && year < 1900) {\n        year = year - 2000;\n    } else if (year > 1900 && year < 2000) {\n        year = year - 1900;\n    }\n\n    var zodiac = [\"Aquarius\", \"Pisces\", \"Aries\", \"Taurus\", \"Gemini\", \"Cancer\", \"Leo\", \"Virgo\", \"Libra\", \"Scorpio\", \"Sagittarius\"];\n\n    return zodiac[year % 12];\n}","language":"javascript"}
{"task_id":"MBJSP\/951","completion":"    \/\/ IMPLEMENT ME\n}","language":"javascript"}
{"task_id":"MBJSP\/952","completion":"  if (n === 0) {\n    return 0;\n  } else if (r === 0) {\n    return 1;\n  }\n\n  return ((n - 1) * ncrModP(n - 1, r - 1, p) + p) % p;\n}","language":"javascript"}
{"task_id":"MBJSP\/953","completion":"    var num = 0;\n    \/\/ find all subsets\n    var total = (1 << n);\n    var bits = 0;\n    var subsets = [];\n    var k = 0;\n    while (bits < total) {\n        \/\/ number of subsets with 1 or 0 elements\n        var numOfSubsets = (1 << k)\n        if (bits >= numOfSubsets) {\n            var subsets = [];\n            for (var i = 0; i < k; i++) {\n                subsets.push(ar[i]);\n            }\n            if (subsets.length >= n) {\n                num++;\n            }\n        }\n        bits++;\n        k++;\n    }\n    return num;\n}","language":"javascript"}
{"task_id":"MBJSP\/954","completion":"    if (saleAmount >= actualCost) {\n        return actualCost - saleAmount;\n    }\n    return null;\n}","language":"javascript"}
{"task_id":"MBJSP\/955","completion":"    \/\/ abundant numbers = the sum of the proper divisors < n\n    \/\/ abundant numbers are greater than 1\n    let arr = [];\n    for (let i = 1; i <= n \/ 2; i++) {\n        if (n % i === 0) {\n            arr.push(i);\n        }\n    }\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return sum < n;\n}","language":"javascript"}
{"task_id":"MBJSP\/956","completion":"  var reg = \/[A-Z]+(?=[A-Z][a-z]*$)\/g\n  var result = text.match(reg)\n  return result\n}","language":"javascript"}
{"task_id":"MBJSP\/957","completion":"  let s = 0;\n  while (n > 0) {\n    s++;\n    n = n >> 1;\n  }\n  return s - 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/958","completion":"  const values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n  const symbols = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'];\n\n  let result = '';\n  for (let i = 0; i < values.length; i++) {\n    while (num >= values[i]) {\n      result += symbols[i];\n      num -= values[i];\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/959","completion":"  var sum = 0;\n  var count = 0;\n  for(var i = 0; i < lst.length; i++) {\n    sum += lst[i];\n    count++;\n  }\n  return sum \/ count;\n}","language":"javascript"}
{"task_id":"MBJSP\/960","completion":"  \/\/ TODO\n}","language":"javascript"}
{"task_id":"MBJSP\/961","completion":"    var romanArr = {\n        \"M\": 1000,\n        \"CM\": 900,\n        \"D\": 500,\n        \"CD\": 400,\n        \"C\": 100,\n        \"XC\": 90,\n        \"L\": 50,\n        \"XL\": 40,\n        \"X\": 10,\n        \"IX\": 9,\n        \"V\": 5,\n        \"IV\": 4,\n        \"I\": 1\n    };\n\n    return s\n        .split('')\n        .map(function (r) { return romanArr[r]; })\n        .reduce(function (a, b) { return a + b; }, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/962","completion":"    var res = 0;\n    for (var i = l; i <= r; i++) {\n        if (i % 2 == 0) {\n            res += i;\n        }\n    }\n    return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/963","completion":"    if (z === 0) {\n        return [\"one solution\", 0];\n    } else {\n        const a = Math.abs(x);\n        const b = Math.abs(y);\n        const c = Math.abs(z);\n        if (a > b) {\n            if (a > c) {\n                return [\"Two solutions\", a];\n            } else {\n                return [\"Two solutions\", c];\n            }\n        } else {\n            if (b > c) {\n                return [\"Two solutions\", b];\n            } else {\n                return [\"Two solutions\", c];\n            }\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/964","completion":"  return s.length % 2 === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/965","completion":"  return text\n    .replace(\/[a-z]|[A-Z]\/g, function (char) {\n      return '_' + char.toLowerCase()\n    })\n    .slice(1)\n}","language":"javascript"}
{"task_id":"MBJSP\/966","completion":"  return tuple1.filter(function (elem) {\n    return elem.length > 0;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/967","completion":"    let lowerCaseString = string.toLowerCase();\n    let vowelList = \"aeiou\";\n    let result = \"not accepted\";\n    for (let i = 0; i < string.length; i++) {\n        for (let j = 0; j < vowelList.length; j++) {\n            if (string[i] === vowelList[j]) {\n                result = \"accepted\";\n            }\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/968","completion":"    return Math.floor(Math.max(a, b) \/ n) * n;\n}","language":"javascript"}
{"task_id":"MBJSP\/969","completion":"  \/\/ Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/970","completion":"  return x > y ? y : x;\n}","language":"javascript"}
{"task_id":"MBJSP\/971","completion":"  var maxSegments = 0;\n\n  var nSegments = 0;\n  while (n > 0) {\n    if (n === a || n === b || n === c) {\n      maxSegments++;\n    } else {\n      nSegments = 0;\n      while (n > 0 && n > a && n > b && n > c) {\n        nSegments++;\n        n--;\n      }\n      maxSegments = Math.max(nSegments, maxSegments);\n    }\n  }\n  return maxSegments;\n}","language":"javascript"}
{"task_id":"MBJSP\/972","completion":"  if (!Array.isArray(testTup1)) {\n    throw Error('The first argument must be an array')\n  }\n\n  if (!Array.isArray(testTup2)) {\n    throw Error('The second argument must be an array')\n  }\n\n  const resultTup = testTup1.concat(testTup2)\n  return resultTup\n}","language":"javascript"}
{"task_id":"MBJSP\/973","completion":"    if (s.length === 0) {\n        return ''\n    }\n\n    if (s.length === 1) {\n        return s[0]\n    }\n\n    let result = ''\n    for (let i = 0; i < s.length - d; i++) {\n        result += s[i]\n    }\n    for (let i = 0; i < s.length - d; i++) {\n        result += s[i + d]\n    }\n    return result\n}","language":"javascript"}
{"task_id":"MBJSP\/974","completion":"  \/**\n   * We can store our sums in an object so we can quickly get the smallest value from the object\n   * instead of having to iterate through all values\n   *\/\n  let sums = {};\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < a[i].length; j++) {\n      if (!sums[i]) {\n        sums[i] = [];\n      }\n      sums[i][j] = (sums[i][j] || 0) + a[i][j];\n    }\n  }\n  return getMinSum(sums, 0, 0);\n}","language":"javascript"}
